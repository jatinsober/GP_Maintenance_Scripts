------
--DEV BY : Jitendra Lodwal  
--DATE  : 04-OCT-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : seqment_error_resolved
------
SET SEARCH_PATH TO WORKAREA;

CREATE OR REPLACE FUNCTION Mep_Main_Load_Ics (P_REPORT_DATE IN DATE) RETURNS VOID AS $$
DECLARE
P_DATE DATE;
ERR_MSG    VARCHAR(500);

F_MD_REPORT_DT     MEP_DTL_ICS.MD_REPORT_DT%TYPE;
BEGIN

CREATE TEMP TABLE SQL_TEXT (SQL_TEXT VARCHAR(7000));

P_DATE :=  P_REPORT_DATE; -- START DATE
TRUNCATE TABLE MEP_DTL_ICS ;
TRUNCATE TABLE MEP_DTL_ICS_EXT ;
TRUNCATE TABLE MEP_DTL_ICS_TEMP;
        INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
        VALUES  (P_DATE,'PROGRAM FOR ICS - START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
        INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
        VALUES  (P_DATE,'INSERT MEP_DTL_ICS_EXT FOR ICS - START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
      
        BEGIN

	    INSERT INTO MEP_DTL_ICS_EXT
           (MD_ACCT_NO,MD_ACCT_ID,MD_REPORT_DT,MD_APPL_SYS_ID, MD_ACCT_OPEN_DT, MD_ACCT_STAT,
            MD_CYCLE,  MD_BLOCK_CD, MD_CRDT_LMT,MD_INSURANCE,MD_MTH_ON_BOOK,
            MD_APR, MD_LN_TERM, MD_INT_RT, MD_OS_AMT,MD_LN_PURPOSE,
            MD_LN_SUB_PROD,MD_PAID_PCT,MD_MATUR_DT,MD_INSTALL_IND, MD_CLOSED_IND,
            MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_INDUSTRY,--UPDATE1
            MD_LN_AGE,MD_PRINC_LN_AMT,MD_INT_AMT,
            MD_TOT_AMT_PAID,MD_PYMT_TYP,
            MD_REMAIN_TERMS,MD_LN_OPEN_DT,
            MD_CUR_INT_UNEARN,MD_FEE_AS,MD_SEC_IND,MD_CI_PYMTS_PD,
            MD_WOFF_IND,MD_PRINC_REMAIN_AMT,MD_IIS_TOT_OS ,--UPDATE2
            MD_TOT_PRINC_PAID,
	        MD_MIA_TOT,MD_PAST_DUE,MD_PYMT_MTD,MD_DELI_AMT,MD_RECOVERY_AMT,
			MD_AKPK,MD_ASSET_POSSESSION,MD_ASSET_SALE_DT,MD_ASSET_TYPE,
			MD_CAR_MAKE,MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_COLL_VALUE,
			MD_PAYMENT,MD_NON_ACCRUAL,MD_CLOSED,MD_GROSS_WRITTEN_OFF,MD_INT_PAID)

			SELECT A.ACCT_ACCT_NO ,A.ACCT_ACCT_ID,A.ACCT_BUS_CYC_DT MD_REPORT_DT,A.ACCT_APPL_SYS_ID MD_APPL_SYS_ID,
            A.ACCT_OPEN_DT MD_ACCT_OPEN_DT,
			A.ACCT_STAT_CD MD_ACCT_STAT,
			--CASE WHEN IIS_WRITE_OFF_STAT ='X' THEN IIS_WRITE_OFF_STAT ELSE  A.ACCT_STAT_CD END AS MD_ACCT_STAT,
			TO_CHAR(A.ACCT_OPEN_DT,'DDMONYYYY') MD_CYCLE,
            A.ACCT_STAT_CD MD_BLOCK_CD, A.ACCT_LIMIT_AMT MD_CRDT_LMT,
            'MOTOR INSURANCE' MD_INSURANCE,
            CASE WHEN A.ACCT_OPEN_DT <> '01-JAN-0001'
            THEN ROUND(((A.ACCT_BUS_CYC_DT-A.ACCT_OPEN_DT)/30.00),0) ELSE 0 END AS MD_MTH_ON_BOOK,
            A.ACCT_INT_RT MD_APR,A.ACCT_TERM_OF_LOAN MD_LN_TERM, A.ACCT_INT_RT MD_INT_RT, A.ACCT_CUR_BAL MD_OS_AMT,
            'HP' MD_LN_PURPOSE,
            A.ACCT_PROD_CD MD_LN_SUB_PROD,CASE WHEN A.ACCT_ORI_BAL > 0 THEN ROUND(A.ACCT_CUR_BAL/A.ACCT_ORI_BAL,2) ELSE 0 END AS MD_PAID_PCT,
            A.ACCT_MATUR_DATE MD_MATUR_DT, 'Y' MD_INSTALL_IND,

--            DECODE(A.ACCT_STAT_CD,'C','Y','N') MD_CLOSED_IND,
CASE UPPER(A.ACCT_STAT_CD)
WHEN 'C'
THEN 'Y'
ELSE '00'
END AS MD_CLOSED_IND,

            B.CI_LST_PMT_AMT MD_LST_PYMT_AMT, B.CI_LST_PMT_DT MD_LST_PYMT_DT,B.CI_BNM_SUB_PURP MD_INDUSTRY,--UPDATE1
            ROUND((B.CI_BUS_CYC_DT-B.CI_ADVANCE_DT)/30.00,0) MD_LN_AGE,
            B.CI_ORIG_PROCEEDS MD_PRINC_LN_AMT, B.CI_ORIG_UNEARN MD_INT_AMT,
            B.CI_BAL_COLL MD_TOT_AMT_PAID, 'STRAIGHT' MD_PYMT_TYP,
            B.CI_PYMTS_RMNG MD_REMAIN_TERMS, B.CI_LC_OPEN_DATE MD_LN_OPEN_DT,
            B.CI_CUR_INT_UNEARN MD_CUR_INT_UNEARN,
			CAST(B.CI_FEE_COLL_MTD AS NUMERIC) AS MD_FEE_AS,
			 NULL MD_SEC_IND,
            B.CI_PYMTS_PD MD_CI_PYMTS_PD,
            CASE WHEN D.IIS_WRITE_OFF_STAT='X' THEN 'Y' ELSE 'N' END AS MD_WOFF_IND,
             D.IIS_PRINC_OUTSTANDING MD_PRINC_REMAIN_AMT ,
            D.IIS_TOTAL_OUTSTANDING MD_IIS_TOT_OS
            ,nvl(CAST(B.CI_ORIG_PROCEEDS AS INTEGER),0)-nvl(CAST(D.IIS_PRINC_OUTSTANDING AS INTEGER),0) MD_TOT_PRINC_PAID,
	        D.IIS_MOS_IN_ARREARS,D.IIS_MOS_IN_ARREARS,B.CI_MTD_PYMT_AMT,
            CASE WHEN D.IIS_WRITE_OFF_STAT='X' THEN A.ACCT_CUR_BAL ELSE B.CI_AMT_PAST_DUE END AS MD_DELI_AMT,
	        CASE WHEN D.IIS_WRITE_OFF_STAT='X' THEN B.CI_MTD_PYMT_AMT ELSE 0 END AS MD_RECOVERY_AMT,
			B.CI_RENEGOTIATE AS AKPK ,CASE WHEN A.ACCT_STAT_CD  = 'A'  AND B.CI_SEC_STATUS_CD = 'D' THEN 'Y' ELSE 'N' END AS ASSET_POSSESSION,
			B.CI_INS_DISPOS_DT AS ASSET_SALE_DT, CASE WHEN B.CI_COLL_NEW = 'N'  THEN 'NEW' WHEN  B.CI_COLL_NEW = 'U' THEN 'USED'
            WHEN B.CI_COLL_NEW = 'R' THEN 'RECON' ELSE ' ' END AS ASSET_TYPE,B.CI_BNM_MAKE AS CAR_MAKE,B.CI_WATCHLIST_TAG AS WATCHLIST_FLAG,
			B.CI_IFRS_TAG AS IND_IMPAIRED,B.CI_CASH_PRICE AS COLL_VALUE,B.CI_MTD_PYMT_AMT AS PAYMENT,
			CASE WHEN A.ACCT_NPL_STAT IN ('B','D','S') THEN 'Y' ELSE 'N' END AS NON_ACCRUAL,
			CASE WHEN ACCT_STAT_CD = 'C' THEN 'Y' ELSE 'N' END AS CLOSED,
            CASE WHEN D.IIS_WRITE_OFF_STAT  = 'X' THEN A.ACCT_CUR_BAL ELSE 0 END AS GROSS_WRITTEN_OFF,
			CI_LA_CHG_COLL_MTD AS INT_PAID
			FROM ACCT_HT_ICS A  ,CONSUMER_INST_LN_HT_ICS B,
            CREDIT_PROVISIONS_HT_ICS D
            WHERE --A.ACCT_ACCT_ID (+)=C.CAR_R_ACCT_ID
            A.ACCT_ACCT_ID  =B.CI_ACCT_ID
            AND A.ACCT_ACCT_ID  =D.IIS_ACCT_ID
			AND A.ACCT_APPL_SYS_ID='ICS'
			AND A.ACCT_STAT_CD <>'C'
            AND A.ACCT_BUS_CYC_DT= P_DATE;
		

		INSERT INTO MEP_DTL_ICS_EXT
           (MD_ACCT_NO,MD_ACCT_ID,MD_REPORT_DT,MD_APPL_SYS_ID, MD_ACCT_OPEN_DT, MD_ACCT_STAT,
            MD_CYCLE,  MD_BLOCK_CD, MD_CRDT_LMT,MD_INSURANCE,MD_MTH_ON_BOOK,
            MD_APR, MD_LN_TERM, MD_INT_RT, MD_OS_AMT,MD_LN_PURPOSE,
            MD_LN_SUB_PROD,MD_PAID_PCT,MD_MATUR_DT,MD_INSTALL_IND, MD_CLOSED_IND,
            MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_INDUSTRY,--UPDATE1
            MD_LN_AGE,MD_PRINC_LN_AMT,MD_INT_AMT,
            MD_TOT_AMT_PAID,MD_PYMT_TYP,
            MD_REMAIN_TERMS,MD_LN_OPEN_DT,
            MD_CUR_INT_UNEARN,MD_FEE_AS,MD_SEC_IND,MD_CI_PYMTS_PD,
            MD_WOFF_IND,MD_PRINC_REMAIN_AMT,MD_IIS_TOT_OS ,--UPDATE2
            MD_TOT_PRINC_PAID,
	        MD_MIA_TOT,MD_PAST_DUE,MD_PYMT_MTD,MD_DELI_AMT,MD_RECOVERY_AMT,
			MD_AKPK,MD_ASSET_POSSESSION,MD_ASSET_SALE_DT,MD_ASSET_TYPE,
			MD_CAR_MAKE,MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_COLL_VALUE,MD_PAYMENT,MD_NON_ACCRUAL,MD_CLOSED,
			MD_GROSS_WRITTEN_OFF,MD_INT_PAID)

			SELECT A.ACCT_ACCT_NO ,A.ACCT_ACCT_ID,A.ACCT_BUS_CYC_DT MD_REPORT_DT,A.ACCT_APPL_SYS_ID MD_APPL_SYS_ID,
            A.ACCT_OPEN_DT MD_ACCT_OPEN_DT,
			A.ACCT_STAT_CD MD_ACCT_STAT,
			TO_CHAR(A.ACCT_OPEN_DT,'DDMONYYYY') MD_CYCLE,
            A.ACCT_STAT_CD MD_BLOCK_CD, A.ACCT_LIMIT_AMT MD_CRDT_LMT,
            'MOTOR INSURANCE' MD_INSURANCE,
            CASE WHEN A.ACCT_OPEN_DT <> '01-JAN-0001'
            THEN ROUND(((A.ACCT_BUS_CYC_DT-A.ACCT_OPEN_DT)/30.00),0) ELSE 0 END AS MD_MTH_ON_BOOK,
            A.ACCT_INT_RT MD_APR,A.ACCT_TERM_OF_LOAN MD_LN_TERM, A.ACCT_INT_RT MD_INT_RT, A.ACCT_CUR_BAL MD_OS_AMT,
            'HP' MD_LN_PURPOSE,
            A.ACCT_PROD_CD MD_LN_SUB_PROD,CASE WHEN A.ACCT_ORI_BAL > 0 THEN ROUND(A.ACCT_CUR_BAL/A.ACCT_ORI_BAL,2) ELSE 0 END AS MD_PAID_PCT,
            A.ACCT_MATUR_DATE MD_MATUR_DT, 'Y' MD_INSTALL_IND,
           -- DECODE(A.ACCT_STAT_CD,'C','Y','N') MD_CLOSED_IND,
CASE UPPER(A.ACCT_STAT_CD)
WHEN 'C'
THEN 'Y'
ELSE '00'
END AS MD_CLOSED_IND,
            B.CI_LST_PMT_AMT MD_LST_PYMT_AMT, B.CI_LST_PMT_DT MD_LST_PYMT_DT,B.CI_BNM_SUB_PURP MD_INDUSTRY,--UPDATE1
            ROUND((B.CI_BUS_CYC_DT-B.CI_ADVANCE_DT)/30.00,0) MD_LN_AGE,
            B.CI_ORIG_PROCEEDS MD_PRINC_LN_AMT, B.CI_ORIG_UNEARN MD_INT_AMT,
            B.CI_BAL_COLL MD_TOT_AMT_PAID, 'STRAIGHT' MD_PYMT_TYP,
            B.CI_PYMTS_RMNG MD_REMAIN_TERMS, B.CI_LC_OPEN_DATE MD_LN_OPEN_DT,
            B.CI_CUR_INT_UNEARN MD_CUR_INT_UNEARN,
			CAST(B.CI_FEE_COLL_MTD AS NUMERIC) AS MD_FEE_AS,
			 NULL MD_SEC_IND,
            B.CI_PYMTS_PD MD_CI_PYMTS_PD,
            CASE WHEN D.IIS_WRITE_OFF_STAT='X' THEN 'Y' ELSE 'N' END AS MD_WOFF_IND,
            D.IIS_PRINC_OUTSTANDING MD_PRINC_REMAIN_AMT ,
            D.IIS_TOTAL_OUTSTANDING MD_IIS_TOT_OS
            ,COALESCE(B.CI_ORIG_PROCEEDS,0)-COALESCE(D.IIS_PRINC_OUTSTANDING,0) MD_TOT_PRINC_PAID,
	        D.IIS_MOS_IN_ARREARS,D.IIS_MOS_IN_ARREARS,B.CI_MTD_PYMT_AMT,
            CASE WHEN D.IIS_WRITE_OFF_STAT='X' THEN A.ACCT_CUR_BAL ELSE B.CI_AMT_PAST_DUE END AS MD_DELI_AMT,
	        CASE WHEN D.IIS_WRITE_OFF_STAT='X' THEN B.CI_MTD_PYMT_AMT ELSE 0 END AS MD_RECOVERY_AMT,
			B.CI_RENEGOTIATE AS AKPK ,CASE WHEN A.ACCT_STAT_CD  = 'A'  AND B.CI_SEC_STATUS_CD = 'D' THEN 'Y' ELSE 'N' END AS ASSET_POSSESSION,
			B.CI_INS_DISPOS_DT, CASE WHEN B.CI_COLL_NEW = 'N'  THEN 'NEW' WHEN  B.CI_COLL_NEW = 'U' THEN 'USED'
            WHEN B.CI_COLL_NEW = 'R' THEN 'RECON' ELSE ' ' END AS ASSET_TYPE,B.CI_BNM_MAKE AS CAR_MAKE,B.CI_WATCHLIST_TAG  WATCHLIST_FLAG,
			B.CI_IFRS_TAG AS IND_IMPAIRED ,B.CI_CASH_PRICE AS COLL_VALUE,B.CI_MTD_PYMT_AMT AS PAYMENT,
			CASE WHEN A.ACCT_NPL_STAT IN ('B','D','S') THEN 'Y' ELSE 'N' END AS NON_ACCRUAL,
 		 	CASE WHEN ACCT_STAT_CD = 'C' AND (A.ACCT_CUR_BAL  = 0 OR B.CI_INT_FEE_DUE = 0 ) THEN 'Y' ELSE 'N' END AS CLOSED,
            CASE WHEN D.IIS_WRITE_OFF_STAT  = 'X' THEN A.ACCT_CUR_BAL ELSE 0 END AS GROSS_WRITTEN_OFF,
			CI_LA_CHG_COLL_MTD AS INT_PAID
			FROM ACCT_HT_ICS A  ,CONSUMER_INST_LN_HT_ICS B,
            CREDIT_PROVISIONS_HT_ICS D
            WHERE 
            A.ACCT_ACCT_ID  =B.CI_ACCT_ID
            AND A.ACCT_ACCT_ID  =D.IIS_ACCT_ID
			AND A.ACCT_APPL_SYS_ID='ICS'
	    		AND A.ACCT_BUS_CYC_DT= P_DATE
	   AND ( ( A.ACCT_STAT_CD  = 'C'  AND TRIM(TO_CHAR(A.ACCT_CLOSE_DT, 'MMYYYY')) = TRIM(TO_CHAR(A.ACCT_BUS_CYC_DT, 'MMYYYY')))	   
	        OR (A.ACCT_STAT_CD  = 'C' AND  (A.ACCT_CUR_BAL  <> 0 OR B.CI_INT_FEE_DUE <> 0 )));


		EXCEPTION
		WHEN OTHERS THEN
		ERR_MSG := '-1,ERROR';
	    INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
        VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR(ERR_MSG,1,100) );
        END;

        -- beginging globall
       INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START)
       VALUES  (P_DATE,'INSERT MEP_DTL_ICS_TEMP- START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS'));
     


       BEGIN
       INSERT INTO MEP_DTL_ICS_TEMP(MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,--MD_CUR_INT_UNEARN,MD_CUR_INT_UNEARN_PREV,
         MD_PREV_DELI,MD_PREV_BAL_OS)
       SELECT MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,--MD_CUR_INT_UNEARN,CI_CUR_INT_UNEARN,
         C.IIS_MOS_IN_ARREARS,A.ACCT_CUR_BAL
       FROM MEP_DTL_ICS_EXT LEFT OUTER JOIN ACCT_HT_ICS_PREV A ON MD_ACCT_ID = ACCT_ACCT_ID
LEFT OUTER JOIN CREDIT_PROVISIONS_HT_ICS_PREV C ON MD_ACCT_ID =IIS_ACCT_ID;
     
       END;


       INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START)
       VALUES  (P_DATE,'INSERT MEP_DTL_ICS-START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS'));
     
	   INSERT INTO MEP_DTL_ICS
            (MD_ACCT_NO,MD_ACCT_ID,MD_REPORT_DT,MD_APPL_SYS_ID, MD_ACCT_OPEN_DT, MD_ACCT_STAT,
            MD_CYCLE,  MD_BLOCK_CD, MD_CRDT_LMT,MD_INSURANCE,MD_MTH_ON_BOOK,
            MD_APR, MD_LN_TERM, MD_INT_RT, MD_OS_AMT,MD_LN_PURPOSE,
            MD_LN_SUB_PROD,MD_PAID_PCT,MD_MATUR_DT,MD_INSTALL_IND,MD_CLOSED_IND,
            MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_INDUSTRY,--UPDATE1
            MD_LN_AGE,MD_PRINC_LN_AMT,MD_INT_AMT,
            MD_TOT_AMT_PAID,MD_PYMT_TYP,
            MD_REMAIN_TERMS,MD_LN_OPEN_DT,
            MD_CUR_INT_UNEARN,MD_FEE_AS,MD_SEC_IND,MD_CI_PYMTS_PD,
            MD_WOFF_IND,MD_PRINC_REMAIN_AMT,MD_IIS_TOT_OS ,--UPDATE2
            MD_TOT_PRINC_PAID,
	        MD_MIA_TOT,MD_PAST_DUE,MD_PYMT_MTD,MD_DELI_AMT,MD_RECOVERY_AMT,
			MD_PREV_DELI,MD_PREV_BAL_OS,MD_AKPK, MD_ASSET_POSSESSION,MD_ASSET_SALE_DT,MD_ASSET_TYPE,MD_CAR_MAKE,
			MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_COLL_VALUE,MD_PAYMENT,MD_NON_ACCRUAL,MD_CLOSED,
			MD_GROSS_WRITTEN_OFF,MD_INT_PAID) --,MD_REVENUE)
          SELECT E.MD_ACCT_NO,E.MD_ACCT_ID,E.MD_REPORT_DT,E.MD_APPL_SYS_ID, E.MD_ACCT_OPEN_DT,
		    E.MD_ACCT_STAT,E.MD_CYCLE,E.MD_BLOCK_CD, E.MD_CRDT_LMT,E.MD_INSURANCE,
			E.MD_MTH_ON_BOOK,E.MD_APR, E.MD_LN_TERM,
			E.MD_INT_RT,E.MD_OS_AMT,E.MD_LN_PURPOSE,
            E.MD_LN_SUB_PROD,E.MD_PAID_PCT,MD_MATUR_DT,E.MD_INSTALL_IND, E.MD_CLOSED_IND,
            E.MD_LST_PYMT_AMT,E.MD_LST_PYMT_DT,E.MD_INDUSTRY,--UPDATE1
            E.MD_LN_AGE,E.MD_PRINC_LN_AMT,E.MD_INT_AMT,
            E.MD_TOT_AMT_PAID,E.MD_PYMT_TYP,
            E.MD_REMAIN_TERMS,E.MD_LN_OPEN_DT,
            E.MD_CUR_INT_UNEARN,E.MD_FEE_AS,E.MD_SEC_IND,E.MD_CI_PYMTS_PD,
            E.MD_WOFF_IND,E.MD_PRINC_REMAIN_AMT,E.MD_IIS_TOT_OS ,--UPDATE2
            E.MD_TOT_PRINC_PAID,
	        E.MD_MIA_TOT,E.MD_PAST_DUE,E.MD_PYMT_MTD,E.MD_DELI_AMT,E.MD_RECOVERY_AMT,
			T.MD_PREV_DELI,T.MD_PREV_BAL_OS,E.MD_AKPK, E.MD_ASSET_POSSESSION,
			E.MD_ASSET_SALE_DT,E.MD_ASSET_TYPE,E.MD_CAR_MAKE,E.MD_WATCHLIST_FLAG,
			E.MD_IND_IMPAIRED,E.MD_COLL_VALUE,E.MD_PAYMENT,E.MD_NON_ACCRUAL,E.MD_CLOSED,
			E.MD_GROSS_WRITTEN_OFF,E.MD_INT_PAID
 	   FROM MEP_DTL_ICS_EXT E,MEP_DTL_ICS_TEMP T
        WHERE E.MD_ACCT_ID = T.MD_ACCT_ID;
		
       INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START)
       VALUES  (P_DATE,'INSERT MEP_DTL_ICS- END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS'));
     

	 
		  
END;  
$$
LANGUAGE PLPGSQL;
