------
--DEV BY : Jitendra Lodwal  
--DATE  : 25-AUG-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------

SET SEARCH_PATH TO WORKAREA;

CREATE OR REPLACE FUNCTION Mep_Sub_Load_Ims(P_DATE IN DATE) RETURNS VOID AS $$
DECLARE

P_RPT_DT  DATE;


BEGIN

BEGIN

P_RPT_DT :=P_DATE;

INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE1 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



/* commented on 8th march 2012 by jitendra

UPDATE MEP_DTL_IMS

SET MD_AVAILABLE_BAL = COALESCE(MD_OS_AMT,0) + COALESCE(MD_DRAW_LMT,0) ,MD_PYMT_TYP ='revolving',

MD_PRINC_LN_AMT= COALESCE(MD_CRDT_LMT,0),

MD_LN_OPEN_DT =MD_ACCT_OPEN_DT;
*/

Create temp table T1 as SELECT COALESCE(MD_OS_AMT,0) + COALESCE(MD_DRAW_LMT,0) As A,MD_PYMT_TYP as MD_PYMT_TYP,MD_PRINC_LN_AMT as MD_PRINC_LN_AMT, MD_LN_OPEN_DT as MD_LN_OPEN_DT from
workarea.mep_dtl_ims WHERE MD_PYMT_TYP ='revolving' AND
MD_PRINC_LN_AMT= COALESCE(MD_CRDT_LMT,0) AND
MD_LN_OPEN_DT =MD_ACCT_OPEN_DT ;

UPDATE WORKAREA.MEP_DTL_IMS 

SET MD_AVAILABLE_BAL = T1.A , MD_PYMT_TYP = t1.MD_PYMT_TYP,

MD_PRINC_LN_AMT= t1.MD_PRINC_LN_AMT,

MD_LN_OPEN_DT = t1.MD_LN_OPEN_DT FROM  T1;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_MIN_AMT_DUE  =MD_AVAILABLE_BAL ,

MD_BLOCK_CD_REASON ='Excess'

WHERE MD_AVAILABLE_BAL <0;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_DELI_AMT = MD_MIN_AMT_DUE,

MD_OVER_LMT_AMT =MD_MIN_AMT_DUE;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_AMT_DUE = 0

WHERE MD_OS_AMT > 0;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_AMT_DUE = MD_OS_AMT

WHERE MD_AVAILABLE_BAL >= 0

AND MD_AMT_DUE IS NULL;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_AMT_DUE = COALESCE(MD_OS_AMT,0) -COALESCE(MD_AVAILABLE_BAL,0)

WHERE MD_AVAILABLE_BAL < 0

AND MD_AMT_DUE IS NULL;

--COMMIT;

END;


BEGIN

UPDATE MEP_DTL_IMS

SET MD_RENEW_L1M='Y'

WHERE TO_CHAR(MD_RENEW_DT,'MON-YYYY')= TO_CHAR(P_RPT_DT,'MON-YYYY');

--COMMIT;





UPDATE MEP_DTL_IMS SET MD_RENEW_MTD ='Y' WHERE MD_RENEW_L1M='Y';

--COMMIT;

UPDATE MEP_DTL_IMS SET MD_RENEW_MTD ='N' WHERE MD_RENEW_MTD IS NULL;

--COMMIT;

INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE2 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;

	---------------------- END : UPDATE RENEWAL INDICATOR ---------------------------------------

--------------- UPDATE MIA TOTAL FROM DELI TABLE -------------------------------------------

UPDATE MEP_DTL_IMS

SET   MD_MIA_TOT = MD_PAST_DUE,

      MD_DELI_BUCKET=MD_PAST_DUE,

      MD_DELI_AT_PD_L1M=MD_PAST_DUE,

      MD_MAX_DELI_L1M=MD_PAST_DUE;

--MD_MIN_AMT_DUE  = MD_DELI_AMT;

--COMMIT;

INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE3 MEP_DTL_IMS  FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;

---------------- START : UPDATE COINCIDENT DELI ME AND CYC -----------------------------------------

UPDATE MEP_DTL_IMS

SET MD_COINDC_DELI_ME = ROUND((COALESCE(MD_DELI_AMT,0) / COALESCE(MD_OS_AMT,0)),2)

WHERE MD_OS_AMT <> 0  ;

--COMMIT;

---------------- END : UPDATE COINCIDENT DELI ME AND CYC -----------------------------------------

---------------- START : UPDATE SOC AND EOM BILL -----------------------------------------



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE4 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;

---------------- END :  TO UPDATE THE REVENUE AMT ------------------------------------------------

UPDATE MEP_DTL_IMS

SET MD_NET_RECEIVE_AVG = ROUND((COALESCE(MD_OS_AMT,0) + COALESCE(MD_PREV_BAL_OS,0)) / 2, 2);

--COMMIT;

---------------- END ; TO GET AVG NET RECEIVABLES ----------------------------------------------



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE5 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_DELI_SIZE_L1M=MD_DELI_AMT;

--COMMIT;



-------------- END UPDATE DELI SIZE L1M ------------------------------------------------

-------------- START DPD AMT - ACCORDING TO MIA -----------------------------------------

-------------- END DPD AMT - ACCORDING TO MIA -----------------------------------------

-------------- START UPDATING DPD INDICATOR -------------------------------------------


INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE6 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



--------------  UPDATE THE EVER MIA 1-8 + FOR L1M ----------------------------------------------



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE7 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;

-------------- END UPDATE THE EVER MIA 1-8 + FOR L1M----------------------------------------------

-------------- START UPDATE OVLIMIT CNT FOR L1M --------------------------------------------

UPDATE MEP_DTL_IMS

SET MD_OVER_LMT_CNT_L1M=1

WHERE  MD_OVER_LMT_AMT <> 0;

--COMMIT;

UPDATE MEP_DTL_IMS

SET MD_OVER_LMT_CNT_L1M = 0

WHERE MD_OVER_LMT_CNT_L1M IS NULL;

--COMMIT;



-- -------------- START UPDATE OVLIMIT CNT FOR L1M --------------------------------------------

-- --------------- START UPDATE  DELI COUNT ---------------------------------------------------



--------------- END UPDATE DELI COUNT ---------------------------------------------------

----- UPDATE ACTIVE INDICATOR ----------------------------

INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE8 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;

BEGIN

UPDATE MEP_DTL_IMS

SET MD_ACTIVE_IND='Y'

WHERE ROUND((MD_REPORT_DT - MD_LST_PYMT_DT)/30,0) <='3';

--COMMIT;

UPDATE MEP_DTL_IMS

SET MD_ACTIVE_IND='N'

WHERE  MD_ACTIVE_IND IS NULL;

--COMMIT;

END;







INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE9 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_OVER_LMT_PCT= COALESCE(MD_OVER_LMT_AMT,0) / COALESCE(MD_DRAW_LMT,0)

WHERE  COALESCE(MD_DRAW_LMT,0) <> 0;

--COMMIT;





--INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

--VALUES  (P_DATE,'UPDATE10 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;





INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE11 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PYMT_MTD = COALESCE(MD_PREV_BAL_OS,0) - COALESCE(MD_OS_AMT,0),

MD_TOT_PYMT_L1M = COALESCE(MD_PREV_BAL_OS,0) - COALESCE(MD_OS_AMT,0),

MD_AVG_PAYMENT_L1M = COALESCE(MD_PREV_BAL_OS,0) - COALESCE(MD_OS_AMT,0)

WHERE COALESCE(MD_PREV_BAL_OS,0) - COALESCE(MD_OS_AMT,0) < 0 ;

--COMMIT;







UPDATE MEP_DTL_IMS

SET MD_TOT_AMT_PAID =  COALESCE(MD_PYMT_MTD,0)

WHERE MD_PYMT_MTD  <0;

--COMMIT;



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE12 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_RECOVERY_AMT = COALESCE(MD_PYMT_MTD,0)

WHERE MD_ACCT_GL_GRP_CD = '029';

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_REVOLVE_BAL =COALESCE(MD_OS_AMT,0) + COALESCE(MD_PYMT_MTD,0);

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_REVOLVE_RT_OS_BAL =COALESCE(MD_REVOLVE_BAL,0) /COALESCE(MD_OS_AMT,0)

WHERE COALESCE(MD_OS_AMT,0) <> 0;

--COMMIT;





INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE13 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PYMT_RT = COALESCE(MD_PYMT_MTD,0) /COALESCE(MD_PREV_BAL_OS,0)

WHERE COALESCE(MD_PREV_BAL_OS,0) <> 0;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PYMT_RT = 9999.999999

WHERE COALESCE(MD_PREV_BAL_OS,0) = 0 AND  MD_PYMT_RT > 0;

--COMMIT;







INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE14 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PYMT_RT = 9999.999999

WHERE  MD_PYMT_RT > 9999.999999;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PYMT_RT = -9999.999999

WHERE  MD_PYMT_RT < -9999.999999;

--COMMIT;



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE15 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PAID_PCT =COALESCE(MD_OS_AMT,0) /COALESCE(MD_DRAW_LMT,0)

WHERE COALESCE(MD_DRAW_LMT,0) <> 0;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_UTILIZTN = -(MD_OS_AMT /COALESCE(MD_DRAW_LMT,0)),

MD_PAID_PCT = -(MD_OS_AMT /COALESCE(MD_DRAW_LMT,0))

WHERE COALESCE(MD_DRAW_LMT,0) <> 0

AND COALESCE(MD_OS_AMT,0) < 0;

--COMMIT;







INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE16 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_WOFF_IND ='Y'

WHERE MD_ACCT_GL_GRP_CD='029';

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_WOFF_IND='N'

WHERE MD_WOFF_IND IS NULL ;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_WOFF_AMT = MD_OS_AMT

WHERE MD_ACCT_GL_GRP_CD='029';

--COMMIT;



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE17 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;





UPDATE MEP_DTL_IMS

SET MD_WOFF_AMT = 0

WHERE MD_WOFF_AMT IS NULL;

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_NET_CRDT_LOSS = COALESCE(MD_WOFF_AMT,0) - COALESCE(MD_RECOVERY_AMT,0);

--COMMIT;



UPDATE MEP_DTL_IMS

SET MD_PRINC_REMAIN_AMT = COALESCE(MD_OS_AMT,0)

WHERE  MD_OS_AMT < 0;

--COMMIT;





INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE18 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE19 MEP_DTL_IMS FOR IMS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;





UPDATE MEP_DTL_IMS

SET MD_PROD_CD = PROD_SHORT_DESC

FROM MEP_PRODUCT_IMS

WHERE MD_LN_SUB_PROD=PROD_PROD_CD

AND PROD_FIN_INST_NO='001';

--COMMIT;



INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )

VALUES  (P_DATE,'UPDATE19 MEP_DTL_IMS FOR IMS-END ',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );

--COMMIT;



   END; -- END ICS EXTRACTION

END;  -- GLOBAL END
$$

LANGUAGE PLPGSQL;



