# create a backup script for automated backup using shell

#!/bin/bash

# Replace the variables with your Greenplum connection details
DB_HOST="your_greenplum_host"
DB_PORT="your_greenplum_port"
DB_NAME="your_greenplum_database"
DB_USER="your_greenplum_user"
DB_PASSWORD="your_greenplum_password"

# Set the backup directory where the dump files will be stored
BACKUP_DIR="/path/to/backup_directory"

# Get the current date for the backup file name
BACKUP_DATE=$(date +"%Y%m%d")

# Function to run automated gpcrondump
run_automated_gpcrondump() {
    # Create the backup file name with the current date
    BACKUP_FILE="$BACKUP_DIR/gpdb_${DB_NAME}_${BACKUP_DATE}.backup"

    # Run gpcrondump to create the backup
    gpcrondump -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -F p -f $BACKUP_FILE

    # Check if the backup was successful
    if [ $? -eq 0 ]; then
        echo "Automated gpcrondump completed successfully. Backup saved to: $BACKUP_FILE"
    else
        echo "Error: Automated gpcrondump failed."
    fi
}

# Run the function to perform the automated gpcrondump
run_automated_gpcrondump

# Save the above script to a file with a .sh extension, e.g., automated_gpcrondump.sh, and make it executable using the following command:

chmod +x automated_gpcrondump.sh

# Set up a cron job to run the script at your desired interval. Open your crontab file using the command:
crontab -e
# Add the following line to the crontab file to run the script, for example, daily at midnight:
0 0 * * * /path/to/automated_gpcrondump.sh

