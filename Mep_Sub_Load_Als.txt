------
--DEV BY : Jitendra Lodwal  
--DATE  : 25-AUG-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------

SET SEARCH_PATH TO WORKAREA;

CREATE OR REPLACE FUNCTION Mep_Sub_Load_Als(P_DATE IN DATE) RETURNS VOID AS $$

DECLARE
P_RPT_DT  DATE;
ERR_MSG    VARCHAR(500);

BEGIN
P_RPT_DT := P_DATE; --END DATE
ERR_MSG := 'ERROR : -1 - error';
BEGIN
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE1 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
--------------- UPDATE INTEREST REMAINS -------------------------
BEGIN
   UPDATE MEP_DTL_ALS
   SET MD_PRODUCT='AFSB'
   WHERE SUBSTR(MD_ACCT_NO,3,3)='802';
   --COMMIT;
   UPDATE MEP_DTL_ALS
   SET MD_PRODUCT='PERSONAL FINANCING'
   WHERE SUBSTR(MD_ACCT_NO,3,3) <> '802' AND SUBSTR(MD_ACCT_NO,3,3) IN ('531','532');
   --COMMIT;
   UPDATE MEP_DTL_ALS
   SET MD_PRODUCT='MORTGAGE'
   WHERE MD_PRODUCT IS NULL;
   --COMMIT;
END;

/*

UPDATE MEP_DTL_ALS A
SET MD_PROD_CD =(
SELECT PROD_SHORT_DESC
FROM MEP_PRODUCT_ALS
WHERE A.MD_LN_SUB_PROD=SUBSTR(PROD_PROD_CD,2,3)
AND PROD_FIN_INST_NO ='001'); 

create temp table mep_dtl_als_temp as SELECT PROD_SHORT_DESC
FROM MEP_PRODUCT_ALS, MEP_DTL_ALS A
WHERE A.MD_LN_SUB_PROD=SUBSTR(PROD_PROD_CD,2,3)
AND PROD_FIN_INST_NO ='001'; 

UPDATE MEP_DTL_ALS
SET MD_PROD_CD =  B.PROD_SHORT_DESC FROM MEP_PRODUCT_ALS B;

*/

UPDATE MEP_DTL_ALS A
SET MD_PROD_CD = PROD_SHORT_DESC
FROM MEP_PRODUCT_ALS
WHERE A.MD_LN_SUB_PROD=SUBSTR(PROD_PROD_CD,2,3)
AND PROD_FIN_INST_NO ='001';
      
--COMMIT;
	 ---------------------- END : TO UPDATE PRODUCT DESC ---------------------------------------------
	 -------------------------- TO UPDATE INDICATOR FOR AUTO DEBIT ------------------------
BEGIN
  UPDATE MEP_DTL_ALS A SET  MD_AUTO_DBT_IND='Y'
  WHERE A.MD_ACCT_ID IN (SELECT AAR_R_ACCT_ID
  FROM ACCT_ACCT_REL_ALS
  WHERE AAR_R_APPL_SYS_ID ='ALS');
  --COMMIT;
--ERR_MSG := SQLCODE||''||SQLERRM;

EXCEPTION
--WHEN OTHERS THEN
--ERR_MSG := SQLCODE||''||SQLERRM;
  WHEN OTHERS THEN
         ERR_MSG := -1 || '' || 'Error' ;            

INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
 VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR(ERR_MSG,1,100) );
END;
BEGIN
  UPDATE MEP_DTL_ALS A SET  MD_AUTO_DBT_IND='N'
  WHERE  MD_AUTO_DBT_IND IS NULL;
  --COMMIT;
END;
BEGIN

UPDATE MEP_DTL_ALS
SET MD_DELI_SIZE_L1M=MD_DELI_AMT;

UPDATE MEP_DTL_ALS
SET MD_INT_REMAIN_AMT=COALESCE(MD_INT_AMT,0) - COALESCE(MD_TOT_INT_PAID,0),MD_DELI_SIZE_L1M=MD_DELI_AMT;

UPDATE MEP_DTL_ALS
SET MD_COINDC_DELI_ME=ROUND((MD_DELI_AMT / MD_OS_AMT),2)
WHERE MD_DELI_AMT >0
AND MD_OS_AMT >0;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_COINDC_DELI_ME=0
WHERE MD_MIA_TOT>0
AND MD_OS_AMT =0;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_AMT_DUE=COALESCE(MD_OS_AMT,0)-COALESCE(MD_DELI_AMT,0);
--COMMIT;
UPDATE  MEP_DTL_ALS
SET  MD_AMT_DUE = 0
WHERE MD_AMT_DUE IS NULL;
--COMMIT;
END;
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE2 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
-------------- START UPDATING DPD INDICATOR -------------------------------------------
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND1 ='Y'
WHERE MD_PAST_DUE = 1;
--COMMIT;


UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND1 ='Y',MD_DPD_ACCT_IND2 ='Y',MD_DPD_ACCT_IND3 ='Y',MD_DPD_ACCT_IND4 ='Y',MD_DPD_ACCT_IND5 ='Y'
WHERE MD_PAST_DUE = 5;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND1 ='Y',MD_DPD_ACCT_IND2 ='Y',MD_DPD_ACCT_IND3 ='Y',MD_DPD_ACCT_IND4 ='Y',MD_DPD_ACCT_IND5 ='Y',
MD_DPD_ACCT_IND6 ='Y'
WHERE MD_PAST_DUE = 6;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND1 ='Y',MD_DPD_ACCT_IND2 ='Y',MD_DPD_ACCT_IND3 ='Y',MD_DPD_ACCT_IND4 ='Y',MD_DPD_ACCT_IND5 ='Y',
MD_DPD_ACCT_IND6 ='Y',MD_DPD_ACCT_IND7 ='Y'
WHERE MD_PAST_DUE = 7;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND1 ='Y',MD_DPD_ACCT_IND2 ='Y',MD_DPD_ACCT_IND3 ='Y',MD_DPD_ACCT_IND4 ='Y',MD_DPD_ACCT_IND5 ='Y',
MD_DPD_ACCT_IND6 ='Y',MD_DPD_ACCT_IND7 ='Y',MD_DPD_ACCT_IND8 ='Y'
WHERE MD_PAST_DUE >= 8;
--COMMIT;
   UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND1='N'
WHERE MD_DPD_ACCT_IND1 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND2='N'
WHERE MD_DPD_ACCT_IND2 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND2='N'
WHERE MD_DPD_ACCT_IND2 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND3='N'
WHERE MD_DPD_ACCT_IND3 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND4='N'
WHERE MD_DPD_ACCT_IND4 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND5='N'
WHERE MD_DPD_ACCT_IND5 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND6='N'
WHERE MD_DPD_ACCT_IND6 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND7='N'
WHERE MD_DPD_ACCT_IND7 IS NULL;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_ACCT_IND8='N'
WHERE MD_DPD_ACCT_IND8 IS NULL;
--COMMIT;
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE3 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
-------------- END UPDATING DPD INDICATOR -------------------------------------------
-------------- START DPD AMT - ACCORDING TO MIA -----------------------------------------
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT
WHERE MD_PAST_DUE =1;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT
WHERE MD_PAST_DUE =2;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT
WHERE MD_PAST_DUE =3;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
WHERE MD_PAST_DUE =4;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT
WHERE MD_PAST_DUE =5;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT,MD_DPD_AMT6 = MD_MTH_AMORT
WHERE MD_PAST_DUE =6;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT,MD_DPD_AMT6 = MD_MTH_AMORT,MD_DPD_AMT7 = MD_MTH_AMORT
WHERE MD_PAST_DUE =7;
--COMMIT;
UPDATE MEP_DTL_ALS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT,MD_DPD_AMT6 = MD_MTH_AMORT,MD_DPD_AMT7 = MD_MTH_AMORT,MD_DPD_AMT8 = MD_MTH_AMORT
WHERE MD_PAST_DUE >=8;
--COMMIT;


--COMMIT;
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE4 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;

BEGIN
UPDATE MEP_DTL_ALS
SET  MD_MAX_DELI_L1M = MD_PAST_DUE,
MD_DELI_BUCKET = MD_PAST_DUE,
MD_DELI_AT_PD_L1M= MD_PAST_DUE;
--COMMIT;
END;
UPDATE MEP_DTL_ALS
SET MD_DELI_BUCKET =0
WHERE MD_DELI_BUCKET IS NULL;
--COMMIT;
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE5 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
-------------- END UPDATING DELI BUCKET = MIA TOTAL  -------------------------------------------

----- END MD_RECOVERY AMT --------------------------------
----- UPDATE ACTIVE INDICATOR ----------------------------
BEGIN
  UPDATE MEP_DTL_ALS
  SET MD_ACTIVE_IND='Y'
  WHERE ROUND((MD_REPORT_DT - MD_LST_PYMT_DT)/30,0) <='3';
  --COMMIT;
  UPDATE MEP_DTL_ALS
  SET MD_ACTIVE_IND='N'
  WHERE MD_ACTIVE_IND IS NULL;
  --COMMIT;
END;
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE8 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
  BEGIN
    UPDATE MEP_DTL_ALS
    SET MD_WOFF_AMT=MD_OS_AMT
    WHERE MD_WOFF_IND='Y';
 --COMMIT;
  END;
-- END UPDATE WRITE OFF AMOUNT ----------------------------------

INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE9 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
--- END UPDATE NET CREDIT LOSS -----------------------
---------------- START ; TO GET AVG NET RECEIVABLES ----------------------------------------------
      ---------------   UPDATE PAYMENT RATE --------
				UPDATE MEP_DTL_ALS
	  			SET MD_PYMT_RT= ROUND(MD_PYMT_MTD / MD_PREV_BAL_OS,2)
	  			WHERE MD_PREV_BAL_OS > 0;
				--COMMIT;

				UPDATE MEP_DTL_ALS
				SET MD_PYMT_RT = 9999.999999
				WHERE MD_PREV_BAL_OS = 0
				AND MD_PYMT_RT > 0;
				--COMMIT;

				UPDATE MEP_DTL_ALS
				SET MD_PYMT_RT = 9999.999999
				WHERE  MD_PYMT_RT > 9999.999999;
				--COMMIT;

				UPDATE MEP_DTL_ALS
				SET MD_PYMT_RT = -9999.999999
				WHERE  MD_PYMT_RT < -9999.999999;
				--COMMIT;

				UPDATE MEP_DTL_ALS
				SET MD_NET_RECEIVE_AVG = (coalesce(MD_OS_AMT,0) + coalesce(MD_PREV_BAL_OS,0)) / 2;
				--COMMIT;
				UPDATE MEP_DTL_ALS
	  			SET MD_PYMT_RT=0
	  			WHERE MD_PYMT_RT IS NULL
	  			AND MD_APPL_SYS_ID='ALS';
	            --COMMIT;
---------------  END UPDATE PAYMENT RATE --------
---------------- END ; TO GET AVG NET RECEIVABLES ----------------------------------------------
----------- UPDATE TOT PAYMENT AND TREN BAL SIZE = MD_PAYMENT ------------
BEGIN
	 	   UPDATE MEP_DTL_ALS
		   SET --MD_TREND_BAL_SZ_L1M=MD_PYMT_MTD,
		       MD_TOT_PYMT_L1M=MD_PYMT_MTD;
		   --COMMIT;
END;
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE10 MEP_SUB LOAD FOR ALS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
---------------- ERnd to updata AMOUNT PAID ---------------------------------
BEGIN
	 INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
	 VALUES  (P_DATE,'MEP_SUB LOAD FOR ALS-END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
		  --COMMIT;
      END; -- END CHECKING ALS
   END; -- END ALS EXTRACTION
END;  -- GLOBAL END

$$
LANGUAGE PLPGSQL;

