CREATE OR REPLACE FUNCTION MBS_LN_SP_INS_MBSApplCollateralGroup() RETURNS VOID AS $$

--
-- Dev: Jitendra Lodwal
-- Date: 5/JAN/2012
-- Desc: Intial Conversion
--
-- Dev: Jitendra Lodwal
-- Date: 27/MARCH/2012
-- Desc: Intial Conversion
--
-- Dev: Jitendra Lodwal
-- Date: 28/MARCH/2012
-- Desc: Intial Conversion
--
-- Dev: Odia Ukoko
-- Date: 31/MARCH/2012
-- Desc: Converted to set operation. 
--       Got rid of the use of loops to improve the performance
--

BEGIN

	SET SEARCH_PATH TO MBS_LOANS;

	CREATE TEMP TABLE MACG_0
	 AS SELECT
	   DISTINCT T1.COLLATERAL_KEY
	 , T2.ACCOUNTID
	 , T2.COLLATERALID
	 , T2.COLLATERALTYPE
	 FROM MBS_LOANS.LK_MBSAPPLCOLLATERAL_KEY T1
	 INNER JOIN DBSCRUB.TB_MBSAPPLCOLLATERAL T2
	 ON T1.COLLATERALID = T2.COLLATERALID
	 AND T1.COLLATERALTYPE = T2.COLLATERALTYPE
	 DISTRIBUTED BY (ACCOUNTID);


	CREATE TEMP TABLE MACG_1
	AS SELECT
	T2.ACCOUNTID
	, T2.COLLATERALTYPE
	, COUNT(T2.*) SUBMEMBER
	FROM MBS_LOANS.LK_MBSAPPLCOLLATERAL_KEY T1
	INNER JOIN DBSCRUB.TB_MBSAPPLCOLLATERAL T2
	ON T1.COLLATERALID = T2.COLLATERALID
	GROUP BY
	T2.ACCOUNTID
	, T2.COLLATERALTYPE
	DISTRIBUTED BY (ACCOUNTID);


	CREATE TEMP TABLE MACG_2
	 AS SELECT
	   T2.ACCOUNTID
	 , COUNT(DISTINCT T2.COLLATERALTYPE) NGROUP
	 FROM MBS_LOANS.LK_MBSAPPLCOLLATERAL_KEY T1
	 INNER JOIN DBSCRUB.TB_MBSAPPLCOLLATERAL T2
	 ON T1.COLLATERALID = T2.COLLATERALID
	 GROUP BY
	 ACCOUNTID
	 DISTRIBUTED BY (ACCOUNTID);


	INSERT INTO MBS_LOANS.TB_MBSAPPLICATIONCOLLATERALGROUP (
	  COLLATERALGROUP
	, COLLATERAL_KEY
	, WEIGHTFACTOR
	, UPDATEDATETIME
	, ACCOUNTID)
	SELECT
	 NEXTVAL('MACG_SEQ')
	, MACG_0.COLLATERAL_KEY
	, (1/MACG_1.SUBMEMBER)*(1/MACG_2.NGROUP)
	, CURRENTLOADDT
	, MACG_0.ACCOUNTID
	FROM DBSCRUB.TB_MBSLOADDT, MACG_0 INNER JOIN MACG_1
	ON MACG_0.ACCOUNTID = MACG_1.ACCOUNTID
	AND MACG_0.COLLATERALTYPE = MACG_1.COLLATERALTYPE
	INNER JOIN MACG_2
	ON MACG_0.ACCOUNTID = MACG_2.ACCOUNTID;

END;

$$ language plpgsql;