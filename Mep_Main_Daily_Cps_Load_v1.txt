------
--DEV BY : Jitendra Lodwal  
--DATE  : 06-SEP-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 15-March-2012 
--DESC : FUNCTION
------
SET SEARCH_PATH TO WORKAREA;
CREATE OR REPLACE FUNCTION Mep_Main_Daily_Cps_Load(CURR_PROCESS_DATE  IN DATE) RETURNS VOID AS $$
DECLARE
P_RPT_DT  DATE;

BEGIN
P_RPT_DT := CURR_PROCESS_DATE; --END DATE
BEGIN
		INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
		VALUES  (CURR_PROCESS_DATE,'INSERT MTR_DTL_CPS_EXT FOR CPS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
		--COMMIT;

TRUNCATE TABLE MEP_DTL_DAILY_CPS_EXT;
INSERT INTO MEP_DTL_DAILY_CPS_EXT
(MEP_ACCT_NO, MEP_REP_MTH,MEP_SRC_SYS_CD,MEP_SEM_PROD_TYP,
MEP_ACCT_OPEN_DT,MEP_PROD_TYP,MEP_ACCT_STATUS,MEP_NON_ACCRUAL,MEP_CARD_STATUS,
MEP_CYCLE,MEP_ACTIVE,MEP_AUTO_DEBIT,MEP_BLOCK_CD,MEP_CREDIT_LMT,MEP_AMT_PAID,
MEP_LAST_CREDIT_LMT_DT,MEP_LAST_PAY_DT,MEP_MOB,MEP_RENEW_DT,MEP_AMT_IN_ARREARS,
MEP_CO_DELINQ_MTH,MEP_PREV_DELINQ,MEP_CURRENT_AMT,MEP_DELINQ_BUCKET,MEP_OVER_LMT_CNT,
MEP_OVER_LMT_AMT,MEP_PERC_OVERLIMIT,MEP_WRITTEN_OFF,MEP_GROSS_WRITTEN_OFF,MEP_NET_RECEIVABLE,
MEP_UTILIZATION,MEP_LOAN_AGE,MEP_PRIN_AMT,MEP_BAL_AMT,MEP_LOAN_OPEN_DT,MEP_LOAN_PURPOSE,
MEP_LN_SUB_PROD,MEP_AKPK,MEP_SUPP_HOLDER,MEP_WATCHLIST_FLAG,MEP_WATCHLIST_DATE,
MEP_PRIN_CARD_NO,MEP_PAYMENT,MEP_CLOSED,MEP_REVENUE,MEP_CB_CURMTH_BAL,MEP_INSTALLMENT_AMT,MEP_SUPP_IND)
SELECT
DISTINCT A.CB_INDIVIDUAL_ACCTNO AS ACCT_NO,CAST(A.CD_CYC_DT AS TIMESTAMP) AS REP_MTH,'CPS'  AS SRC_SYS_CD,'CC' AS SEM_PRODUCT_TYP,
A.CB_ANNIV_DATE AS ACCT_OPEN_DT,C.CB_PRODUCT_CD AS PRODUCT_TYP,A.CB_STATUS_CD  AS  ACCT_STATUS,
CASE WHEN A.CB_NPL_STATUS IN ('D','E','N','S','W') THEN 'Y' ELSE 'N' END  AS NON_ACCRUAL,
A.CB_STATUS_CD AS CARD_STATUS,A.CB_BILL_CYCLE  AS BILL_CYCLE,A.CB_STATUS_CD  AS ACTIVE,A.CB_AUTOPAY_IND  AS AUTOPAY_DBT,
CB_PLASTIC_CD AS BLOCK_CD,B.CB_LINE_LIMIT AS CREDIT_LIMT,C.CB_LAST_PAYMENT_AMT  AS LAST_AMT_PAID,
A.CB_CRLIMIT_CHG_DATE AS LAST_CREDIT_LIMIT_DT,CB_LAST_PAYMENT_DATE AS LAST_PAY_DT,
-- ROUND((TO_DATE(CB_BILL_CYCLE,'DD') - CB_ANNIV_DATE) /30,0) AS MOB,
CAST(ROUND(CAST(substr(current_date,1,8)|| CB_BILL_CYCLE AS DATE) - CB_ANNIV_DATE ) / 30 AS NUMERIC(5)) AS MOB,
A.CB_PLASTIC_DATE AS RENEWAL_DT, C.CB_CURMTH_BAL AS AMOUNT_IN_ARREARS,
CASE WHEN  B.CB_OUTSTD_BAL > 0  THEN (CB_30DAYS_BAL + CB_60DAYS_BAL + CB_90DAYS_BAL) / B.CB_OUTSTD_BAL  ELSE 0 END AS CO_DELIINQ_MTH,
CASE WHEN C.CB_LAST_AGE_CD <> 'CR' THEN CAST(CB_LAST_AGE_CD AS NUMERIC) ELSE 0 END AS  PREV_DELQ, B.CB_OUTSTD_BAL - C.CB_CURMTH_BAL  CURRENT_AMT,
CASE WHEN C.CB_LAST_AGE_CD <> 'CR' THEN CAST(CB_LAST_AGE_CD AS NUMERIC) ELSE 0 END AS  DELINQ_BUCKET, CASE WHEN B.CB_OUTSTD_BAL  > B.CB_LINE_LIMIT
THEN 1 ELSE 0 END AS OVERLIMIT_CNT,B.CB_OUTSTD_BAL - B.CB_LINE_LIMIT  AS OVLIMIT_AMT,
CASE WHEN CB_LINE_LIMIT > 0 THEN  COALESCE(CB_OUTSTD_BAL - CB_LINE_LIMIT,0) / COALESCE(CB_LINE_LIMIT,0) ELSE 0  END AS PERC_OVERLIMIT,
CASE WHEN A.CB_STATUS_CD IN ('R','W') THEN 'Y' ELSE  'N' END AS  WRITE_OFF,
CB_MTD_TOT_CHRG_AMT  AS GROSS_WRITE_OFF, CB_CURMTH_BAL  AS  AVER_NET_RECEIVABLE,
CASE WHEN CB_LINE_LIMIT > '0' THEN CB_OUTSTD_BAL/ CB_LINE_LIMIT ELSE NULL END  AS  UTILIZATION,
-- ROUND((TO_DATE(CB_BILL_CYCLE,'DD') - CB_ANNIV_DATE) /30,0) AS LOAN_AGE, 
CAST(ROUND(CAST(substr(current_date,1,8)||CB_BILL_CYCLE AS DATE) - CB_ANNIV_DATE ) / 30 AS NUMERIC(3)) AS LOAN_AGE,
B.CB_LINE_LIMIT  AS PRIN_AMT, CB_OUTSTD_BAL AS BAL_AMT,A.CB_ANNIV_DATE AS LOAN_OPEN_DT,
PROD_GRP_LONG_DESC  AS  LOANPURPOSE, CB_PRODUCT_CD  AS  LOAN_SUB_PROD,
CASE WHEN CB_USER_CODE_1 IN ('85', '86', '87', '88', '89') THEN 'Y' ELSE 'N' END AS AKPK,
CASE WHEN A.CB_BASIC_SUPP_IND =  'I'  THEN A.CB_BASIC_CARDHOLDER_NO  END AS SUPP_HOLDER,
SUBSTR(CB_WATCHLIST,1,1) AS WATCHLISTFLAG,
CB_WATCH_DATE AS WATCHLISTDATE,
CB_BASIC_CARDHOLDER_NO   AS PRINCIPAL_CARD_NO,
D.TXD_CASH_AMT AS PAYMENT,
CASE WHEN A.CB_STATUS_CD  IN ('C' ,'V') AND  A.CB_PLASTIC_CD = 'O'  AND  A.CB_FEE_CD = '97' THEN 'Y' ELSE 'N'
END AS CLOSED,  COALESCE(C.CB_ACRU_CRBAL_INT,0)  +  COALESCE(C.CB_ACRU_EXCESS,0) AS REVENUE,
C.CB_CURMTH_BAL  AS MEP_CB_CURMTH_BAL,C.CB_CURMTH_BAL AS MEP_AMORT,
A.CB_BASIC_SUPP_IND
FROM  MEP_CARD_DETAIL A , MEP_CARD_ACCT_DETAIL B 
LEFT OUTER JOIN MEP_TRAN_CPS_DLY D ON B.CB_IND_CARDHOLDER_NO = D.TXD_ACCT_NO,
 MEP_CARD_FIN C,MEP_PRODUCT_CPS E
WHERE  B.CB_INDIVIDUAL_ACCTNO =  A.CB_INDIVIDUAL_ACCTNO
AND   C.CB_FIN_ACCTNO = B.CB_FIN_ACCTNO
AND   TRIM(C.CB_PRODUCT_CD)   = TRIM(SUBSTR(E.PROD_PROD_CD,2,4))
AND   E.PROD_APPL_SYS_ID = 'CPS'
AND   LPAD(A.CB_BILL_CYCLE,2) = TO_CHAR(P_RPT_DT,'DD');
--COMMIT;

TRUNCATE TABLE MEP_DTL_DAILY_CPS_TEMP;

INSERT INTO MEP_DTL_DAILY_CPS_TEMP
SELECT DISTINCT  MEP_SUPP_HOLDER,COUNT(MEP_SUPP_HOLDER)  FROM MEP_DTL_DAILY_CPS_EXT
GROUP BY MEP_SUPP_HOLDER;
--COMMIT;


TRUNCATE TABLE MEP_DTL_DAILY_CPS;
INSERT INTO MEP_DTL_DAILY_CPS
(MEP_ACCT_NO, MEP_REP_MTH,MEP_SRC_SYS_CD,MEP_SEM_PROD_TYP,
MEP_ACCT_OPEN_DT,MEP_PROD_TYP,MEP_ACCT_STATUS,MEP_NON_ACCRUAL,MEP_CARD_STATUS,
MEP_CYCLE,MEP_ACTIVE,MEP_AUTO_DEBIT,MEP_BLOCK_CD,MEP_CREDIT_LMT,MEP_AMT_PAID,
MEP_LAST_CREDIT_LMT_DT,MEP_LAST_PAY_DT,MEP_MOB,MEP_RENEW_DT,MEP_AMT_IN_ARREARS,
MEP_CO_DELINQ_MTH,MEP_PREV_DELINQ,MEP_CURRENT_AMT,MEP_DELINQ_BUCKET,MEP_OVER_LMT_CNT,
MEP_OVER_LMT_AMT,MEP_PERC_OVERLIMIT,MEP_WRITTEN_OFF,MEP_GROSS_WRITTEN_OFF,MEP_NET_RECEIVABLE,
MEP_UTILIZATION,MEP_LOAN_AGE,MEP_PRIN_AMT,MEP_BAL_AMT,MEP_LOAN_OPEN_DT,MEP_LOAN_PURPOSE,
MEP_LN_SUB_PROD,MEP_AKPK,MEP_SUPP_HOLDER,MEP_WATCHLIST_FLAG,MEP_WATCHLIST_DATE,
MEP_PRIN_CARD_NO,MEP_PAYMENT,MEP_CLOSED,MEP_REVENUE,MEP_CB_CURMTH_BAL,MEP_INSTALLMENT_AMT,MEP_SUPP_CNT,MEP_SUPP_IND)
SELECT
A.MEP_ACCT_NO, A.MEP_REP_MTH,A.MEP_SRC_SYS_CD,A.MEP_SEM_PROD_TYP,
A.MEP_ACCT_OPEN_DT,A.MEP_PROD_TYP,A.MEP_ACCT_STATUS,A.MEP_NON_ACCRUAL,A.MEP_CARD_STATUS,
A.MEP_CYCLE,A.MEP_ACTIVE,A.MEP_AUTO_DEBIT,A.MEP_BLOCK_CD,A.MEP_CREDIT_LMT,A.MEP_AMT_PAID,
A.MEP_LAST_CREDIT_LMT_DT,A.MEP_LAST_PAY_DT,A.MEP_MOB,A.MEP_RENEW_DT,A.MEP_AMT_IN_ARREARS,
A.MEP_CO_DELINQ_MTH,A.MEP_PREV_DELINQ,A.MEP_CURRENT_AMT,A.MEP_DELINQ_BUCKET,A.MEP_OVER_LMT_CNT,
A.MEP_OVER_LMT_AMT,A.MEP_PERC_OVERLIMIT,A.MEP_WRITTEN_OFF,A.MEP_GROSS_WRITTEN_OFF,A.MEP_NET_RECEIVABLE,
A.MEP_UTILIZATION,A.MEP_LOAN_AGE,A.MEP_PRIN_AMT,A.MEP_BAL_AMT,A.MEP_LOAN_OPEN_DT,A.MEP_LOAN_PURPOSE,
A.MEP_LN_SUB_PROD,A.MEP_AKPK,A.MEP_SUPP_HOLDER,A.MEP_WATCHLIST_FLAG,A.MEP_WATCHLIST_DATE,
A.MEP_PRIN_CARD_NO,A.MEP_PAYMENT,A.MEP_CLOSED,A.MEP_REVENUE,A.MEP_CB_CURMTH_BAL,A.MEP_INSTALLMENT_AMT,B.MEP_SUPP_CNT,A.MEP_SUPP_IND
FROM MEP_DTL_DAILY_CPS_EXT  A LEFT OUTER JOIN MEP_DTL_DAILY_CPS_TEMP B
ON A.MEP_PRIN_CARD_NO = B.MEP_SUPP_HOLDER;

--COMMIT;

UPDATE MEP_DTL_DAILY_CPS
SET MEP_SUPP_CNT=0
WHERE MEP_SUPP_IND = 'I';
--COMMIT;

UPDATE MEP_DTL_DAILY_CPS
SET MEP_SUPP_CNT=0
WHERE MEP_SUPP_IND = 'B'
AND  MEP_SUPP_CNT IS  NULL;
--COMMIT;
UPDATE MEP_DTL_DAILY_CPS
SET MEP_GROSS_WRITTEN_OFF = MEP_CB_CURMTH_BAL
WHERE MEP_WRITTEN_OFF = 'Y';
--COMMIT;

UPDATE MEP_DTL_DAILY_CPS
SET MEP_WATCHLIST_DATE  = '01-JAN-1901'
WHERE MEP_WATCHLIST_DATE = '01-JAN-0001';
--COMMIT;
--/* APR */

/*
UPDATE MEP_DTL_DAILY_CPS A
SET MEP_APR = (SELECT MCA_APR
FROM MEP_CPS_APR B
WHERE TRIM(A.MEP_LN_SUB_PROD) = TRIM(SUBSTR(B.MCA_PROD_CD,2,3)));
 */

Create temp table upd_1 as SELECT B.MCA_APR
FROM MEP_CPS_APR B, MEP_DTL_DAILY_CPS A
WHERE TRIM(A.MEP_LN_SUB_PROD) = TRIM(SUBSTR(B.MCA_PROD_CD,2,3));

UPDATE MEP_DTL_DAILY_CPS 
SET MEP_APR = B.MCA_APR FROM MEP_CPS_APR B;

/* commented by jitendra 15march2012
BEGIN
UPDATE MEP_DTL_DAILY_CPS 
SET MEP_APR = B.MCA_APR
FROM MEP_DTL_DAILY_CPS A
, (SELECT SUBSTR(MCA_PROD_CD,2,3) NEW_MCA_PROD_CD
, MIN(MCA_APR) MCA_APR
FROM MEP_CPS_APR
GROUP BY SUBSTR(MCA_PROD_CD,2,3)) B
WHERE TRIM(A.MEP_LN_SUB_PROD) = B.NEW_MCA_PROD_CD;
END;
*/


--COMMIT;
--/* INTEREST RATE */
UPDATE  MEP_DTL_DAILY_CPS  A
SET MEP_INT_RATE =MEP_APR;
--COMMIT;
--/*AMORTIZATION   --- MEP_INSTALLMENT_AMT */
--/*PAID_TODATE  */
UPDATE MEP_DTL_DAILY_CPS
SET  MEP_PAID_PCT = ROUND((MEP_CB_CURMTH_BAL / MEP_CREDIT_LMT),2)
WHERE MEP_CREDIT_LMT > 0;
--COMMIT;
--*sudhakar/
--*sudhakar/
TRUNCATE TABLE  MEP_DTL_CPS_DLY_RPT_FNL;
INSERT INTO MEP_DTL_CPS_DLY_RPT_FNL
(ACCT_NO,REP_MTH,SRC_SYS_CD,SEM_PROD_TYP,
ACCT_OPEN_DT,PROD_TYPE,ACCT_STATUS,NON_ACCRUAL,CARD_STATUS,
CYCLE,ACTIVE,AUTO_DEBIT,BLOCK_CD,CREDIT_LIMIT,PAID_AMT,
LAST_CREDIT_LMT_DT,LAST_PAY_DT,MOB,RENEWAL_DT,AMT_IN_ARREARS,
CO_DELINQ_MTH,PREV_DELINQ,CURRENT_AMT,DELINQ_BUCKET,OVERLIMIT_CNT,
OVERLIMIT_AMT,PERC_OVERLIMIT,WRITTEN_OFF,GROSS_WRITTEN_OFF,AVER_NET_RECEIVABLE,
UTILIZATION,LOAN_AGE,PRIN_AMT,BAL_AMT,LOAN_OPEN_DT,LOAN_PURPOSE,
LOAN_SUB_PROD,AKPK,SUPP_HOLDER,WATCHLIST_FLAG,WATCHLIST_DT,PRIN_CARD_NO,
PAYMENT,CLOSED,REVENUE,APR,INT_RATE,PAID_TODATE,MEP_PROD_TYP,SUPP_CNT)

SELECT DISTINCT MEP_ACCT_NO, MEP_REP_MTH,MEP_SRC_SYS_CD,MEP_SEM_PROD_TYP,
MEP_ACCT_OPEN_DT,MEP_PROD_TYP,MEP_ACCT_STATUS,MEP_NON_ACCRUAL,MEP_CARD_STATUS,
MEP_CYCLE,MEP_ACTIVE,MEP_AUTO_DEBIT,MEP_BLOCK_CD,MEP_CREDIT_LMT,MEP_AMT_PAID,
MEP_LAST_CREDIT_LMT_DT,MEP_LAST_PAY_DT,MEP_MOB,MEP_RENEW_DT,MEP_AMT_IN_ARREARS,
MEP_CO_DELINQ_MTH,MEP_PREV_DELINQ,MEP_CURRENT_AMT,MEP_DELINQ_BUCKET,MEP_OVER_LMT_CNT,
MEP_OVER_LMT_AMT,MEP_PERC_OVERLIMIT,MEP_WRITTEN_OFF,MEP_GROSS_WRITTEN_OFF,MEP_NET_RECEIVABLE,
MEP_UTILIZATION,MEP_LOAN_AGE,MEP_PRIN_AMT,MEP_BAL_AMT,MEP_LOAN_OPEN_DT,MEP_LOAN_PURPOSE,
MEP_LN_SUB_PROD,MEP_AKPK,MEP_SUPP_HOLDER,MEP_WATCHLIST_FLAG,MEP_WATCHLIST_DATE,
MEP_PRIN_CARD_NO,MEP_PAYMENT,MEP_CLOSED,MEP_REVENUE,MEP_APR,MEP_INT_RATE,MEP_PAID_PCT,
'CC' AS MEP_PROD_TYP,MEP_SUPP_CNT
FROM MEP_DTL_DAILY_CPS;
INSERT INTO MEP_DTL_CPS_DLY_RPT
(ACCT_NO,REP_MTH,SRC_SYS_CD,SEM_PROD_TYP,
ACCT_OPEN_DT,PROD_TYPE,ACCT_STATUS,NON_ACCRUAL,CARD_STATUS,
CYCLE,ACTIVE,AUTO_DEBIT,BLOCK_CD,CREDIT_LIMIT,PAID_AMT,
LAST_CREDIT_LMT_DT,LAST_PAY_DT,MOB,RENEWAL_DT,AMT_IN_ARREARS,
CO_DELINQ_MTH,PREV_DELINQ,CURRENT_AMT,DELINQ_BUCKET,OVERLIMIT_CNT,
OVERLIMIT_AMT,PERC_OVERLIMIT,WRITTEN_OFF,GROSS_WRITTEN_OFF,AVER_NET_RECEIVABLE,
UTILIZATION,LOAN_AGE,PRIN_AMT,BAL_AMT,LOAN_OPEN_DT,LOAN_PURPOSE,
LOAN_SUB_PROD,AKPK,SUPP_HOLDER,WATCHLIST_FLAG,WATCHLIST_DT,PRIN_CARD_NO,
PAYMENT,CLOSED,REVENUE,APR,INT_RATE,PAID_TODATE,MEP_PROD_TYP,SUPP_CNT)

SELECT DISTINCT MEP_ACCT_NO, MEP_REP_MTH,MEP_SRC_SYS_CD,MEP_SEM_PROD_TYP,
MEP_ACCT_OPEN_DT,MEP_PROD_TYP,MEP_ACCT_STATUS,MEP_NON_ACCRUAL,MEP_CARD_STATUS,
MEP_CYCLE,MEP_ACTIVE,MEP_AUTO_DEBIT,MEP_BLOCK_CD,MEP_CREDIT_LMT,MEP_AMT_PAID,
MEP_LAST_CREDIT_LMT_DT,MEP_LAST_PAY_DT,MEP_MOB,MEP_RENEW_DT,MEP_AMT_IN_ARREARS,
MEP_CO_DELINQ_MTH,MEP_PREV_DELINQ,MEP_CURRENT_AMT,MEP_DELINQ_BUCKET,MEP_OVER_LMT_CNT,
MEP_OVER_LMT_AMT,MEP_PERC_OVERLIMIT,MEP_WRITTEN_OFF,MEP_GROSS_WRITTEN_OFF,MEP_NET_RECEIVABLE,
MEP_UTILIZATION,MEP_LOAN_AGE,MEP_PRIN_AMT,MEP_BAL_AMT,MEP_LOAN_OPEN_DT,MEP_LOAN_PURPOSE,
MEP_LN_SUB_PROD,MEP_AKPK,MEP_SUPP_HOLDER,MEP_WATCHLIST_FLAG,MEP_WATCHLIST_DATE,
MEP_PRIN_CARD_NO,MEP_PAYMENT,MEP_CLOSED,MEP_REVENUE,MEP_APR,MEP_INT_RATE,MEP_PAID_PCT,
'CC' AS MEP_PROD_TYP,MEP_SUPP_CNT
FROM MEP_DTL_DAILY_CPS;

--COMMIT;

UPDATE MEP_LOADDT   --Surrogate key
SET MEP_PREV_DATE = MEP_CURR_DATE,
MEP_CURR_DATE = MEP_NEXT_DATE,
MEP_NEXT_DATE = MEP_NEXT_DATE + 1;
	--COMMIT;
UPDATE MEP_LOADDT
SET MEP_STATUS = 'STOP'
WHERE MEP_STATUS = 'RUNNING';
--COMMIT;
----ERROR:  Cannot parallelize an UPDATE statement that updates the distribution columns
END;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (CURR_PROCESS_DATE,'INSERT MEP_DTL_CPS FOR CPS-END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
  -- GLOBAL END
END;
$$
LANGUAGE PLPGSQL;
