------
--Dev: Jitendra Lodwal
--Date: 26/09/2011
--Desc: Function
------

SET SEARCH_PATH TO RISK;

CREATE OR REPLACE FUNCTION Rmd_Prc_Sec_Forex(RERUN_DATE IN DATE) RETURNS VOID AS $$
DECLARE

/*********************************************************************************************************************/
-- AUTHOR -------- DATE ------------- REMARKS ---------------------
/*********************************************************************************************************************/
-- AMYLIA 03-DEC-2008  TO RENAME ALL THE NEW TABLES FOR GLOBUS



/*********************************************************************************************************************/


 PRO_NAME ADM_PROCESS_LOG.APL_PRO_NAME%TYPE;
 PRO_STATUS ADM_PROCESS_LOG.APL_PRO_STATUS%TYPE;
 PRO_BUS_DATE ADM_PROCESS_LOG.APL_PRO_BUS_DATE%TYPE;
 PRO_LOAD_STATUS ADM_PROCESS_LOG.APL_LOAD_STATUS%TYPE;
 PRO_SYSTEM_DATE ADM_PROCESS_LOG.APL_SYSTEM_DATE%TYPE;
 SYS_DATE DATE;
BEGIN

 /*GET SYSTEM DATE*/
 SELECT CURRENT_DATE INTO SYS_DATE;


 /*LOAD START STATUS*/
 PRO_NAME := 'LOAD GLOBUS DATA INTO MONEY SECURITIES FOREX';
 PRO_STATUS := 'START';
 PRO_BUS_DATE := RERUN_DATE;
 PRO_LOAD_STATUS := 'TRUE';
 PRO_SYSTEM_DATE := SYS_DATE;

 INSERT INTO ADM_PROCESS_LOG
 (APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
 VALUES (PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);


 /*1.TRUNCATE TABLE FI_SEC_FX_SETTLEMENT_STG*/
 PRO_NAME := 'TRUNCATE TABLE FI_SEC_FX_SETTLEMENT_STG';

EXECUTE IMMEDIATE 'TRUNCATE TABLE FI_SEC_FX_SETTLEMENT_STG';


 /*2.TRUNCATE TABLE FI_FX_SETTLEMENT_STG*/
 PRO_NAME := 'TRUNCATE TABLE FI_FX_SETTLEMENT_STG';

TRUNCATE TABLE FI_FX_SETTLEMENT_STG;


 /*3.TRUNCATE TABLE SEC_FOREX_SETTLEMENT_LIMIT_EXP*/


 /*4.LOAD * FROM GLO_LIMIT_STG INTO FI_SEC_FX_SETTLEMENT_STG*/
 PRO_NAME := 'LOAD * FROM GLO_LIMIT_NEW_STG INTO FI_SEC_FX_SETTLEMENT_STG';

/* LOAD ALL THE LIMITS WHICH LIMIT PRODUCT = 900, 4000, 4010, 4020, 4030 */

INSERT INTO FI_SEC_FX_SETTLEMENT_STG (BUS_DATE, SOURCE_ID, ENT_NAME, PARENT_CD, CHILD_CD, CREDIT_LINE_NO, CURRENCY, MAX_TOTAL, TOTAL_OS, LIMIT_REF_NO, ACTIVITY_GROUP, MGMT_CENTRE)
SELECT TO_TIMESTAMP(BUSSINESS_DAT,'YYYYMMDD') AS BUS_DATE,
 SOURCE_ID, 'AMM',
 SUBSTR(CREDIT_LINE_NO,1,6) AS PARENT_CD,
 SUBSTR(CREDIT_LINE_NO,19,6) AS CHILD_CD,
 CREDIT_LINE_NO,
 LIMIT_CURR,
 MAX_TOTAL,
 CAST(TOTAL_OS AS NUMERIC) ,
 LIMIT_PROD, 'TRADING ',
 SUBSTR(COMP_NAME,1,50) AS COMP_NAME
FROM GLO_LIMIT_NEW_STG
WHERE LIMIT_PROD IN ('900', '4000', '4010', '4020', '4030');



 /*5.UPDATE PARENT COMPANY, PARENT ROC, COUNTERPARTY TYPE, CHILD COMPANY, CHILD ROC FROM GLO_CUST_STG*/
 PRO_NAME := 'UPDATE PARENT COMPANY, PARENT ROC, COUNTERPARTY TYPE, CHILD COMPANY, CHILD ROC FROM GLO_CUST_NEW_STG';

/* TO UPDATE PARENT COMPANY, PARENT ROC, COUNTERPARTY TYPE ,
  CHILD COMPANY, CHILD ROC FROM CUSTOMER FILE
*/
DECLARE
 BUSINESS_DATE FI_SEC_FX_SETTLEMENT_STG.BUS_DATE%TYPE;
 PARENT_ID FI_SEC_FX_SETTLEMENT_STG.PARENT_CD%TYPE;
 PARENT_COMPANY_NAME FI_SEC_FX_SETTLEMENT_STG.PARENT_COMPANY%TYPE;
 ROC_PARENT FI_SEC_FX_SETTLEMENT_STG.PARENT_ROC%TYPE;
 COMPANY_REIGN_NO GLO_CUST_NEW_STG.CO_REIGN_NO%TYPE;
 COUNTERPARTY_TYP FI_SEC_FX_SETTLEMENT_STG.COUNTERPARTY_TYPE%TYPE;
 CHILD_ID FI_SEC_FX_SETTLEMENT_STG.CHILD_CD%TYPE;
 CHILD_COMPANY_NAME FI_SEC_FX_SETTLEMENT_STG.CHILD_COMPANY%TYPE;
 ROC_CHILD FI_SEC_FX_SETTLEMENT_STG.CHILD_ROC%TYPE;
X RECORD;
Y RECORD; 
BEGIN

 FOR X IN
 (SELECT DISTINCT A.BUS_DATE,
   A.PARENT_CD,
  SUBSTR(B.SHORT_NM, 1 ,35) AS PARENT_COMPANY,
  B.CO_REIGN_NO,
   SUBSTR(B.SEC_SH_NM,1,35) AS COUNTERPARTY_TYPE,
  A.SOURCE_ID AS APPL_SYS_ID
 --FROM FI_SEC_FX_SETTLEMENT_STG A , GLO_CUST_STG B
 FROM FI_SEC_FX_SETTLEMENT_STG A , GLO_CUST_NEW_STG B
 WHERE TRIM(A.PARENT_CD) = TRIM(B.CUST_CD) AND
 A.BUS_DATE = TO_TIMESTAMP(B.BUS_DT,'YYYYMMDD'))
 LOOP
 BUSINESS_DATE := X.BUS_DATE;
 PARENT_ID := X.PARENT_CD;
 PARENT_COMPANY_NAME := X.PARENT_COMPANY;
 ROC_PARENT := X.CO_REIGN_NO;
 COUNTERPARTY_TYP := X.COUNTERPARTY_TYPE;
 UPDATE FI_SEC_FX_SETTLEMENT_STG SET PARENT_COMPANY = PARENT_COMPANY_NAME,
  PARENT_ROC = ROC_PARENT,
  COUNTERPARTY_TYPE = COUNTERPARTY_TYP
 WHERE TRIM(PARENT_CD) = TRIM(PARENT_ID) AND
  BUS_DATE  = BUSINESS_DATE;
 END LOOP;
 FOR Y IN
 (SELECT DISTINCT A.BUS_DATE,
   A.CHILD_CD,
  SUBSTR(B.SHORT_NM, 1 ,35) AS CHILD_COMPANY,
  B.CO_REIGN_NO
 --FROM FI_SEC_FX_SETTLEMENT_STG A , GLO_CUST_STG B
 FROM FI_SEC_FX_SETTLEMENT_STG A , GLO_CUST_NEW_STG B
 WHERE TRIM(A.CHILD_CD) = TRIM(B.CUST_CD) AND
  A.BUS_DATE = TO_TIMESTAMP(B.BUS_DT,'YYYYMMDD'))
 LOOP
 BUSINESS_DATE := Y.BUS_DATE;
 CHILD_ID := Y.CHILD_CD;
 CHILD_COMPANY_NAME := Y.CHILD_COMPANY;
 ROC_CHILD := Y.CO_REIGN_NO;
 UPDATE FI_SEC_FX_SETTLEMENT_STG SET CHILD_COMPANY = CHILD_COMPANY_NAME,
  CHILD_ROC = ROC_CHILD
  WHERE TRIM(CHILD_CD) = TRIM(CHILD_ID) AND
  BUS_DATE = BUSINESS_DATE;
 END LOOP;
 END;

/* END */



 /*6.CALCULATE THE SUM/MAX(AMT_BOUGHT)*/
 PRO_NAME := 'CALCULATE THE SUM/MAX(AMT_BOUGHT)';

/* TO CALCULATE THE SUM/MAX(AMT_BOUGHT)*/
/* NEW STAGING TABLE */
DECLARE
 APPL_ID FI_FX_SETTLEMENT_STG.SOURCE_ID%TYPE;
 BUS_DAT FI_FX_SETTLEMENT_STG.BUS_DATE%TYPE;
 CUST_CD FI_FX_SETTLEMENT_STG.COUNTERPARTY%TYPE;
 CUST_ID FI_FX_SETTLEMENT_STG.COUNTERPARTY%TYPE;
 CURR_B FI_FX_SETTLEMENT_STG.CURR_BOUGHT%TYPE;
 AMT_B FI_FX_SETTLEMENT_STG.AMT_BOUGHT%TYPE;
 VALUE_DAT_B FI_FX_SETTLEMENT_STG.VALUE_DATE_BUY%TYPE;
 CURR FI_SEC_FX_SETTLEMENT_STG.CURRENCY%TYPE;
 AMT FI_SEC_FX_SETTLEMENT_STG.FX_SETTLEMENT_EXPOSURE%TYPE;
 VALUE_DAT FI_SEC_FX_SETTLEMENT_STG.FX_VALUE_DATE%TYPE;
 BEGIN
 INSERT INTO FI_FX_SETTLEMENT_STG
 (SELECT SOURCE_ID,
  TO_TIMESTAMP(BUSINESS_DAT,'YYYYMMDD') AS BUSINESS_DAT, 
  COUNTERPARTY,
  CURR_BROUGHT,
  SUM(AMT_BOUGHT) AS AMT_BOUGHT,
 TO_TIMESTAMP(VALUE_DATE_BUY,'YYYYMMDD') AS VALUE_DATE_BUY,
  
  LIMIT_REF_NO,
  DESK_DAO,
  SUBSTR(DEPT_ACCT_OFFICER_NM,1,50) AS DEPT_ACCT_OFFICER_NM,
  SUBSTR(COMPANY_NAME,1,50) AS COMPANY_NAME
  
 FROM GLO_FOREX_NEW_STG
  WHERE VALUE_DATE_BUY > BUSINESS_DAT
 AND CURR_BROUGHT = 'MYR'
  GROUP BY SOURCE_ID,
  BUSINESS_DAT,
  COUNTERPARTY,
  CURR_BROUGHT,
  VALUE_DATE_BUY,
  LIMIT_REF_NO,
  DESK_DAO,
  DEPT_ACCT_OFFICER_NM,
  COMPANY_NAME);
 INSERT INTO FI_FX_SETTLEMENT_STG
  (SELECT SOURCE_ID,
    TO_TIMESTAMP(BUSINESS_DAT,'YYYYMMDD') AS BUSINESS_DAT,
    COUNTERPARTY,
   CURRENCY_SOLD,
    SUM(AMT_SOLD) AS AMT_SOLD,
TO_TIMESTAMP(VALUE_DATE_SELL,'YYYYMMDD') AS VALUE_DATE_SELL,
   
    LIMIT_REF_NO,
    DESK_DAO,
    SUBSTR(DEPT_ACCT_OFFICER_NM,1,50) AS DEPT_ACCT_OFFICER_NM,
    SUBSTR(COMPANY_NAME,1,50) AS COMPANY_NAME
    FROM GLO_FOREX_NEW_STG
   WHERE VALUE_DATE_BUY > BUSINESS_DAT
   AND CURRENCY_SOLD = 'MYR'
   GROUP BY SOURCE_ID,
   BUSINESS_DAT,
   COUNTERPARTY,
   CURRENCY_SOLD,
  VALUE_DATE_SELL,
   LIMIT_REF_NO,
   DESK_DAO,
   DEPT_ACCT_OFFICER_NM,
   COMPANY_NAME);
 END;


 /*7.GET THE MAX AMT BOUGHT (FOREX SETTLEMENT EXPOSURE)*/
 PRO_NAME := 'GET THE MAX AMT BOUGHT (FOREX SETTLEMENT EXPOSURE)';

/* TO GET THE MAX AMT BOUGHT (FOREX SETTLEMENT EXPOSURE) */
DECLARE
 CUST_CD FI_FX_SETTLEMENT_STG.COUNTERPARTY%TYPE;
 CUST_ID FI_FX_SETTLEMENT_STG.COUNTERPARTY%TYPE;
 CURR FI_FX_SETTLEMENT_STG.CURR_BOUGHT%TYPE;
 AMT FI_FX_SETTLEMENT_STG.AMT_BOUGHT%TYPE;
 VALUE_D FI_FX_SETTLEMENT_STG.VALUE_DATE_BUY%TYPE;
 BUS_DAT FI_FX_SETTLEMENT_STG.BUS_DATE%TYPE;
 CURR_B FI_FX_SETTLEMENT_STG.CURR_BOUGHT%TYPE;
 AMT_B FI_FX_SETTLEMENT_STG.AMT_BOUGHT%TYPE;
 VALUE_DAT_B FI_FX_SETTLEMENT_STG.VALUE_DATE_BUY%TYPE;
 --CURR_S FI_FX_SETTLEMENT_STG.CURR_SOLD%TYPE;
 --AMT_S FI_FX_SETTLEMENT_STG.AMT_SOLD%TYPE;
 --VALUE_DAT_S FI_FX_SETTLEMENT_STG.VALUE_DATED_SELL%TYPE;
 LIT_REF_NO FI_FX_SETTLEMENT_STG.LIMIT_REF_NO%TYPE;
 LIT_REF_NO1 FI_FX_SETTLEMENT_STG.LIMIT_REF_NO%TYPE;
 LIT_REF_NO2 FI_FX_SETTLEMENT_STG.LIMIT_REF_NO%TYPE;
 DAO FI_FX_SETTLEMENT_STG.DESK_DAO%TYPE;
 DAO1 FI_FX_SETTLEMENT_STG.DESK_DAO%TYPE;
 DAO2 FI_FX_SETTLEMENT_STG.DESK_DAO%TYPE;
 DAO_NM FI_FX_SETTLEMENT_STG.DEPT_ACCT_OFFICER_NM%TYPE;
 DAO_NM1 FI_FX_SETTLEMENT_STG.DEPT_ACCT_OFFICER_NM%TYPE;
 DAO_NM2 FI_FX_SETTLEMENT_STG.DEPT_ACCT_OFFICER_NM%TYPE;
 CO_NAME FI_FX_SETTLEMENT_STG.COMPANY_NAME%TYPE;
 CO_NAME1 FI_FX_SETTLEMENT_STG.COMPANY_NAME%TYPE;
 CO_NAME2 FI_FX_SETTLEMENT_STG.COMPANY_NAME%TYPE;
X RECORD;

 BEGIN
 FOR X IN
 (SELECT DISTINCT SOURCE_ID,
  BUS_DATE,
  COUNTERPARTY,
  CURR_BOUGHT,
  MAX(AMT_BOUGHT) AS AMT_BOUGHT,
  VALUE_DATE_BUY,
  SUBSTR(LIMIT_REF_NO,1,4) AS LIMIT_REF_NO,
  DESK_DAO,
  DEPT_ACCT_OFFICER_NM,
  COMPANY_NAME
 FROM FI_FX_SETTLEMENT_STG
 GROUP BY SOURCE_ID,
 BUS_DATE,
  COUNTERPARTY,
  CURR_BOUGHT,
 VALUE_DATE_BUY,
 LIMIT_REF_NO,
  DESK_DAO,
  DEPT_ACCT_OFFICER_NM,
  COMPANY_NAME)
 LOOP
 CUST_CD := X.COUNTERPARTY;
 BUS_DAT := X.BUS_DATE;
 CURR_B := X.CURR_BOUGHT;
 AMT_B := X.AMT_BOUGHT;
 LIT_REF_NO := X.LIMIT_REF_NO;
 DAO := X.DESK_DAO;
 DAO_NM := X.DEPT_ACCT_OFFICER_NM;
 CO_NAME := X.COMPANY_NAME;
 VALUE_D := X.VALUE_DATE_BUY;

 UPDATE FI_SEC_FX_SETTLEMENT_STG SET FX_SETTLEMENT_EXPOSURE = AMT_B, CURRENCY = CURR_B, LIMIT_PROD = LIT_REF_NO, LOB = DAO_NM, MGMT_CENTRE = CO_NAME, FX_VALUE_DATE = VALUE_D WHERE TRIM(PARENT_CD) = TRIM(CUST_CD) AND TRIM(LIMIT_REF_NO) = TRIM(LIT_REF_NO) AND BUS_DATE = BUS_DAT;
 END LOOP;
 END;


 /*8.UPDATE SECURITIES SETTLEMENT EXPOSURE, SECURITIES SETTLEMENT LIMIT SETTLEMENT LIMIT*/
 PRO_NAME := 'UPDATE SECURITIES SETTLEMENT EXPOSURE, SECURITIES SETTLEMENT LIMIT SETTLEMENT LIMIT';

/* UPDATE SECURITIES SETTLEMENT EXPOSURE, SECURITIES SETTLEMENT LIMIT SETTLEMENT LIMIT */
DECLARE
 BUS_DAT FI_SEC_FX_SETTLEMENT_STG.BUS_DATE%TYPE;
 CUST_CD FI_SEC_FX_SETTLEMENT_STG.PARENT_CD%TYPE;
 TTL_OS FI_SEC_FX_SETTLEMENT_STG.TOTAL_OS%TYPE;
 MAX_TTL FI_SEC_FX_SETTLEMENT_STG.MAX_TOTAL%TYPE;
 LIT_REF_NO FI_SEC_FX_SETTLEMENT_STG.LIMIT_REF_NO%TYPE;
 SEC_SETT_EXP FI_SEC_FX_SETTLEMENT_STG.SEC_SETTLEMENT_EXPOSURE%TYPE;
 SEC_SETT_LIT FI_SEC_FX_SETTLEMENT_STG.SEC_SETTLEMENT_LIMIT%TYPE;
 FX_SETT_LIT FI_SEC_FX_SETTLEMENT_STG.FX_SETTLEMENT_LIMIT%TYPE;
 CREDIT_LINE FI_SEC_FX_SETTLEMENT_STG.CREDIT_LINE_NO%TYPE;
X RECORD;
Y RECORD;

 BEGIN
 FOR X IN
 (SELECT BUS_DATE,
 PARENT_CD,
 TOTAL_OS,
 MAX_TOTAL,
 TRIM(LIMIT_REF_NO) AS LIMIT_REF_NO,
 SEC_SETTLEMENT_EXPOSURE,
 SEC_SETTLEMENT_LIMIT,
 FX_SETTLEMENT_LIMIT,
 CREDIT_LINE_NO
 FROM FI_SEC_FX_SETTLEMENT_STG
 WHERE LIMIT_REF_NO = '900')
 LOOP
 BUS_DAT := X.BUS_DATE;
 CUST_CD := X.PARENT_CD;
 TTL_OS := X.TOTAL_OS;
 MAX_TTL := X.MAX_TOTAL;
 LIT_REF_NO := X.LIMIT_REF_NO;
 CREDIT_LINE := X.CREDIT_LINE_NO;

 IF LIT_REF_NO = '900' THEN
 SEC_SETT_EXP := TTL_OS;
 SEC_SETT_LIT := MAX_TTL;
 ELSE SEC_SETT_EXP := '';
 SEC_SETT_LIT := '';
 END IF;
 UPDATE FI_SEC_FX_SETTLEMENT_STG SET SEC_SETTLEMENT_EXPOSURE = SEC_SETT_EXP,
  SEC_SETTLEMENT_LIMIT = SEC_SETT_LIT
 WHERE BUS_DATE = BUS_DAT
 AND TRIM(PARENT_CD) = TRIM(CUST_CD)
 AND TRIM(LIMIT_REF_NO) = '900'
 AND TRIM(CREDIT_LINE_NO) = TRIM(CREDIT_LINE);
 END LOOP;
 FOR Y IN
  (SELECT BUS_DATE,
 PARENT_CD,
  TOTAL_OS,
  MAX_TOTAL,
  TRIM(LIMIT_REF_NO) AS LIMIT_REF_NO,
  SEC_SETTLEMENT_EXPOSURE,
  SEC_SETTLEMENT_LIMIT,
  FX_SETTLEMENT_LIMIT,
  CREDIT_LINE_NO
  FROM FI_SEC_FX_SETTLEMENT_STG
  WHERE TRIM(LIMIT_REF_NO) IN ('4000', '4010', '4020', '4030'))
 LOOP
 BUS_DAT := Y.BUS_DATE;
 CUST_CD := Y.PARENT_CD;
 TTL_OS := Y.TOTAL_OS;
 MAX_TTL := Y.MAX_TOTAL;
 LIT_REF_NO := Y.LIMIT_REF_NO;
 CREDIT_LINE := Y.CREDIT_LINE_NO;
 IF LIT_REF_NO IN ('4000') THEN
 FX_SETT_LIT := MAX_TTL;
 ELSE FX_SETT_LIT := 0;
 END IF;

 UPDATE FI_SEC_FX_SETTLEMENT_STG SET FX_SETTLEMENT_LIMIT = FX_SETT_LIT
 WHERE BUS_DATE = BUS_DAT
 AND TRIM(PARENT_CD) = TRIM(CUST_CD)
 AND TRIM(LIMIT_REF_NO) = TRIM(LIT_REF_NO)
 AND TRIM(CREDIT_LINE_NO) = TRIM(CREDIT_LINE);

 END LOOP;
 END;


 /*9.INSERT NULL OR EMPTY CHILD ROC*/
 PRO_NAME := 'INSERT NULL OR EMPTY CHILD ROC';

/* TO INSERT NULL OR EMPTY CHILD ROC */
UPDATE FI_SEC_FX_SETTLEMENT_STG
SET CHILD_ROC = PARENT_ROC,
 CHILD_COMPANY = PARENT_COMPANY,
 CHILD_CD = PARENT_CD
WHERE CHILD_ROC IS NULL OR
 TRIM(CHILD_CD) IS NULL;


 /*10.REPLACE PARENT_ROC = * WITH CUST_ID*/
 PRO_NAME := 'REPLACE PARENT_ROC = * WITH CUST_ID';

/* REPLACE PARENT_ROC = '*' WITH CUST_ID */
DECLARE
 BUS_DAT FI_SEC_FX_SETTLEMENT_STG.BUS_DATE%TYPE;
 PCODE FI_SEC_FX_SETTLEMENT_STG.PARENT_CD%TYPE;
 PROC FI_SEC_FX_SETTLEMENT_STG.PARENT_ROC%TYPE;
 CCODE FI_SEC_FX_SETTLEMENT_STG.CHILD_CD%TYPE;
 CROC FI_SEC_FX_SETTLEMENT_STG.CHILD_ROC%TYPE;
 CREDIT_LINE FI_SEC_FX_SETTLEMENT_STG.CREDIT_LINE_NO%TYPE;
X RECORD;

 BEGIN
 FOR X IN
 (SELECT BUS_DATE, PARENT_CD, PARENT_ROC,
  CHILD_CD, CHILD_ROC, CREDIT_LINE_NO
 FROM FI_SEC_FX_SETTLEMENT_STG
 WHERE TRIM(PARENT_ROC) IN ('*', '0')
 OR TRIM(CHILD_ROC) IN ('*', '0'))
 LOOP
 BUS_DAT := X.BUS_DATE;
 PCODE := X.PARENT_CD;
 PROC := X.PARENT_ROC;
 CCODE := X.CHILD_CD;
 CROC := X.CHILD_ROC;
 CREDIT_LINE := X.CREDIT_LINE_NO;
 UPDATE FI_SEC_FX_SETTLEMENT_STG SET PARENT_ROC = PCODE
 WHERE TRIM(PARENT_ROC) IN ('*', '0')
  AND BUS_DATE = BUS_DAT
  AND CREDIT_LINE_NO = CREDIT_LINE;

 UPDATE FI_SEC_FX_SETTLEMENT_STG SET CHILD_ROC = CCODE
  WHERE TRIM(CHILD_ROC) IN ('*', '0')
  AND BUS_DATE = BUS_DAT
  AND CREDIT_LINE_NO = CREDIT_LINE;
 END LOOP;
 END;

/* END */



 /*11. INSERT * FROM FI_SEC_FX_SETTLEMENT_STG INTO SEC_FOREX_SETTLEMENT_LIMIT_EXP*/
 PRO_NAME := 'INSERT * FROM FI_SEC_FX_SETTLEMENT_STG INTO SEC_FOREX_SETTLEMENT_LIMIT_EXP';

/* TO INSERT DATA INTO FINAL TABLE */
INSERT INTO SEC_FOREX_SETTLEMENT_LIMIT_EXP
 (SEC_BUS_DATE,
 SEC_PARENT_COMPANY,
 SEC_ROC_PARENT_COMPANY,
 SEC_CHILD_COMPANY,
 SEC_ROC_CHILD_COMPANY,
 SEC_EN_NAME,
 SEC_ACT_GROUP,
 SEC_LOB,
 SEC_SUB_LOB,
 SEC_MGMT_CENTRE,
 SEC_CURRENCY,
 SEC_FI_SEC_SETTLE_EXP,
 SEC_FI_FOREX_SETTLE_EXP,
 SEC_FI_SEC_SETTLE_LIMIT,
 SEC_FI_FOREX_SETTLE_LIMIT,
 SEC_FX_VAL_DATE,
 SEC_COUNTER_PARTY_TYPE,
 SEC_APPL_ID,
 SEC_CREDIT_LINE_NO)
SELECT DISTINCT BUS_DATE,
 PARENT_COMPANY,
 PARENT_ROC,
 CHILD_COMPANY,
 CHILD_ROC,
 ENT_NAME,
 ACTIVITY_GROUP,
 LOB,
 SUB_LOB,
 MGMT_CENTRE,
 CURRENCY,
 SEC_SETTLEMENT_EXPOSURE,
 FX_SETTLEMENT_EXPOSURE,
 SEC_SETTLEMENT_LIMIT,
 FX_SETTLEMENT_LIMIT,
 FX_VALUE_DATE,
 COUNTERPARTY_TYPE,
 SOURCE_ID,
 CREDIT_LINE_NO
FROM FI_SEC_FX_SETTLEMENT_STG
WHERE PARENT_ROC NOT LIKE '%*%';

/* END */


 /*LOAD START STATUS*/
 PRO_NAME := 'LOAD GLOBUS DATA INTO MONEY SECURITIES FOREX';
 PRO_STATUS := 'END';
 PRO_BUS_DATE := RERUN_DATE;
 PRO_LOAD_STATUS := 'TRUE';
 PRO_SYSTEM_DATE := SYS_DATE;

 INSERT INTO ADM_PROCESS_LOG
 (APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
 VALUES (PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

EXCEPTION
 WHEN OTHERS THEN
 /*INSERT INTO ADM_EXT_TO_STG_LOG*/
 --PRO_NAME := 'LOAD EXTERNAL TABLE INTO STAGING TABLE';
 PRO_STATUS := '-1,error';
 PRO_BUS_DATE := RERUN_DATE;
 PRO_SYSTEM_DATE := Get_Current_Date(SYS_DATE);
 PRO_LOAD_STATUS := 'FALSE';

 INSERT INTO ADM_PROCESS_LOG
 (APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
 VALUES (PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

 /*INSERT INTO ADM_ERROR_LOG*/
 INSERT INTO ADM_ERROR_LOG
 (AEL_PRO_NAME, AEL_PRO_STATUS, AEL_PRO_BUS_DATE, AEL_LOAD_STATUS, AEL_SYSTEM_DATE)
 VALUES (PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

END;
$$
LANGUAGE PLPGSQL;

