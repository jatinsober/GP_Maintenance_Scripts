------
--DEV BY : Jitendra Lodwal  
--DATE  : 25-AUG-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------

SET SEARCH_PATH TO WORKAREA;

CREATE OR REPLACE FUNCTION Mep_Sub_Load_Cps(P_DATE IN DATE) RETURNS VOID AS $$
DECLARE
P_RPT_DT TIMESTAMP;
BEGIN
P_RPT_DT :=P_DATE;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE1 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;

BEGIN
UPDATE MEP_DTL_CPS
SET MD_CYCLE= TO_CHAR(TO_DATE((TO_CHAR(MD_REPORT_DT,'YYYYMM')||MD_CYCLE_CPS),'YYYYMMDD'),'DDMONYYYY');
---------------------- UPDATE RENEWAL INDICATOR ---------------------------------------
		 UPDATE MEP_DTL_CPS
	     SET MD_RENEW_L1M='Y'
		 WHERE TO_CHAR(MD_RENEW_DT,'MON-YY')= TO_CHAR(P_RPT_DT,'MON-YY');
		 --COMMIT;
		 UPDATE MEP_DTL_CPS
		 SET MD_RENEW_L1M='N'
	     WHERE MD_RENEW_L1M IS NULL;
		 --COMMIT;
		UPDATE MEP_DTL_CPS SET MD_RENEW_MTD =MD_RENEW_L1M ;
		--COMMIT;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE2 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
	---------------------- END : UPDATE RENEWAL INDICATOR ---------------------------------------
--------------- UPDATE MIA TOTAL FROM DELI TABLE -------------------------------------------
	   UPDATE MEP_DTL_CPS
	   SET MD_MIA_TOT = MD_PAST_DUE,
               MD_DELI_BUCKET=MD_PAST_DUE,
	       MD_DELI_AT_PD_L1M=MD_PAST_DUE;
	   --COMMIT;
	   UPDATE MEP_DTL_CPS
	   SET MD_MIN_AMT_DUE =MD_DPD_AMT1,
	   MD_DELI_AMT = COALESCE(MD_DPD_AMT1,0) + COALESCE(MD_DPD_AMT2,0)+COALESCE(MD_DPD_AMT3,0)+COALESCE(MD_DPD_AMT4,0)
	                 +COALESCE(MD_DPD_AMT5,0)+COALESCE(MD_DPD_AMT6,0)+COALESCE(MD_DPD_AMT7,0)+COALESCE(MD_DPD_AMT8,0);
	  -- WHERE MD_MIA_TOT>0;
	   --COMMIT;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE3 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
-------------- END UPDATE MIA TOT -----------------------------------------------------------

---------------- END : UPDATE  PREV CRDT LIMIT -----------------------------------------
---------------- START : UPDATE COINCIDENT DELI ME AND CYC -----------------------------------------
		   UPDATE MEP_DTL_CPS
		   SET MD_COINDC_DELI_ME = ROUND(CAST((COALESCE(MD_DELI_AMT,0) / COALESCE(MD_OS_AMT,0))AS INT),2)
		   WHERE MD_OS_AMT > 0  ;
---------------- END : UPDATE COINCIDENT DELI ME AND CYC -----------------------------------------
---------------- START : UPDATE SOC AND EOM BILL -----------------------------------------
 BEGIN
 	   UPDATE MEP_DTL_CPS
	   SET MD_SOC_OS_BAL=MD_OS_AMT,
	       MD_EOM_OS_BAL=MD_OS_AMT,
	       MD_SOC_OS_UNBILL_BAL=MD_OS_AMT,
		   MD_EOM_OS_UNBILL_BAL=MD_OS_AMT;
	   --COMMIT;
 END;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE4 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
---------------- END :  TO UPDATE THE REVENUE AMT ------------------------------------------------
			   	   UPDATE MEP_DTL_CPS
				   SET MD_NET_RECEIVE_AVG = ROUND(CAST((COALESCE(MD_OS_AMT,0) + COALESCE(MD_PREV_BAL_OS,0)) / 2 AS INT), 2);
				   --COMMIT;
---------------- END ; TO GET AVG NET RECEIVABLES ----------------------------------------------
----------------- TO UPDATE REVOLVING ANR ------------------------------------------------------
				 UPDATE MEP_DTL_CPS
				 SET MD_REVOLVE_ANR = (COALESCE(MD_OS_AMT,0) + COALESCE(MD_PREV_BAL_OS,0) /2) - COALESCE(MD_PREV_BAL_OS,0);
				 --COMMIT;
				 UPDATE MEP_DTL_CPS
				 SET MD_ANR = (COALESCE(MD_OS_AMT,0) + COALESCE(MD_PREV_BAL_OS,0) /2);
				 --COMMIT;
				UPDATE MEP_DTL_CPS
				SET MD_REVOLVE_RT_ANR = ROUND(COALESCE(MD_REVOLVE_ANR,0) / COALESCE(MD_ANR,0),2)
				WHERE  MD_ANR <> 0;
				--COMMIT;
				UPDATE MEP_DTL_CPS
				SET MD_REVOLVE_RT_ANR=0
				WHERE MD_REVOLVE_RT_ANR IS NULL;
				--COMMIT;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE5 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
----------------- END - TO UPDATE REVOLVING ANR ------------------------------------------------------
----------------- START UPDATE MAX DELI L1M --------------------------------------------------
	BEGIN
		       UPDATE MEP_DTL_CPS
			   SET  MD_MAX_DELI_L1M=MD_MIA_TOT;
			  --      MD_TREND_DELI_L1M= MD_MIA_TOT
			   --COMMIT;
	END;
----------------- END UPDATE MAX DELI L1M --------------------------------------------------
-------------- START UPDATE DELI SIZE L1M ------------------------------------------------
			 UPDATE MEP_DTL_CPS
			 SET MD_DELI_SIZE_L1M=MD_DELI_AMT;
			 --COMMIT;
-------------- END UPDATE DELI SIZE L1M ------------------------------------------------
-------------- START DPD AMT - ACCORDING TO MIA -----------------------------------------
-------------- END DPD AMT - ACCORDING TO MIA -----------------------------------------
-------------- START UPDATING DPD INDICATOR -------------------------------------------
--SUDHAKAR 15-03-2011

INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE6 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
-------------- END UPDATING DPD INDICATOR -------------------------------------------

-------------- END UPDATING DELI BUCKET INDICATOR  -------------------------------------------
-------------- START UPDATING DELI BUCKET = MIA TOTAL  -------------------------------------------
			UPDATE MEP_DTL_CPS
			SET MD_DELI_BUCKET =0
			WHERE MD_DELI_BUCKET IS NULL;
			--COMMIT;
-------------- END UPDATE THE OVLIMIT FOR L1M ----------------------------------------------

INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE7 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
-------------- END UPDATE THE EVER MIA 1-8 + FOR L1M----------------------------------------------
			  UPDATE MEP_DTL_CPS
			  SET MD_OVER_LMT_CNT_L1M = 0
			  WHERE MD_OVER_LMT_CNT_L1M IS NULL;
-- --------------- END UPDATE DELI COUNT ---------------------------------------------------
----- UPDATE ACTIVE INDICATOR ----------------------------
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE8 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
BEGIN
	  UPDATE MEP_DTL_CPS
	  SET MD_ACTIVE_IND='Y'
	  WHERE ROUND((MD_REPORT_DT - MD_LST_PYMT_DT)/30,0) <='3';
	  --COMMIT;
	  UPDATE MEP_DTL_CPS
	  SET MD_ACTIVE_IND='N'
	  WHERE  MD_ACTIVE_IND IS NULL;
	  --COMMIT;
END;
----- END ACTIVE INDICATOR ----------------------------
--- UPDATE APR -----------------------------------------
		  UPDATE MEP_DTL_CPS
		  SET MD_APR=(SELECT MCA_APR
                     FROM MEP_CPS_APR,MEP_DTL_CPS
		  			 WHERE MEP_DTL_CPS.MD_LN_SUB_PROD=MCA_PROD_CD);
		  --COMMIT;
		  UPDATE MEP_DTL_CPS A
		  SET MD_INT_RT=MD_APR;
		  --COMMIT;
------ END PREVIOUS MONTH DELI ------------------
---- UPDATE AMT DUE FOR ARREARS ACCOUNT ONLY ------------
UPDATE MEP_DTL_CPS
SET MD_AMT_DUE = COALESCE(MD_OS_AMT,0)-COALESCE(MD_DELI_AMT,0);
--WHERE MD_MIA_TOT >0 ;
--COMMIT;
UPDATE MEP_DTL_CPS
SET  MD_AMT_DUE = 0
WHERE MD_AMT_DUE IS NULL;
--COMMIT;
---------------- END TO UPDATE MD_DELI @ PERIOD = MD_PAST_DUE ----------------------------------------
-- UPDATE WRITE OFF AMOUNT ----------------------------------
  BEGIN
    UPDATE MEP_DTL_CPS
    SET MD_WOFF_AMT=MD_OS_AMT
    WHERE  MD_WOFF_IND='Y';
 --COMMIT;
  END;
-- END UPDATE WRITE OFF AMOUNT ----------------------------------
--- UPDATE NET CREDIT LOSS  ONLY FOR WOFF ACCT -----------------------
  BEGIN
     UPDATE MEP_DTL_CPS
	 SET MD_NET_CRDT_LOSS=COALESCE(MD_WOFF_AMT,0)- COALESCE(MD_RECOVERY_AMT,0)
	 WHERE  MD_WOFF_IND='Y';
	 --COMMIT;
  END;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE9 MEP_DTL_ICS FOR CPS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
--- END UPDATE NET CREDIT LOSS -----------------------
-- TO UPDATE PAID PCT ------
  BEGIN
  	   UPDATE MEP_DTL_CPS
	   SET MD_PAID_PCT= ROUND((MD_OS_AMT / MD_CRDT_LMT),2)
	   WHERE MD_CRDT_LMT > 0;
	   --COMMIT;
  END;
-- END : TO UPDATE PAID PCT ------
-- TO UPDATE OVER LIMIT AMT AND PCT --
 	   UPDATE MEP_DTL_CPS
	   SET MD_OVER_LMT_AMT= COALESCE(MD_OS_AMT,0)- COALESCE(MD_CRDT_LMT,0)
	   WHERE (COALESCE(MD_OS_AMT,0)- COALESCE(MD_CRDT_LMT,0))> 0 ;--AND  COALESCE(MD_CRDT_LMT,0) > 0;
	   --COMMIT;
	   UPDATE MEP_DTL_CPS
	   SET MD_OVER_LMT_PCT= ROUND((MD_OS_AMT-MD_CRDT_LMT) / MD_CRDT_LMT,2)
	   WHERE (COALESCE(MD_OS_AMT,0)- COALESCE(MD_CRDT_LMT,0))> 0 AND  COALESCE(MD_CRDT_LMT,0) > 0;
	   --COMMIT;
INSERT INTO MEP_LOG_CPS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE09 MEP_DTL_ICS FOR CPS -END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
--COMMIT;
   END; -- END ICS EXTRACTION
END;  -- GLOBAL END
$$
LANGUAGE PLPGSQL;

