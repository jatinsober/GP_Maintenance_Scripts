SET SEARCH_PATH TO DBSCRUB;
CREATE OR REPLACE FUNCTION MBS_LN_SP_INS_TB_MBSBranch() RETURNS VOID AS $$
--
-- Dev : Odia Ukoko
-- Date: 31/03/2012
-- Desc: Converted to set operation. 
--       Got rid of the use of loops to improve the performance. Seriously rebooted this script.
--
-- Dev : Jitendra Lodwal
-- Date: 02/04/2012
-- Desc: Modify Query (Added alias and Sequence used in SQL-Server)
--
--SET SEARCH_PATH TO DBSCRUB;

BEGIN

/* Flagging any pre-existing Branch records where any of the columns have updated values */
	BEGIN
		UPDATE MBS_LOANS.TB_MBSBRANCH T1
		SET LASTUPDATEFLAG = 0
		FROM DBSCRUB.TB_MBSBranch T2
		WHERE T1.BRANCHCD = T2.BRANCHCD AND T1.LASTUPDATEFLAG = 1
		AND T2. BRANCDDESCRIPTION <> T1.BRANCDDESCRIPTION
		OR T2.REGIONCD <> T1.REGIONCD
		OR T2.REGIONDESCRIPTION <> T1.REGIONDESCRIPTION
		OR T2.BRANCHTYPE <> T1.BRANCHTYPE
		OR T2.STREETLINE1 <> T1.STREETLINE1
		OR T2.STREETLINE2 <> T1.STREETLINE2
		OR T2.STREETLINE3 <> T1.STREETLINE3
		OR T2.POSTCODE <> T1.POSTCODE
		OR T2.TOWN <> T1.TOWN
		OR T2.STATE <> T1.STATE
		OR T2.COUNTRY <> T1.COUNTRY
		OR T2.TELEPHONE1 <> T1.TELEPHONE1
		OR T2.TELEPHONE2 <> T1.TELEPHONE2
		OR T2.CASHLIMIT <> T1.CASHLIMIT
		OR T2.FLOORLIMIT <> T1.FLOORLIMIT
		OR T2.OPENDT <> T1.OPENDT;
	END;
/* Inserting fresh records for new Branch Codes as well as  modified data for existing Branch Codes */
	BEGIN
		INSERT INTO MBS_LOANS.TB_MBSBRANCH
		(branchcd_key,BRANCHCD, BRANCDDESCRIPTION, REGIONCD, REGIONDESCRIPTION, BRANCHTYPE
		, STREETLINE1, STREETLINE2, STREETLINE3, POSTCODE, TOWN
		, STATE, COUNTRY, TELEPHONE1, TELEPHONE2, CASHLIMIT
		, FLOORLIMIT, OPENDT, LASTUPDATEFLAG, UPDATEDATETIME)
		SELECT
		  nextval('seq_tb_mbsbranch'),BRANCHCD, BRANCDDESCRIPTION, REGIONCD, REGIONDESCRIPTION, BRANCHTYPE
		, STREETLINE1, STREETLINE2, STREETLINE3, POSTCODE, TOWN
		, STATE, COUNTRY, TELEPHONE1, TELEPHONE2, CASHLIMIT
		, FLOORLIMIT, OPENDT, LASTUPDATEFLAG, UPDATEDATETIME
		FROM DBSCRUB.TB_MBSBranch;
	END;
	
END; 
$$
LANGUAGE plpgsql;

