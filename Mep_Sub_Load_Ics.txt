------
--DEV BY : Jitendra Lodwal  
--DATE  : 25-AUG-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------

SET SEARCH_PATH TO WORKAREA;

CREATE OR REPLACE FUNCTION Mep_Sub_Load_Ics(P_DATE IN DATE) RETURNS VOID AS $$
DECLARE
P_RPT_DT  DATE;
ERR_MSG    VARCHAR(500);
PARAM_DT DATE;

BEGIN

BEGIN
P_RPT_DT := P_DATE;
BEGIN
UPDATE MEP_DTL_ICS
SET MD_COINDC_DELI_ME =COALESCE(MD_DELI_AMT,0)/COALESCE(MD_OS_AMT,0)
WHERE MD_OS_AMT <> 0;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE1 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
END;
--COMMIT;

BEGIN
UPDATE MEP_DTL_ICS SET  MD_ENTITY='AMI' WHERE MEP_DTL_ICS.MD_LN_SUB_PROD in (SELECT T.CIP_PROD_CD FROM MEP_PRODUCT_ICS T WHERE T.CIP_ISLMIC_IND ='Y' AND MEP_DTL_ICS.MD_LN_SUB_PROD=T.CIP_PROD_CD);

--COMMIT;
EXCEPTION
--WHEN OTHERS THEN
--ERR_MSG := SQLCODE||''||SQLERRM;
  WHEN OTHERS THEN         ERR_MSG := -1 || '' || 'Error' ;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );
END;
BEGIN
UPDATE MEP_DTL_ICS SET MD_ENTITY='AMB'
WHERE MD_ENTITY IS NULL;
--COMMIT;
EXCEPTION
  WHEN OTHERS THEN         ERR_MSG := -1 || '' || 'Error' ;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );
END;
	---------------------- END : TO UPDATE THE ENTITY -----------------------------------------------------------------
	---------------------- START : TO UPDATE THE PRODUCT ----------------------------------------------------------
	--*******************************************************************************************************--
    ---------------------- END : TO UPDATE THE PRODUCT ----------------------------------------------------------
	---------------------- START : TO UPDATE THE PRODUCT DESC----------------------------------------------------------
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE2 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
BEGIN
      UPDATE MEP_DTL_ICS 
      SET MD_PROD_CD = PROD_SHORT_DESC
      FROM DWPROD.PRODUCT
      WHERE MEP_DTL_ICS.MD_LN_SUB_PROD=PROD_PROD_CD;
      --COMMIT;
UPDATE MEP_DTL_ICS A
      SET MD_PROD_CD ='HPD Abrar (BBA)'
WHERE MD_LN_SUB_PROD ='I483';
--COMMIT;
EXCEPTION
WHEN OTHERS THEN        ERR_MSG := -1 || '' || 'Error' ;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
   VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );
END;
    ---------------------- END : TO UPDATE THE PRODUCT  DESC -----------------------------------------------------
-------------------------- START : TO UPDATE INDICATOR FOR AUTO DEBIT ------------------------
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE3 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
       BEGIN
	       UPDATE MEP_DTL_ICS A SET  MD_AUTO_DBT_IND='Y'
	       WHERE A.MD_ACCT_ID IN (SELECT AAR_R_ACCT_ID
	       FROM ACCT_ACCT_REL_ICS
	       WHERE AAR_R_APPL_SYS_ID ='ICS');
	   	   --COMMIT;
	   EXCEPTION
	   WHEN OTHERS THEN         ERR_MSG := -1 || '' || 'Error';

 INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
       VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );
	   END;
	   BEGIN
	       UPDATE MEP_DTL_ICS A SET  MD_AUTO_DBT_IND='N'
	       WHERE  MD_AUTO_DBT_IND IS NULL;
	       --COMMIT;
       END;
           ---------------FINISH  UPDATE INDICATOR FOR AUTO DEBIT ------------------------
           -------- TO UPDATE ACCT STATUS TO WRITE OFF IF WOFF IND = Y -----------------------
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE4 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
           BEGIN
           UPDATE MEP_DTL_ICS
           SET MD_ACCT_STAT='X'
           WHERE MD_APPL_SYS_ID='ICS'
           AND MD_WOFF_IND='Y';
           --COMMIT;
		   EXCEPTION
		  WHEN OTHERS THEN         ERR_MSG := -1 || '' || 'Error' ;

     INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
           VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );
           END;


   		   INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
           VALUES  (P_DATE,'UPDATE5 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );

------------- UPDATE AMORTIZATION FOR ARREARS ACCOUNT -- TO GET SAME VALUE AS DELI AMT -------------------
-------- ********** FOR ALL ACCT ------------

BEGIN
--UPDATE MEP_DTL_ICS
--SET MD_MTH_AMORT= ROUND((COALESCE(MD_PRINC_LN_AMT,0)+COALESCE(MD_INT_AMT,0))/COALESCE(MD_LN_TERM,0),2);

UPDATE MEP_DTL_ICS
SET MD_MTH_AMORT= ROUND((COALESCE(CAST(MD_PRINC_LN_AMT AS INT),0)+COALESCE(CAST(MD_INT_AMT AS INT),0))/COALESCE(CAST(MD_LN_TERM AS INT),0),2);


--COMMIT;
EXCEPTION
     WHEN OTHERS THEN        ERR_MSG := -1 || '' || 'Error';

     INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
             VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );
END;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE6 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
------------- END UPDATE AMORTIZATION FOR ARREARS ACCOUNT -- TO GET SAME VALUE AS DELI AMT -------------------
---------------- START : TO UPDATE THE REVENUE AMT ------------------------------------------------

---------------- END :  TO UPDATE THE REVENUE AMT ------------------------------------------------
----------------- START UPDATE MAX DELI L1M --------------------------------------------------


BEGIN
       UPDATE MEP_DTL_ICS
	   SET  MD_MAX_DELI_L1M = MD_PAST_DUE,
	   		MD_DELI_BUCKET = MD_PAST_DUE,
			MD_DELI_AT_PD_L1M= MD_PAST_DUE;
	   --COMMIT;
END;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE7 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
----------------- END UPDATE MAX DELI L1M --------------------------------------------------
-------------- START UPDATE DELI SIZE L1M ------------------------------------------------

BEGIN
			 UPDATE MEP_DTL_ICS
			 SET MD_DELI_SIZE_L1M=MD_DELI_AMT
			 WHERE MD_DELI_AMT > 0;
			 --COMMIT;
        END;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE8 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-------------- END UPDATE DELI SIZE L1M ------------------------------------------------
-------------- START UPDATING DPD INDICATOR -------------------------------------------


INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE9 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE10 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-------------- END UPDATING DPD INDICATOR -------------------------------------------
-------------- START UPDATING DELI BUCKET INDICATOR  -------------------------------------------
-------------- END UPDATING DELI BUCKET INDICATOR  -------------------------------------------
-------------- START UPDATING DELI BUCKET = MIA TOTAL  -------------------------------------------
UPDATE MEP_DTL_ICS
SET MD_DELI_BUCKET =0
WHERE MD_DELI_BUCKET IS NULL;
--COMMIT;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE11 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-------------- END UPDATING DELI BUCKET = MIA TOTAL  -------------------------------------------
-------------- START UPDATE THE OVLIMIT FOR L1M ----------------------------------------------
-------------- END UPDATE THE OVLIMIT FOR L1M ----------------------------------------------
--------------  UPDATE THE EVER MIA 1-8 + FOR L1M ----------------------------------------------
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE12 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-------------- END UPDATE THE EVER MIA 1-8 + FOR L1M----------------------------------------------
-------------- START UPDATE OVLIMIT CNT FOR L1M --------------------------------------------

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE13 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DELI_COUNT1_L1M=1
WHERE MD_PAST_DUE = 1;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DELI_COUNT2_L1M=1
WHERE MD_PAST_DUE = 2;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DELI_COUNT3_L1M=1
WHERE MD_PAST_DUE = 3;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DELI_COUNT4_L1M=1
WHERE MD_PAST_DUE = 4;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DELI_COUNT5_L1M=1
WHERE MD_PAST_DUE = 5;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DELI_COUNT6_L1M=1
WHERE MD_PAST_DUE > 5;
--COMMIT;

	  UPDATE MTR_DTL_ICS
	  SET MD_ACTIVE_IND='N'
	  WHERE MD_APPL_SYS_ID='ICS'
	  AND MD_ACTIVE_IND IS NULL;
	  --COMMIT;
END;

------ END PREVIOUS MONTH DELI ------------------
---- UPDATE AMT DUE FOR ARREARS ACCOUNT ONLY ------------

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE15 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;

UPDATE MEP_DTL_ICS
SET MD_AMT_DUE = MD_OS_AMT-MD_DELI_AMT
WHERE MD_MIA_TOT >0 ;
--COMMIT;
UPDATE MEP_DTL_ICS
SET  MD_AMT_DUE = 0
WHERE MD_AMT_DUE IS NULL;
--COMMIT;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE16 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
---- end UPDATE AMT DUE FOR ARREARS ACCOUNT ONLY ------------
-- UPDATE WRITE OFF AMOUNT ----------------------------------

BEGIN
    UPDATE MEP_DTL_ICS
    SET MD_WOFF_AMT=MD_OS_AMT
    WHERE MD_WOFF_IND='Y';
 --COMMIT;
  END;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE17 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-- END UPDATE WRITE OFF AMOUNT ----------------------------------
--- UPDATE NET CREDIT LOSS -----------------------
  BEGIN
     UPDATE MEP_DTL_ICS
	 SET MD_NET_CRDT_LOSS=COALESCE(MD_WOFF_AMT,0)- COALESCE(MD_RECOVERY_AMT,0)
	 WHERE MD_WOFF_IND='Y';
	 --COMMIT;
  END;
 INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE18 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
--- END UPDATE NET CREDIT LOSS -----------------------
----------- UPDATE TOT PAYMENT AND TREN BAL SIZE = MD_PAYMENT ------------

BEGIN
	 	   UPDATE MEP_DTL_ICS
		   SET MD_AVG_PAYMENT_L1M=MD_PYMT_MTD,
		       MD_TOT_PYMT_L1M=MD_PYMT_MTD;
		   --COMMIT;
END;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE19 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
------------END UPDATE TOT PAYMENT AND TREN BAL SIZE = MD_PAYMENT ------------
---------------- START ; TO GET AVG NET RECEIVABLES ----------------------------------------------
      ---------------   UPDATE PAYMENT RATE --------

UPDATE MEP_DTL_ICS
SET MD_NET_RECEIVE_AVG =(COALESCE(MD_OS_AMT,0) + COALESCE(MD_PREV_BAL_OS,0)) / 2
WHERE (COALESCE(MD_OS_AMT,0) + COALESCE(MD_PREV_BAL_OS,0)) / 2 > 0;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_PYMT_RT= ROUND(MD_PYMT_MTD / MD_PREV_BAL_OS,2)
WHERE MD_PREV_BAL_OS >0;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_PYMT_RT=0
WHERE MD_PYMT_RT IS NULL;
--COMMIT;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE20 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
---------------  END UPDATE PAYMENT RATE --------
---------------- END ; TO GET AVG NET RECEIVABLES ----------------------------------------------
-------------- START DPD AMT - ACCORDING TO MIA -----------------------------------------

UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT
WHERE MD_PAST_DUE =1;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT
WHERE MD_PAST_DUE =2;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT
WHERE MD_PAST_DUE =3;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
WHERE MD_PAST_DUE =4;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT
WHERE MD_PAST_DUE =5;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT,MD_DPD_AMT6 = MD_MTH_AMORT
WHERE MD_PAST_DUE =6;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT,MD_DPD_AMT6 = MD_MTH_AMORT,MD_DPD_AMT7 = MD_MTH_AMORT
WHERE MD_PAST_DUE =7;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT1 = MD_MTH_AMORT,MD_DPD_AMT2 = MD_MTH_AMORT,MD_DPD_AMT3 = MD_MTH_AMORT,MD_DPD_AMT4 = MD_MTH_AMORT
,MD_DPD_AMT5 = MD_MTH_AMORT,MD_DPD_AMT6 = MD_MTH_AMORT,MD_DPD_AMT7 = MD_MTH_AMORT,MD_DPD_AMT8 = MD_MTH_AMORT
WHERE MD_PAST_DUE >=8;
--COMMIT;
UPDATE MEP_DTL_ICS
SET MD_DPD_AMT8 =MD_DELI_AMT
WHERE MD_ACCT_STAT ='X'
AND MD_DPD_AMT8 IS NULL;
--COMMIT;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE21 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-------------- END DPD AMT - ACCORDING TO MIA -----------------------------------------
-- TO UPDATE REMAINING INTEREST
BEGIN
 	--  UPDATE MEP_DTL_ICS
	  --SET MD_INT_REMAIN_AMT= ROUND((COALESCE(MD_REMAIN_TERMS,0)*(COALESCE(MD_REMAIN_TERMS,0)+1)) / (COALESCE(MD_LN_TERM,0)*(COALESCE(MD_LN_TERM,0)+1)) --* COALESCE(MD_INT_AMT,0),2 );


 	  UPDATE MEP_DTL_ICS
	  SET MD_INT_REMAIN_AMT= ROUND((COALESCE(CAST(MD_REMAIN_TERMS AS INT),0)*(COALESCE(CAST(MD_REMAIN_TERMS AS INT),0)+1)) / (COALESCE(CAST(MD_LN_TERM AS INT),0)*(COALESCE(CAST(MD_LN_TERM AS INT),0)+1)) * COALESCE(CAST(MD_INT_AMT AS INT),0),2 );

	  --COMMIT;
END;
-- TO UPDATE INTEREST PAID
BEGIN
UPDATE MEP_DTL_ICS
SET MD_TOT_INT_PAID= COALESCE(MD_INT_AMT,0) - COALESCE(MD_INT_REMAIN_AMT,0);
--COMMIT;
END;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE22 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
--- TO UPDATE PRINCIPAL PAID - MD_TOT_PRINC_PAID
BEGIN
UPDATE MEP_DTL_ICS
SET MD_TOT_PRINC_PAID = (COALESCE(MD_CI_PYMTS_PD,0) * COALESCE(MD_MTH_AMORT,0)) - COALESCE(MD_TOT_INT_PAID,0);
--COMMIT;
END;
INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE23 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
-- TO UPDATE PRINCIPAL REMAIN
BEGIN
UPDATE MEP_DTL_ICS
SET MD_PRINC_REMAIN_AMT = COALESCE(MD_PRINC_LN_AMT,0) - COALESCE(MD_TOT_PRINC_PAID,0);
--COMMIT;
END;

UPDATE MEP_DTL_ICS
SET MD_ACTIVE_IND='N'
WHERE MD_ACTIVE_IND IS NULL;



INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'UPDATE24 MEP_DTL_ICS FOR ICS -START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;

INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (P_DATE,'MEP_DTL_ICS FOR ICS -END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
--COMMIT;
  -- END; -- END ICS EXTRACTION
EXCEPTION
    WHEN OTHERS THEN         ERR_MSG := -1 || '' || 'Error' ;
     INSERT INTO MEP_LOG_ICS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START,ML_ERR_MSG )
             VALUES  (P_DATE,'ERROR',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') ,SUBSTR('ERR_MSG',1,100) );

END;  
$$
LANGUAGE PLPGSQL;

