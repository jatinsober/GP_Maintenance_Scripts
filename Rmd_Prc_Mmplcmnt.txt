------
--Dev: Jitendra Lodwal
--Date: 26/09/2011
--Desc: Function
------

SET SEARCH_PATH TO RISK;

CREATE OR REPLACE FUNCTION Rmd_Prc_Mmplcmnt(RERUN_DATE IN DATE) RETURNS VOID AS $$
DECLARE

-- /*----------AMENDMENT DETAILS ------------------------*/--
-- AMYLIA AMENDED FOR CHECKING FOR DATA ALREADY INSERTED
-- FOR CASE BUS DATE NOT UPDATED (SAME BUS DATE FOR DAILY PROC RUNNING)
-- 20/05/2008  --
-- /*----------- END----------------------------------- */ --

/*********************************************************************************************************************/
-- AUTHOR     -------- DATE        ------------- REMARKS ---------------------
/*********************************************************************************************************************/
-- AMYLIA            03-DEC-2008         TO RENAME ALL THE NEW TABLES FOR GLOBUS



/*********************************************************************************************************************/


	   PRO_NAME        ADM_PROCESS_LOG.APL_PRO_NAME%TYPE;
	   PRO_STATUS      ADM_PROCESS_LOG.APL_PRO_STATUS%TYPE;
	   PRO_BUS_DATE    ADM_PROCESS_LOG.APL_PRO_BUS_DATE%TYPE;
	   PRO_LOAD_STATUS ADM_PROCESS_LOG.APL_LOAD_STATUS%TYPE;
	   PRO_SYSTEM_DATE ADM_PROCESS_LOG.APL_SYSTEM_DATE%TYPE;
	   SYS_DATE DATE;
BEGIN

	 /*GET SYSTEM DATE*/
	 SELECT CURRENT_DATE INTO SYS_DATE;


	/*LOAD START STATUS*/
	 PRO_NAME := 'LOAD GLOBUS DATA INTO MONEY MARKET PLACEMENT';
	 PRO_STATUS := 'START';
	 PRO_BUS_DATE := RERUN_DATE;
	 PRO_LOAD_STATUS := 'TRUE';
	 PRO_SYSTEM_DATE := SYS_DATE;

	INSERT INTO ADM_PROCESS_LOG
	(APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
	VALUES	(PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);



  	 /*1.TRUNCATE MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'TRUNCATE MONEY_MARKET_PLCMNT_STG';

	 TRUNCATE TABLE MONEY_MARKET_PLCMNT_STG;


  	 /*2.INSERT * FROM GLO_LIMIT_STG INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'INSERT * FROM GLO_LIMIT_NEW_STG INTO MONEY_MARKET_PLCMNT_STG';

/* INSERT ALL MONEY MARKET LIMIT INTO STAGING TABLE */
INSERT INTO MONEY_MARKET_PLCMNT_STG		  (BUS_DATE,
                                               SOURCE_ID,
                                               ENTITY_NAME,
                                               PARENT_ID,
                                               CHILD_ID,
                                               CREDIT_LINE_NO,
                                               CURRENCY,
                                               MAX_TOTAL,
                                               TOTAL_OS,
                                               LIMIT_REF_NO,
                                               MGMT_CENTRE)
									
SELECT TO_TIMESTAMP(BUSSINESS_DAT,'YYYYMMDD')  AS BUS_DATE, 
	   SOURCE_ID,'AMM',
	   SUBSTR(CREDIT_LINE_NO,1,6) AS PARENT_CD,
	   SUBSTR(CREDIT_LINE_NO,19,6) AS CHILD_CD,
       CREDIT_LINE_NO,
       LIMIT_CURR,
       MAX_TOTAL,
       CAST(TOTAL_OS AS NUMERIC),
       LIMIT_PROD,
       SUBSTR(COMP_NAME,1,50) AS COMP_NAME

FROM   GLO_LIMIT_NEW_STG
WHERE  LIMIT_PROD BETWEEN '300' AND '310';



  	 /*3.UPDATE DEAL_DATE, MATURITY_DATE, DAO INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE DEAL_DATE, MATURITY_DATE, DAO INTO MONEY_MARKET_PLCMNT_STG';

/* UPDATE DEAL_DATE, MATURITY_DATE, DAO INTO MONEY MARKET TABLE */
DECLARE
		PARENT_CD MONEY_MARKET_PLCMNT_STG.PARENT_ID%TYPE;
		CHILD_CD  MONEY_MARKET_PLCMNT_STG.CHILD_ID%TYPE;
		LIMIT_REF MONEY_MARKET_PLCMNT_STG.LIMIT_REF_NO%TYPE;
		DEAL_DT	  MONEY_MARKET_PLCMNT_STG.DEAL_DATE%TYPE;
		MAT_DT	  MONEY_MARKET_PLCMNT_STG.MATURITY_DATE%TYPE;
		DAO		  MONEY_MARKET_PLCMNT_STG.DESK_DAO%TYPE;
		DAO_NM	  MONEY_MARKET_PLCMNT_STG.ACTIVITY_GROUP%TYPE;
X RECORD;
		BEGIN
			 FOR X IN (SELECT DISTINCT TO_DATE(MM.BUSSINESS_DAT,'YYYYMMDD') AS BUS_DATE,
	   			   	  		  		   MM.CUST_ID AS PARENT_ID,
				 					   TO_DATE(MM.DEAL_DAT,'YYYYMMDD') AS DEAL_DATE,
				 					   TO_DATE(MM.MATURITY_DAT,'YYYYMMDD') AS MATURITY_DATE,
	   			 					   MM.DESK_DAO AS DESK_DAO,
									   LL.LIMIT_PROD AS LIMIT_PROD,
	   			 					   MM.DEPT_ACCT_OFFICER_NM AS ACTIVITY_GROUP
                      --FROM GLO_MM_STG MM, GLO_LIMIT_STG LL
					  FROM GLO_MM_NEW_STG MM, GLO_LIMIT_NEW_STG LL
                      WHERE TRIM(MM.CUST_ID) = TRIM(SUBSTR(CREDIT_LINE_NO,1,6))
                      AND SUBSTR(MM.LIMIT_REFERENCE,1,3) BETWEEN '300' AND '310'
                      AND SUBSTR(MM.LIMIT_REFERENCE,1,3) = LL.LIMIT_PROD
                      AND MM.BUSSINESS_DAT = LL.BUSSINESS_DAT
                      AND MM.COMPANY_NAME  = LL.COMP_NAME
					  AND   MM.CATEGORY IN ('21061', '21062', '21063', '21064', '21065',
	  			  	  					    '21066', '21067', '21068',
					  						'21075', '21076', '21077', '21078', '21079'))
					 LOOP
					 	    PARENT_CD := X.PARENT_ID;
                    		LIMIT_REF := X.LIMIT_PROD;
                    		DEAL_DT	  := X.DEAL_DATE;
                    		MAT_DT	  := X.MATURITY_DATE;
                    		DAO		  := X.DESK_DAO;
                    		DAO_NM	  := X.ACTIVITY_GROUP;
							UPDATE MONEY_MARKET_PLCMNT_STG
							SET DEAL_DATE = DEAL_DT,
								   MATURITY_DATE = MAT_DT,
								   DESK_DAO = DAO,
								   ACTIVITY_GROUP = DAO_NM
							WHERE  PARENT_ID = PARENT_CD
							AND LIMIT_REF_NO = LIMIT_REF;
					END LOOP;
			END;
/* END */



  	 /*4.UPDATE DEAL_DATE, MATURITY_DATE, ACTIVITY GROUP INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE DEAL_DATE, MATURITY_DATE, ACTIVITY GROUP INTO MONEY_MARKET_PLCMNT_STG';

/* UPDATE DEAL_DATE, MATURITY_DATE, ACTIVITY GROUP FROM DEBT SECURITIES DATA */
DECLARE
		PARENT_CD   MONEY_MARKET_PLCMNT_STG.PARENT_ID%TYPE;
		CHILD_CD    MONEY_MARKET_PLCMNT_STG.CHILD_ID%TYPE;
		LIMIT_REF   MONEY_MARKET_PLCMNT_STG.LIMIT_REF_NO%TYPE;
		DEAL_DT	    MONEY_MARKET_PLCMNT_STG.DEAL_DATE%TYPE;
		MAT_DT	    MONEY_MARKET_PLCMNT_STG.MATURITY_DATE%TYPE;
		DAO		    MONEY_MARKET_PLCMNT_STG.DESK_DAO%TYPE;
		DAO_NM	    MONEY_MARKET_PLCMNT_STG.ACTIVITY_GROUP%TYPE;
		DEALER_DESK MONEY_MARKET_PLCMNT_STG.DESK_DAO%TYPE;
X RECORD;
		BEGIN
			 FOR X IN
					  (SELECT TO_TIMESTAMP(STP.BUSINESS_DAT,'YYYYMMDD') AS BUS_DATE,
                                	  STP.SOURCE_ID,
                                	  SUBSTR(LL.CREDIT_LINE_NO,1,6) AS PARENT_ID,
                                      TO_DATE(STP.SM_MATURITY_DATE,'YYYYMMDD') AS MATURITY_DATE,
                                	  STP.DEALER_BOOK AS DESK_DAO,
                                	  LL.CREDIT_LINE_NO,
                                	  LL.LIMIT_PROD,
                                	  STP.DEPT_ACC_OFFICER_NM AS ACTIVITY_GROUP
                       --FROM  GLO_SC_TRD_POST_STG STP, GLO_LIMIT_STG LL
					   FROM  GLO_SC_TRD_POST_NEW_STG STP, GLO_LIMIT_NEW_STG LL
                       WHERE TRIM(SUBSTR(LL.CREDIT_LINE_NO,1,6)) = TRIM(STP.SM_ISSUER)
                       AND	 LL.LIMIT_PROD = SUBSTR(STP.LIMIT_REFERENCE,1,3)
                       AND   SUBSTR(STP.LIMIT_REFERENCE,1,3) BETWEEN '300' AND'310'
                       AND   STP.BUSINESS_DAT = LL.BUSSINESS_DAT
                       AND   STP.COMPANY_NAME  = LL.COMP_NAME
                       AND   STP.SUB_ASSET_TYPE IN ('22131', '22132', '22133', '22134', '22135',
                                	  					 	 '22591', '22592', '22601'))
					 LOOP
					 	    PARENT_CD := X.PARENT_ID;
                    		LIMIT_REF := X.LIMIT_PROD;
                    		MAT_DT	  := X.MATURITY_DATE;
                    		DAO		  := X.DESK_DAO;
                    		DAO_NM	  := X.ACTIVITY_GROUP;
							UPDATE MONEY_MARKET_PLCMNT_STG
							SET	   MATURITY_DATE  = MAT_DT,
								   DESK_DAO		  = DAO,
								   ACTIVITY_GROUP = DAO_NM
							WHERE  PARENT_ID 	  = PARENT_CD
							AND	   LIMIT_REF_NO	  =	LIMIT_REF;
					END LOOP;
END;
/* END */



  	 /*5.UPDATE PARENT ROC AND PARENT NAME INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE PARENT ROC AND PARENT NAME INTO MONEY_MARKET_PLCMNT_STG';

/* INSERT PARENT ROC, PARENT NAME */
DECLARE
CHILD  	  		 	  MONEY_MARKET_PLCMNT_STG.CHILD_ID%TYPE;
CREDIT_LINE_NO_CHILD  VARCHAR(32);
BUSINESS_DATE 		  MONEY_MARKET_PLCMNT_STG.BUS_DATE%TYPE;
CREDIT_LINE  		  MONEY_MARKET_PLCMNT_STG.CREDIT_LINE_NO%TYPE;
CONTRACT 			  MONEY_MARKET_PLCMNT_STG.CONTRACT_NO%TYPE;
P_ROC 				  MONEY_MARKET_PLCMNT_STG.PARENT_ROC%TYPE;
P_NAME 				  MONEY_MARKET_PLCMNT_STG.PARENT_NAME%TYPE;
PARENT 				  VARCHAR(32);
CUST_ID 			  GLO_CUST_NEW_STG.CUST_CD%TYPE;
X RECORD;
BEGIN
 	  	  FOR X IN 	 (SELECT A.SOURCE_ID,
		   		  	  		 A.BUS_DT,
				  			 A.CUST_CD,
				  			 SUBSTR(A.SHORT_NM,1,35) AS SHORT_NM,
				  			 A.CO_REIGN_NO,
				  			 B.PARENT_ID
		   			  --FROM GLO_CUST_STG A , MONEY_MARKET_PLCMNT_STG B
					  FROM GLO_CUST_NEW_STG A , MONEY_MARKET_PLCMNT_STG B
		   			  WHERE TRIM(A.CUST_CD) = TRIM(B.PARENT_ID))
		   LOOP
		   			 CUST_ID := X.CUST_CD;
					 P_ROC   := X.CO_REIGN_NO;
					 P_NAME  := X.SHORT_NM;
				UPDATE MONEY_MARKET_PLCMNT_STG	   SET PARENT_ROC = P_ROC,
					   						  	  	   PARENT_NAME  = P_NAME
										    WHERE TRIM(PARENT_ID)   = TRIM(CUST_ID);
		  END LOOP;
END;

/* END */



  	 /*6.UPDATE CHILD ROC AND CHILD NAME INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE CHILD ROC AND CHILD NAME INTO MONEY_MARKET_PLCMNT_STG';

/* INSERT CHILD ROC , CHILD NAME */
DECLARE
CHILD  	  		   	  MONEY_MARKET_PLCMNT_STG.CHILD_ID%TYPE;
CREDIT_LINE_NO_CHILD  VARCHAR(32);
BUSINESS_DATE 		  MONEY_MARKET_PLCMNT_STG.BUS_DATE%TYPE;
CONTRACT 			  MONEY_MARKET_PLCMNT_STG.CONTRACT_NO%TYPE;
C_ROC 				  MONEY_MARKET_PLCMNT_STG.CHILD_ROC%TYPE;
C_NAME 				  MONEY_MARKET_PLCMNT_STG.CHILD_NAME%TYPE;
PARENT 				  VARCHAR(32);
CUST_ID 			  GLO_CUST_NEW_STG.CUST_CD%TYPE;
X RECORD;
BEGIN
 	FOR X IN 	 (SELECT A.SOURCE_ID,
		   		  	  	 A.BUS_DT,
				  	     A.CUST_CD,
				  		 SUBSTR(A.SHORT_NM,1,35) AS SHORT_NM,
				  		 A.CO_REIGN_NO,
				  		 B.CHILD_ID
		   		  --FROM   GLO_CUST_STG A, MONEY_MARKET_PLCMNT_STG B
				  FROM   GLO_CUST_NEW_STG A, MONEY_MARKET_PLCMNT_STG B
				  WHERE  TRIM(A.CUST_CD) = TRIM(B.CHILD_ID) AND
				  		 TRIM(B.CHILD_ID) IS NOT NULL)
		   LOOP
		   			 CUST_ID:= X.CUST_CD;
		   			 C_ROC  := X.CO_REIGN_NO;
					 C_NAME := X.SHORT_NM;
				UPDATE MONEY_MARKET_PLCMNT_STG SET CHILD_ROC      = C_ROC,
					   						  	   CHILD_NAME     = C_NAME
										     WHERE TRIM(CHILD_ID) = TRIM(CUST_ID);
		   END LOOP;
END;

/* END */



  	 /*7.UPDATE LINE_OF_BUSINESS INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE LINE_OF_BUSINESS INTO MONEY_MARKET_PLCMNT_STG';

/* INSERT MONEY MARKET LINE_OF_BUSINESS */

/* END */


  	 /*8.UPDATE LINE OF BUSINESS FOR SECURITIES DATA INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE LINE OF BUSINESS FOR SECURITIES DATA INTO MONEY_MARKET_PLCMNT_STG';

/* TO INSERT LINE OF BUSINESS FOR SECURITIES DATA */
DECLARE
	     DEALER_BOOK_CD GLO_SC_TRD_POST_NEW_STG.DEALER_BOOK%TYPE;
  		 LINE_OF_BUS 	MONEY_MARKET_PLCMNT_STG.LOB%TYPE;
X RECORD;
BEGIN
	 FOR X IN (SELECT DISTINCT TRIM(DEALER_BOOK) AS DEALER_BOOK
			   --FROM GLO_SC_TRD_POST_STG)
			   FROM GLO_SC_TRD_POST_NEW_STG)
	 LOOP
          DEALER_BOOK_CD := X.DEALER_BOOK;
		 IF (DEALER_BOOK_CD IN ('100000-130', '100410-130', '100408-130',
		 					  	'100412-130', '100414-130')) THEN
		     LINE_OF_BUS := 'PRINCIPAL DEALER TRADING - CONVENTIONAL';
		 ELSIF (DEALER_BOOK_CD = '600000-230') THEN
		 	 LINE_OF_BUS := 'SSTS TRADING - ISLAMIC';
		 ELSIF (DEALER_BOOK_CD IN ('100000-160', '100000-180', '100000-120',
		 	   					   '100000-125', '100000-410', '100410-120',
								   '100408-120', '100412-120', '100414-120',
								   '102623-120')) THEN
		     LINE_OF_BUS := 'PDS TRADING - CONVENTIONAL';
		 ELSIF (DEALER_BOOK_CD IN ('600000-250', '600000-220')) THEN
		 	 LINE_OF_BUS := 'PDS TRADING - ISLAMIC';
		 ELSIF (DEALER_BOOK_CD IN ('100000-110', '100410-110', '100408-110',
		 	   					 	 '100412-110', '100414-110', '102623-110')) THEN
		     LINE_OF_BUS := 'PDS UNDERWRITING - CONVENTIONAL';
		 ELSIF (DEALER_BOOK_CD = '600000-210') THEN
		 	 LINE_OF_BUS := 'PDS UNDERWRITING - ISLAMIC';
		 ELSIF (DEALER_BOOK_CD IN ('100000-510', '100000-520', '100000-530',
		 	   					   '100410-510', '100410-520', '100410-530',
								   '100408-510', '100408-520', '100408-530',
								   '100412-510', '100412-520', '100412-530',
								   '100414-510', '100414-520', '100414-530',
								   '102623-510', '102623-530')) THEN
		 	 LINE_OF_BUS := 'PDS INVESTMENT - CONVENTIONAL';
         ELSIF (DEALER_BOOK_CD IN ('600000-610', '600000-620', '600000-630')) THEN
		 	 LINE_OF_BUS := 'PDS INVESTMENT - ISLAMIC';
		 END IF;
		 UPDATE MONEY_MARKET_PLCMNT_STG SET LOB = LINE_OF_BUS WHERE TRIM(DESK_DAO) = TRIM(DEALER_BOOK_CD);
	 END LOOP;
END;

/* END */



  	 /*9.UPDATE DEAL_DATE, MATURITY_DATE INTO MONEY_MARKET_PLCMNT_STG*/
     PRO_NAME := 'UPDATE DEAL_DATE, MATURITY_DATE INTO MONEY_MARKET_PLCMNT_STG';

/* INSERT DEAL_DATE, MATURITY_DATE */
DECLARE
	   CUST_NO 		   GLO_MM_NEW_STG.CUST_ID%TYPE;
	   LIMIT_REF	   MONEY_MARKET_PLCMNT_STG.LIMIT_REF_NO%TYPE;
	   DEAL_DAT1		   MONEY_MARKET_PLCMNT_STG.DEAL_DATE%TYPE;
	   MATURITY_DAT1	   MONEY_MARKET_PLCMNT_STG.MATURITY_DATE%TYPE;
	   BUS_DAT1		   MONEY_MARKET_PLCMNT_STG.BUS_DATE%TYPE;
X RECORD;
	  BEGIN
	  	   FOR X IN (SELECT   A.CUST_ID,
                        	  TO_DATE(A.DEAL_DAT,'YYYYMMDD') AS DEAL_DAT,
                        	  TO_DATE(A.MATURITY_DAT,'YYYYMMDD') AS MATURITY_DAT,
                        	  A.CATEGORY, A.LIMIT_REFERENCE,
                        	  TO_DATE(A.BUSSINESS_DAT,'YYYYMMDD') AS BUS_DAT,
                        	  B.PARENT_ID, B.LIMIT_REF_NO, B.BUS_DATE
                     --FROM 	  GLO_MM_STG A, MONEY_MARKET_PLCMNT_STG B
					 FROM 	  GLO_MM_NEW_STG A, MONEY_MARKET_PLCMNT_STG B
					 WHERE    TRIM(A.CUST_ID) = TRIM(B.PARENT_ID)
					 AND	  TRIM(SUBSTR(A.LIMIT_REFERENCE,1,3)) = TRIM(LIMIT_REF_NO)
					 AND	  TO_DATE(A.BUSSINESS_DAT,'YYYYMMDD') = B.BUS_DATE
					 AND 	  LIMIT_REFERENCE BETWEEN '300.01' AND '310.01')
					 LOOP
					 	 CUST_NO := X.CUST_ID;
                    	 LIMIT_REF := X.LIMIT_REF_NO;
                    	 DEAL_DAT1 := X.DEAL_DAT;
                    	 MATURITY_DAT1 := X.MATURITY_DAT;
                    	 BUS_DAT1 := X.BUS_DATE;
						 UPDATE MONEY_MARKET_PLCMNT_STG
						 SET DEAL_DATE = DEAL_DAT1,
						 	 MATURITY_DATE =  MATURITY_DAT1
					   WHERE   TRIM(PARENT_ID) = TRIM(CUST_NO)
					   	 AND TRIM(LIMIT_REF_NO) = TRIM(LIMIT_REF)
						 AND BUS_DATE = BUS_DAT1;
					 END LOOP;
			END;



  	 /*9.INSERT DATA INTO CHILD ROC AND CHILD NAME WHICH IS NULL*/
     PRO_NAME := 'INSERT DATA INTO CHILD ROC AND CHILD NAME WHICH IS NULL';

/* INSERT DATA INTO CHILD ROC AND CHILD NAME WHICH IS NULL */
UPDATE MONEY_MARKET_PLCMNT_STG
SET CHILD_ROC  = PARENT_ROC,
	CHILD_NAME = PARENT_NAME,
	CHILD_ID   = PARENT_ID
WHERE CHILD_ROC IS NULL OR
	  TRIM(CHILD_ID) IS NULL;

/* END */



  	 /*10.REPLACE PARENT_ROC = * WITH CUST_ID*/
     PRO_NAME := 'REPLACE PARENT_ROC = * WITH CUST_ID';

/* REPLACE PARENT_ROC = '*' WITH CUST_ID */
DECLARE
	   BUS_DAT		   MONEY_MARKET_PLCMNT_STG.BUS_DATE%TYPE;
	   PCODE		   MONEY_MARKET_PLCMNT_STG.PARENT_ID%TYPE;
	   PROC			   MONEY_MARKET_PLCMNT_STG.PARENT_ROC%TYPE;
	   CCODE		   MONEY_MARKET_PLCMNT_STG.CHILD_ID%TYPE;
	   CROC			   MONEY_MARKET_PLCMNT_STG.CHILD_ROC%TYPE;
	   CREDIT_LINE	   MONEY_MARKET_PLCMNT_STG.CREDIT_LINE_NO%TYPE;
X RECORD;
	   BEGIN
	   		FOR X IN
					 (SELECT BUS_DATE, PARENT_ID, PARENT_ROC,
					 		 CHILD_ID, CHILD_ROC, CREDIT_LINE_NO
					  FROM MONEY_MARKET_PLCMNT_STG
					  WHERE TRIM(PARENT_ROC) IN ('*', '0')
					  OR TRIM(CHILD_ROC) IN ('*', '0'))
			LOOP
				BUS_DAT 	:=	 X.BUS_DATE;
				PCODE		:=   X.PARENT_ID;
				PROC		:=   X.PARENT_ROC;
				CCODE		:= 	 X.CHILD_ID;
				CROC 		:=   X.CHILD_ROC;
				CREDIT_LINE :=   X.CREDIT_LINE_NO;
				UPDATE MONEY_MARKET_PLCMNT_STG SET PARENT_ROC = PCODE
					   						 WHERE TRIM(PARENT_ROC) IN ('*', '0')
											 AND    BUS_DATE   = BUS_DAT
											 AND    CREDIT_LINE_NO = CREDIT_LINE;
				UPDATE MONEY_MARKET_PLCMNT_STG SET CHILD_ROC  = CCODE
											WHERE  TRIM(CHILD_ROC) IN ('*', '0')
											AND    BUS_DATE   = BUS_DAT
											AND    CREDIT_LINE_NO = CREDIT_LINE;
			 END LOOP;
		END;


  	 /*11.INSERT * FROM MONEY_MARKET_PLCMNT_STG INTO MONEY_MARKET_PLCMNT_EXP_LIMIT*/
     PRO_NAME := 'INSERT * FROM MONEY_MARKET_PLCMNT_STG INTO MONEY_MARKET_PLCMNT_EXP_LIMIT';

	 DECLARE
	  V_MMP_DATE DATE;
	  V_STG_DATE DATE;

	  BEGIN
	  	   		 -- start checking

	  			 SELECT DISTINCT BUS_DATE INTO V_STG_DATE
				 FROM MONEY_MARKET_PLCMNT_STG;

				 SELECT MAX(MMP_BUS_DATE) INTO V_MMP_DATE
				 FROM MONEY_MARKET_PLCMNT_EXP_LIMIT;


	  IF V_MMP_DATE <> V_STG_DATE THEN



/* FINAL TABLE */

INSERT INTO MONEY_MARKET_PLCMNT_EXP_LIMIT
(MMP_BUS_DATE,
 MMP_APPL_ID,
 MMP_EN_NAME,
 MMP_ROC_PARENT_COMPANY,
 MMP_PARENT_COMPANY,
 MMP_ROC_CHILD_COMPANY,
 MMP_CHILD_COMPANY,
 MMP_DEAL_DATE,
 MMP_MAT_DATE,
 MMP_CREDIT_LINE_NO,
 MMP_CURRENCY,
 MMP_FI_MM_PLA_LIMIT,
 MMP_FI_MM_PLA_EXP,
 MMP_ACTIVITY_GROUP,
 MMP_LOB,
 MMP_SUB_LOB,
 MMP_MGMT_CENTRE)
SELECT DISTINCT BUS_DATE,
                SOURCE_ID,
                ENTITY_NAME,
                LTRIM(PARENT_ROC,0) AS PARENT_ROC,
                PARENT_NAME,
                LTRIM(CHILD_ROC,0) AS CHILD_ROC,
                CHILD_NAME,
                DEAL_DATE,
                MATURITY_DATE,
                CREDIT_LINE_NO,
                CURRENCY,
                MAX_TOTAL,
				TOTAL_OS,
                ACTIVITY_GROUP,
				LOB,
                SUB_LOB,
                MGMT_CENTRE
FROM MONEY_MARKET_PLCMNT_STG
WHERE TRIM(PARENT_ROC) <> '*';

	/*LOAD START STATUS*/
	 PRO_NAME := 'LOAD GLOBUS DATA INTO MONEY MARKET PLACEMENT';
	 PRO_STATUS := 'END';
	 PRO_BUS_DATE := RERUN_DATE;
	 PRO_LOAD_STATUS := 'TRUE';
	 PRO_SYSTEM_DATE := SYS_DATE;

	INSERT INTO ADM_PROCESS_LOG
	(APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
	VALUES	(PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

	ELSE

	/*LOAD START STATUS -- DATA ALREADY INSERTED */
	 PRO_NAME := 'LOAD GLOBUS DATA INTO MONEY MARKET PLACEMENT';
	 PRO_STATUS := 'DATA ALREADY INSERTED';
	 PRO_BUS_DATE := RERUN_DATE;
	 PRO_LOAD_STATUS := 'TRUE';
	 PRO_SYSTEM_DATE := SYS_DATE;

	INSERT INTO ADM_PROCESS_LOG
	(APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
	VALUES	(PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

END IF;
END;


EXCEPTION
     WHEN OTHERS THEN
		 /*INSERT INTO ADM_EXT_TO_STG_LOG*/
		 --PRO_NAME := 'LOAD EXTERNAL TABLE INTO STAGING TABLE';
		 PRO_STATUS := '-1,error';
		 PRO_BUS_DATE := RERUN_DATE;
		 PRO_SYSTEM_DATE := Get_Current_Date(SYS_DATE);
		 PRO_LOAD_STATUS := 'FALSE';

		 INSERT INTO ADM_PROCESS_LOG
		 (APL_PRO_NAME, APL_PRO_STATUS, APL_PRO_BUS_DATE, APL_LOAD_STATUS, APL_SYSTEM_DATE)
		 VALUES	(PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

		 /*INSERT INTO ADM_ERROR_LOG*/
		 INSERT INTO ADM_ERROR_LOG
		 (AEL_PRO_NAME, AEL_PRO_STATUS, AEL_PRO_BUS_DATE, AEL_LOAD_STATUS, AEL_SYSTEM_DATE)
		 VALUES	(PRO_NAME, PRO_STATUS, PRO_BUS_DATE, PRO_LOAD_STATUS, PRO_SYSTEM_DATE);

END ;
$$
LANGUAGE PLPGSQL;