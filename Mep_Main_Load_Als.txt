
------
--DEV BY : Jitendra Lodwal  
--DATE  : 04-OCT-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : Segment_error_resoulution
------

SET SEARCH_PATH TO WORKAREA;

CREATE OR REPLACE FUNCTION Mep_Main_Load_Als (P_RPT_DT1 IN DATE) RETURNS VOID AS $$
DECLARE
P_SDATE DATE;
P_RPT_DT  DATE;
ERR_MSG    VARCHAR(500);
BEGIN
P_RPT_DT :=  P_RPT_DT1;
BEGIN 

-- START ALS EXTRACTION
TRUNCATE TABLE MEP_DTL_ALS;
TRUNCATE TABLE MEP_DTL_ALS_EXT;
TRUNCATE TABLE MEP_DTL_ALS_TEMP;


INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (current_date,'PROGRAM FOR ALS - START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (current_date,'INSERT MEP_DTL_ALS FOR ALS - START',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );

	 --ALS PHASE 1
       INSERT INTO MEP_DTL_ALS_EXT (MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,MD_ENTITY,MD_APPL_SYS_ID,
       MD_ACCT_OPEN_DT,MD_ACCT_STAT, MD_CYCLE,MD_BLOCK_CD,MD_CRDT_LMT, MD_MTH_ON_BOOK,MD_APR,
	   MD_INDUSTRY,MD_OVER_LMT_AMT,MD_OVER_LMT_PCT, MD_WOFF_IND, MD_PRINC_LN_AMT, MD_INT_AMT,
	   MD_LN_OPEN_DT,MD_LN_PURPOSE,MD_INT_RT,MD_LN_SUB_PROD,MD_PAID_PCT,MD_INSTALL_IND,
	   MD_PYMT_TYP,MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_SEC_IND,MD_LN_AGE,MD_LN_TERM,MD_MTH_AMORT,
       MD_TOT_INT_PAID,MD_PRINC_REMAIN_AMT,MD_OS_AMT,MD_REMAIN_TERMS,MD_INT_ONLY,MD_IIS_TOT_OS,
       MD_TOT_PRINC_PAID,MD_MIA_TOT,MD_PAST_DUE,MD_DELI_AMT,MD_WATCHLIST_FLAG,
	   MD_IND_IMPAIRED,MD_NON_ACCRUAL,MD_GS_WOFF_AMT,MD_CLOSED,MD_AKPK,MD_FEE,MD_PAYMENT,MD_RECOVERY_AMT)


       SELECT A.ACCT_BUS_CYC_DT MD_REPORT_DT, A.ACCT_ACCT_NO MD_ACCT_NO,ACCT_ACCT_ID,'AMB' MD_ENTITY,
	   A.ACCT_APPL_SYS_ID MD_APPL_SYS_ID,A.ACCT_OPEN_DT MD_ACCT_OPEN_DT,A.ACCT_STAT_CD MD_ACCT_STAT,
       TO_CHAR(TO_DATE(TO_CHAR(DATE_TRUNC('MONTH',A.ACCT_BUS_CYC_DT),'DD/MM/YYYY'),'DD/MM/YYYY'),'DDMONYYYY') MD_CYCLE,
	   A.ACCT_STAT_CD MD_BLOCK_CD, A.ACCT_ORI_BAL MD_CRDT_LMT,
       CASE WHEN A.ACCT_LIMIT_APPR_DT <> '01-JAN-0001' THEN ROUND(((A.ACCT_BUS_CYC_DT - A.ACCT_LIMIT_APPR_DT)/30.00),0)
       ELSE 0 END AS MD_MTH_ON_BOOK, A.ACCT_INT_RT MD_APR, A.ACCT_ECON_SECTOR_CD MD_INDUSTRY,
       CASE WHEN A.ACCT_CUR_BAL > A.ACCT_ORI_BAL THEN COALESCE(A.ACCT_CUR_BAL,0)-COALESCE(A.ACCT_ORI_BAL,0)  ELSE 0 END AS MD_OVER_LMT_AMT,
       CASE WHEN  A.ACCT_CUR_BAL > A.ACCT_ORI_BAL AND A.ACCT_ORI_BAL > 0 THEN ROUND((COALESCE(A.ACCT_CUR_BAL,0)-COALESCE(A.ACCT_ORI_BAL,0))/A.ACCT_ORI_BAL,2)
       ELSE 0 END AS MD_OVER_LMT_PCT,
--DECODE (B.CM_WRITE_OFF_FLAG,'F','Y','N') MD_WOFF_IND,
CASE UPPER(B.CM_WRITE_OFF_FLAG)
WHEN
'F'
THEN 'Y'
ELSE 'N'
END AS MD_WOFF_IND,

A.ACCT_ORI_BAL MD_PRINC_LN_AMT,
       A.ACCT_INT_TO_DATE MD_INT_AMT, A.ACCT_OPEN_DT MD_LN_OPEN_DT, 'HL' MD_LN_PURPOSE, A.ACCT_INT_RT MD_INT_RT,
       SUBSTR(A.ACCT_PROD_CD,2,3) MD_LN_SUB_PROD,
       CASE WHEN A.ACCT_ORI_BAL > 0 THEN ROUND(A.ACCT_CUR_BAL/A.ACCT_ORI_BAL,2) ELSE 0 END AS MD_PAID_PCT,
       'Y' MD_INSTALL_IND, 'AMMORTIZATION' MD_PYMT_TYP,
       B.CM_LST_PMT_AMT MD_LST_PYMT_AMT, B.CM_LST_PMT_DT MD_LST_PYMT_DT,
       --CASE WHEN B.CM_SHORTFALL_CD = 'SF' THEN 0 ELSE NULL END AS MD_SEC_IND,
	   NULL MD_SEC_IND,
       CASE WHEN B.CM_USER_APRV_DATE <> '01-JAN-0001' THEN ROUND((A.ACCT_BUS_CYC_DT - B.CM_USER_APRV_DATE)/30.00,0) ELSE 0 END AS MD_LN_AGE,
       B.CM_TRM_OF_LN MD_LN_TERM, B.CM_USER_AMT1 MD_MTH_AMORT,
       B.CM_AC_AMT_PD_MTD MD_TOT_INT_PAID, B.CM_TOT_CUR_PRN_OUT  MD_PRINC_REMAIN_AMT,
       B.CM_TOT_OUT_BAL MD_OS_AMT,
       CASE WHEN A.ACCT_BUS_CYC_DT < B.CM_MAT_DT THEN  ROUND((B.CM_MAT_DT - A.ACCT_BUS_CYC_DT)/30.00,0)  ELSE 0 END AS MD_REMAIN_TERMS,
       CASE WHEN B.CM_FRST_INSTAL_DATE  = '01-JAN-0001' THEN 'Y' ELSE 'N' END AS MD_INT_ONLY,
	   C.IIS_TOTAL_OUTSTANDING MD_IIS_TOT_OS  ,
       COALESCE(A.ACCT_ORI_BAL,0) - COALESCE(B.CM_TOT_CUR_PRN_OUT,0) MD_TOT_PRINC_PAID ,
       C.IIS_MOS_IN_ARREARS MD_MIA_TOT,C.IIS_MOS_IN_ARREARS MD_PAST_DUE,A.ACCT_OVERDUE_AMT MD_DELI_AMT,
	   B.CM_WATCHLIST_TAG AS WATCHLIST_FLAG ,B.CM_IFRS_FLAG AS IND_IMPAIRED,CASE WHEN B.CM_CLASS_CD = 'NP' THEN  'Y' ELSE 'N' END AS  NON_ACCRUAL,
	   CASE WHEN B.CM_WRITE_OFF_FLAG = 'F' THEN B.CM_TOT_OUT_BAL ELSE 0 END AS GROSS_WRITE_OFF,
	   CASE WHEN A.ACCT_STAT_CD = 'CL' THEN 'Y' ELSE 'N'END CLOSED,
	   CASE WHEN B.CM_RT_RENG_CD = '1' THEN  'Y' ELSE 'N' END AS AKPK, B.CM_FEE_PD_YTD AS FEE,
	   B.CM_AC_AMT_PD_MTD AS PAYMENT,
	   CASE WHEN B.CM_WRITE_OFF_FLAG  = 'F' THEN B.CM_AC_AMT_PD_MTD ELSE 0 END AS MD_RECOVERY_AMT
	   FROM ACCT_HT_ALS A , COMMERCIAL_LOAN_HT_ALS  B ,CREDIT_PROVISIONS_HT_ALS C
       WHERE  A.ACCT_ACCT_ID=B.CM_ACCT_ID
       AND  A.ACCT_ACCT_ID=C.IIS_ACCT_ID
       AND A.ACCT_BUS_CYC_DT= P_RPT_DT
	   AND A.ACCT_STAT_CD <> 'CL';


	   INSERT INTO MEP_DTL_ALS_EXT (MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,MD_ENTITY,MD_APPL_SYS_ID,
       MD_ACCT_OPEN_DT,MD_ACCT_STAT,
       MD_CYCLE,
       MD_BLOCK_CD,MD_CRDT_LMT,
       MD_MTH_ON_BOOK,MD_APR,MD_INDUSTRY,
       MD_OVER_LMT_AMT,MD_OVER_LMT_PCT, MD_WOFF_IND, MD_PRINC_LN_AMT,
       MD_INT_AMT,MD_LN_OPEN_DT,MD_LN_PURPOSE,MD_INT_RT,
       MD_LN_SUB_PROD,MD_PAID_PCT,MD_INSTALL_IND,MD_PYMT_TYP,
       MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_SEC_IND,MD_LN_AGE,MD_LN_TERM,MD_MTH_AMORT,
       MD_TOT_INT_PAID,MD_PRINC_REMAIN_AMT,MD_OS_AMT,MD_REMAIN_TERMS,MD_INT_ONLY,MD_IIS_TOT_OS,
       MD_TOT_PRINC_PAID,MD_MIA_TOT,MD_PAST_DUE,MD_DELI_AMT,MD_WATCHLIST_FLAG,
	   MD_IND_IMPAIRED,MD_NON_ACCRUAL,MD_GS_WOFF_AMT,MD_CLOSED,MD_AKPK,MD_FEE,MD_PAYMENT,MD_RECOVERY_AMT)

       SELECT A.ACCT_BUS_CYC_DT MD_REPORT_DT, A.ACCT_ACCT_NO MD_ACCT_NO,ACCT_ACCT_ID,'AMB' MD_ENTITY, A.ACCT_APPL_SYS_ID MD_APPL_SYS_ID,
       A.ACCT_OPEN_DT MD_ACCT_OPEN_DT,A.ACCT_STAT_CD MD_ACCT_STAT,
       TO_CHAR(TO_DATE(TO_CHAR(DATE_TRUNC('MONTH',A.ACCT_BUS_CYC_DT),'DD/MM/YYYY'),'DD/MM/YYYY'),'DDMONYYYY') MD_CYCLE,
       A.ACCT_STAT_CD MD_BLOCK_CD, A.ACCT_ORI_BAL MD_CRDT_LMT,
       CASE WHEN A.ACCT_LIMIT_APPR_DT <> '01-JAN-0001' THEN ROUND(((A.ACCT_BUS_CYC_DT - A.ACCT_LIMIT_APPR_DT)/30.00),0)
       ELSE 0 END AS MD_MTH_ON_BOOK, A.ACCT_INT_RT MD_APR, A.ACCT_ECON_SECTOR_CD MD_INDUSTRY,
       CASE WHEN A.ACCT_CUR_BAL > A.ACCT_ORI_BAL THEN COALESCE(A.ACCT_CUR_BAL,0)-COALESCE(A.ACCT_ORI_BAL,0)  ELSE 0 END AS MD_OVER_LMT_AMT,
       CASE WHEN  A.ACCT_CUR_BAL > A.ACCT_ORI_BAL AND A.ACCT_ORI_BAL > 0 THEN ROUND((COALESCE(A.ACCT_CUR_BAL,0)-COALESCE(A.ACCT_ORI_BAL,0))/A.ACCT_ORI_BAL,2)
       ELSE 0 END AS MD_OVER_LMT_PCT,
--DECODE (B.CM_WRITE_OFF_FLAG,'F','Y','N') MD_WOFF_IND,
CASE UPPER(B.CM_WRITE_OFF_FLAG)
WHEN
'F'
THEN 'Y'
ELSE 'N'
END AS MD_WOFF_IND,
A.ACCT_ORI_BAL MD_PRINC_LN_AMT,
       A.ACCT_INT_TO_DATE MD_INT_AMT, A.ACCT_OPEN_DT MD_LN_OPEN_DT, 'HL' MD_LN_PURPOSE, A.ACCT_INT_RT MD_INT_RT,
       SUBSTR(A.ACCT_PROD_CD,2,3) MD_LN_SUB_PROD,
       CASE WHEN A.ACCT_ORI_BAL > 0 THEN ROUND(A.ACCT_CUR_BAL/A.ACCT_ORI_BAL,2) ELSE 0 END AS MD_PAID_PCT,
       'Y' MD_INSTALL_IND, 'AMMORTIZATION' MD_PYMT_TYP  ,
       B.CM_LST_PMT_AMT MD_LST_PYMT_AMT, B.CM_LST_PMT_DT MD_LST_PYMT_DT,
       --CASE WHEN B.CM_SHORTFALL_CD = 'SF' THEN 0 ELSE NULL END AS MD_SEC_IND,
	   NULL MD_SEC_IND,
       CASE WHEN B.CM_USER_APRV_DATE <> '01-JAN-0001' THEN ROUND((A.ACCT_BUS_CYC_DT - B.CM_USER_APRV_DATE)/30.00,0) ELSE 0 END AS MD_LN_AGE,
       B.CM_TRM_OF_LN MD_LN_TERM, B.CM_USER_AMT1 MD_MTH_AMORT,
       B.CM_AC_AMT_PD_MTD MD_TOT_INT_PAID, B.CM_TOT_CUR_PRN_OUT  MD_PRINC_REMAIN_AMT,
       B.CM_TOT_OUT_BAL MD_OS_AMT,
       CASE WHEN A.ACCT_BUS_CYC_DT < B.CM_MAT_DT THEN  ROUND((B.CM_MAT_DT - A.ACCT_BUS_CYC_DT)/30.00,0)  ELSE 0 END AS MD_REMAIN_TERMS,
       CASE WHEN B.CM_FRST_INSTAL_DATE  = '01-JAN-0001' THEN 'Y' ELSE 'N' END AS MD_INT_ONLY,
       C.IIS_TOTAL_OUTSTANDING MD_IIS_TOT_OS  ,
       COALESCE(A.ACCT_ORI_BAL,0) - COALESCE(B.CM_TOT_CUR_PRN_OUT,0) MD_TOT_PRINC_PAID ,
       C.IIS_MOS_IN_ARREARS MD_MIA_TOT,C.IIS_MOS_IN_ARREARS MD_PAST_DUE,A.ACCT_OVERDUE_AMT MD_DELI_AMT,
	   B.CM_WATCHLIST_TAG  AS WATCHLIST_FLAG ,B.CM_IFRS_FLAG AS IND_IMPAIRED,CASE WHEN B.CM_CLASS_CD = 'NP' THEN  'Y' ELSE 'N' END AS  NON_ACCRUAL,
	   CASE WHEN B.CM_WRITE_OFF_FLAG = 'F'  THEN B.CM_TOT_OUT_BAL ELSE 0 END AS GROSS_WRITE_OFF,
	   CASE WHEN A.ACCT_STAT_CD = 'CL' THEN 'Y' ELSE 'N' END AS CLOSED,
	   CASE WHEN B.CM_RT_RENG_CD = '1' THEN  'Y' ELSE 'N' END AS AKPK,B.CM_FEE_PD_YTD AS FEE,
	   CM_AC_AMT_PD_MTD AS PAYMENT,
   	   CASE WHEN B.CM_WRITE_OFF_FLAG  = 'F' THEN B.CM_AC_AMT_PD_MTD ELSE 0 END AS MD_RECOVERY_AMT

 FROM ACCT_HT_ALS A , COMMERCIAL_LOAN_HT_ALS  B ,CREDIT_PROVISIONS_HT_ALS C       WHERE  A.ACCT_ACCT_ID=B.CM_ACCT_ID	   AND    A.ACCT_ACCT_ID=C.IIS_ACCT_ID       AND   A.ACCT_BUS_CYC_DT= P_RPT_DT 	   AND ( ( A.ACCT_STAT_CD  = 'CL'  AND TRIM(TO_CHAR(A.ACCT_STAT_MAINT_DT, 'MMYYYY')) = TRIM(TO_CHAR(A.ACCT_BUS_CYC_DT, 'MMYYYY')))	   OR (A.ACCT_STAT_CD  = 'CL' AND  (B.CM_TOT_CUR_PRN_OUT  <> 0 OR A.ACCT_CUR_INT_AMT <> 0	   OR B.CM_TOT_ACCR_LT_CHRG <> 0 OR CM_TOT_ASSD_FEE_REC <> 0 )));		   

	   INSERT INTO MEP_DTL_ALS_TEMP(MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,MD_PREV_DELI,MD_PREV_BAL_OS)
       SELECT MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID, C.IIS_MOS_IN_ARREARS,A.CM_TOT_OUT_BAL
       FROM MEP_DTL_ALS_EXT 
LEFT OUTER JOIN COMMERCIAL_LOAN_HT_ALS_PREV A ON MD_ACCT_ID = CM_ACCT_ID 
LEFT OUTER JOIN CREDIT_PROVISIONS_HT_ALS_PREV C ON MD_ACCT_ID =IIS_ACCT_ID;
       

	   INSERT INTO MEP_DTL_ALS(MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,MD_ENTITY,MD_APPL_SYS_ID,
       MD_ACCT_OPEN_DT,MD_ACCT_STAT,MD_CYCLE,MD_BLOCK_CD,MD_CRDT_LMT,
       MD_MTH_ON_BOOK,MD_APR,MD_INDUSTRY,
       MD_OVER_LMT_AMT,MD_OVER_LMT_PCT, MD_WOFF_IND, MD_PRINC_LN_AMT,
       MD_INT_AMT,MD_LN_OPEN_DT,MD_LN_PURPOSE,MD_INT_RT,
       MD_LN_SUB_PROD,MD_PAID_PCT,MD_INSTALL_IND,MD_PYMT_TYP,
       MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_SEC_IND,MD_LN_AGE,MD_LN_TERM,MD_MTH_AMORT,
       MD_TOT_INT_PAID,MD_PRINC_REMAIN_AMT,MD_OS_AMT,MD_REMAIN_TERMS,MD_INT_ONLY,MD_IIS_TOT_OS,
       MD_TOT_PRINC_PAID,MD_MIA_TOT,MD_PAST_DUE,MD_DELI_AMT,MD_PREV_DELI,MD_PREV_BAL_OS,
	   MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_NON_ACCRUAL,MD_GS_WOFF_AMT, MD_CLOSED,
	   MD_AKPK,MD_FEE,MD_PAYMENT,MD_RECOVERY_AMT)

	   SELECT E.MD_REPORT_DT,E.MD_ACCT_NO,E.MD_ACCT_ID,E.MD_ENTITY,E.MD_APPL_SYS_ID,
       E.MD_ACCT_OPEN_DT,E.MD_ACCT_STAT,E.MD_CYCLE,E.MD_BLOCK_CD,E.MD_CRDT_LMT,
       E.MD_MTH_ON_BOOK,E.MD_APR,MD_INDUSTRY,
       E.MD_OVER_LMT_AMT,E.MD_OVER_LMT_PCT, E.MD_WOFF_IND, E.MD_PRINC_LN_AMT,
       E.MD_INT_AMT,E.MD_LN_OPEN_DT,E.MD_LN_PURPOSE,E.MD_INT_RT,
       E.MD_LN_SUB_PROD,E.MD_PAID_PCT,E.MD_INSTALL_IND,E.MD_PYMT_TYP,
       E.MD_LST_PYMT_AMT,E.MD_LST_PYMT_DT,E.MD_SEC_IND,E.MD_LN_AGE,MD_LN_TERM,E.MD_MTH_AMORT,
       E.MD_TOT_INT_PAID,E.MD_PRINC_REMAIN_AMT,E.MD_OS_AMT,E.MD_REMAIN_TERMS,E.MD_INT_ONLY,E.MD_IIS_TOT_OS,
       E.MD_TOT_PRINC_PAID,E.MD_MIA_TOT,E.MD_PAST_DUE,E.MD_DELI_AMT,T.MD_PREV_DELI,T.MD_PREV_BAL_OS,
	   E.MD_WATCHLIST_FLAG,E.MD_IND_IMPAIRED,E.MD_NON_ACCRUAL,MD_GS_WOFF_AMT,MD_CLOSED,
	   E.MD_AKPK,E.MD_FEE,E.MD_PAYMENT,E.MD_RECOVERY_AMT
	   FROM MEP_DTL_ALS_EXT E,MEP_DTL_ALS_TEMP T
	   WHERE E.MD_ACCT_ID=T.MD_ACCT_ID ;
	   

       INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
       VALUES  (current_date,'INSERT MEP_DTL_ALS FOR ALS - 2',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );
       


      TRUNCATE TABLE MEP_DTL_ALS_EXT1;

--SETP1 Select all the necessary collateral info from DWH collateral historical table -collateral relationship table 
-- into MEP_DTL_ALS_EXT1 table

	   INSERT INTO MEP_DTL_ALS_EXT1 (MD_ACCT_NO,MD_ACCT_ID,MD_COLLAT_NO,MD_INSURANCE,MD_COLLAT_VALUE,
	                          MD_ASSET_POSSESSION,MD_ASSET_SALE_PRICE,MD_ASSET_TYPE,MD_ONSELLING_AMT,MD_ONSELLING_DT,MD_DEMOGRPH_INFO,
									  MD_ASSET_SALE_DT)
	   SELECT  DISTINCT A.MD_ACCT_NO ,A.MD_ACCT_ID,C.PROP_COLL_NO,C.PROP_INS_TYP,C.PROP_MKRT_VALUE,
	   C.PROP_FCLOS_AUCTION_DT AS ASSET_POSSESION,
	   C.PROP_RESERVE_VAL AS ASSET_SALE_PRICE,C.PROP_TYP_CD AS ASSET_TYPE ,
	   C.PROP_RESERVE_VAL AS ONSELLING_AMT,C.PROP_FCLOS_AUCTION_DT AS ONSELLING_DT,
	   C.PROP_DISTRICT AS DEMOGRAPH_INFO,C.PROP_FCLOS_VAL_DT_4  AS MD_ASSET_SALE_DT
	   FROM MEP_DTL_ALS A,COLLAT_ACCT_REL_HT_ALS B,COLLAT_PROP_HT_ALS C
       WHERE C.PROP_BUS_CYC_DT= P_RPT_DT
       AND B.COAR_R_APPL_SYS_ID='ALS'
       AND B.COAR_COLL_NO=C.PROP_COLL_NO
       AND A.MD_ACCT_ID=B.COAR_R_ACCT_ID
       AND C.PROP_INS_TYP IS NOT NULL;
	   

TRUNCATE TABLE MEP_DTL_ALS_EXT12;

-- SETP2 Select Sum(Market Value),SUM(MD_ASSET_SALE_PRICE),SUM(MD_ONSELLING_AMT)  By AcctID  into MEP_DTL_ALS_EXT12

INSERT INTO MEP_DTL_ALS_EXT12 (MD_ACCT_ID,MD_COLLAT_VALUE,MD_ASSET_SALE_PRICE,MD_ONSELLING_AMT)
SELECT MD_ACCT_ID,SUM(MD_COLLAT_VALUE),SUM(MD_ASSET_SALE_PRICE),SUM(MD_ONSELLING_AMT)
FROM MEP_DTL_ALS_EXT1
GROUP BY MD_ACCT_ID;



--Step3 Select Max(Market Value) Group By AcctID  into MEP_DTL_ALS_EXT13

TRUNCATE TABLE MEP_DTL_ALS_EXT13;

INSERT INTO MEP_DTL_ALS_EXT13(MD_ACCT_ID,MD_COLLAT_VALUE)
SELECT  MD_ACCT_ID , MAX(MD_COLLAT_VALUE)
FROM MEP_DTL_ALS_EXT1
GROUP BY MD_ACCT_ID;


--SETP4 JOIN  MEP_DTL_ALS_EXT1 
-- Select AcctID, CollateralNo From MEP_DTL_ALS_EXT1 
--Where AcctID  Value is same  into MEP_DTL_ALS_EXT14

TRUNCATE TABLE MEP_DTL_ALS_EXT14;

INSERT INTO MEP_DTL_ALS_EXT14(MD_ACCT_ID,MD_COLLAT_NO)
SELECT A.MD_ACCT_ID,A.MD_COLLAT_NO FROM  MEP_DTL_ALS_EXT1  A,  MEP_DTL_ALS_EXT13 B
WHERE A.MD_ACCT_ID = B.MD_ACCT_ID
AND  A.MD_COLLAT_VALUE = B.MD_COLLAT_VALUE;


-- STEP5 Select Min(CollateralNo) Group By AcctID from MEP_DTL_ALS_EXT14  into MEP_DTL_ALS_EXT15

TRUNCATE TABLE MEP_DTL_ALS_EXT15;

INSERT INTO MEP_DTL_ALS_EXT15(MD_ACCT_ID,MD_COLLAT_NO)
SELECT MD_ACCT_ID, MIN(MD_COLLAT_NO)
FROM MEP_DTL_ALS_EXT14
GROUP BY MD_ACCT_ID;


--Step6 Link Table1  Select AcctID  collateral info from Table1 
--Where AcctID  is same  into Table6

TRUNCATE TABLE MEP_DTL_ALS_EXT16;

INSERT INTO MEP_DTL_ALS_EXT16(MD_ACCT_ID,MD_COLLAT_NO,MD_INSURANCE,MD_COLLAT_VALUE,MD_ASSET_POSSESSION,
                              MD_ASSET_SALE_PRICE,MD_ASSET_TYPE,MD_ONSELLING_AMT,MD_ONSELLING_DT,
							  MD_DEMOGRPH_INFO, MD_ASSET_SALE_DT)
SELECT A.MD_ACCT_ID,A.MD_COLLAT_NO,A.MD_INSURANCE,A.MD_COLLAT_VALUE,A.MD_ASSET_POSSESSION,A.MD_ASSET_SALE_PRICE,A.MD_ASSET_TYPE,
	   A.MD_ONSELLING_AMT,A.MD_ONSELLING_DT,A.MD_DEMOGRPH_INFO,A.MD_ASSET_SALE_DT
FROM MEP_DTL_ALS_EXT1 A , MEP_DTL_ALS_EXT15 B
WHERE A.MD_ACCT_ID  = B.MD_ACCT_ID
AND  A.MD_COLLAT_NO = B.MD_COLLAT_NO;

TRUNCATE TABLE MEP_DTL_ALS_EXT17;

INSERT INTO MEP_DTL_ALS_EXT17(MD_ACCT_ID,MD_COLLAT_NO,MD_INSURANCE,MD_COLLAT_VALUE,
	                                  MD_ASSET_POSSESSION,MD_ASSET_SALE_PRICE,MD_ASSET_TYPE,
									  MD_ONSELLING_AMT,MD_ONSELLING_DT,MD_DEMOGRPH_INFO,
									  MD_ASSET_SALE_DT)
SELECT 	B.MD_ACCT_ID,B.MD_COLLAT_NO,B.MD_INSURANCE,A.MD_COLLAT_VALUE,
        B.MD_ASSET_POSSESSION,A.MD_ASSET_SALE_PRICE,B.MD_ASSET_TYPE,A.MD_ONSELLING_AMT,
		B.MD_ONSELLING_DT,B.MD_DEMOGRPH_INFO,B.MD_ASSET_SALE_DT
FROM 	MEP_DTL_ALS_EXT12 A, MEP_DTL_ALS_EXT16 B
WHERE A.MD_ACCT_ID = B.MD_ACCT_ID;


--Step8 Select all the necessary collateral FD info**** from DWH collateral-fd historical table -collateral relationship table.
-- Insert the selected records into MEP_DTL_ALS_EXT18

TRUNCATE TABLE MEP_DTL_ALS_EXT18;

INSERT INTO MEP_DTL_ALS_EXT18 (MD_ACCT_NO,MD_ACCT_ID,MD_CFIN_COLL_NO,MD_INSURANCE,MD_COLLAT_VALUE)

/*       SELECT  DISTINCT A.MD_ACCT_NO,A.MD_ACCT_ID,F.CFIN_COLL_NO,F.CFIN_TYP_CD,F.CFIN_VALUE
	   FROM MEP_DTL_ALS A,COLLAT_ACCT_REL_HT_ALS B,COLLAT_FIN_HT_ALS F
       WHERE A.MD_ACCT_ID =B.COAR_R_ACCT_ID
       AND B.COAR_COLL_NO=F.CFIN_COLL_NO
       AND B.COAR_R_APPL_SYS_ID='ALS'
	   AND TRIM(F.CFIN_TYP_CD) IS  NOT NULL
       AND F.CFIN_BUS_CYC_DT= P_RPT_DT;
	   */

SELECT DISTINCT A.MD_ACCT_NO, A.MD_ACCT_ID, B.CFIN_COLL_NO, 'FD' AS CFIN_TYP_CD,B.CFIN_VALUE
FROM MEP_DTL_ALS A, MEP_COLLAT_FIN_HT_ALS B
WHERE TRIM(A.MD_ACCT_NO) = TRIM(B.CFIN_ACCT_NO);

--Step9  Select AcctID, Sum(CFIN_VALUE) Group By AcctID  into  MEP_DTL_ALS_EXT18

TRUNCATE TABLE MEP_DTL_ALS_EXT19;

INSERT INTO MEP_DTL_ALS_EXT19 (MD_ACCT_ID,MD_COLLAT_VALUE)
SELECT MD_ACCT_ID,SUM(MD_COLLAT_VALUE)
FROM MEP_DTL_ALS_EXT18
GROUP BY MD_ACCT_ID;


--Step10  SELECT AcctID, MAX(CFIN_VALUE) GROUP BY AcctID  INTO MEP_DTL_ALS_EXT20

TRUNCATE TABLE MEP_DTL_ALS_EXT20;

INSERT INTO MEP_DTL_ALS_EXT20 (MD_ACCT_ID,MD_COLLAT_VALUE)
SELECT MD_ACCT_ID,MAX(MD_COLLAT_VALUE)
FROM MEP_DTL_ALS_EXT18
GROUP BY MD_ACCT_ID;

TRUNCATE TABLE MEP_DTL_ALS_EXT21;

--Step11 JOIN  MEP_DTL_ALS_EXT18  
INSERT INTO MEP_DTL_ALS_EXT21(MD_ACCT_ID,MD_CFIN_COLL_NO)
SELECT A.MD_ACCT_ID,A.MD_CFIN_COLL_NO FROM  MEP_DTL_ALS_EXT18  A,  MEP_DTL_ALS_EXT20 B
WHERE A.MD_ACCT_ID = B.MD_ACCT_ID
AND  A.MD_COLLAT_VALUE = B.MD_COLLAT_VALUE;


--Step12  Select AcctID, Min(CFIN_COLL_NO) Group By AcctID from MEP_DTL_ALS_EXT21  into MEP_DTL_ALS_EXT22

TRUNCATE TABLE MEP_DTL_ALS_EXT22;

INSERT INTO MEP_DTL_ALS_EXT22(MD_ACCT_ID,MD_CFIN_COLL_NO)
SELECT MD_ACCT_ID, MIN(MD_CFIN_COLL_NO)
FROM MEP_DTL_ALS_EXT21
GROUP BY MD_ACCT_ID;


TRUNCATE TABLE MEP_DTL_ALS_EXT23;

INSERT INTO MEP_DTL_ALS_EXT23(MD_ACCT_ID,MD_CFIN_COLL_NO,MD_INSURANCE,MD_COLLAT_VALUE)
SELECT   A.MD_ACCT_ID , A.MD_CFIN_COLL_NO,A.MD_INSURANCE,C.MD_COLLAT_VALUE
FROM  MEP_DTL_ALS_EXT18 A ,  MEP_DTL_ALS_EXT22 B , MEP_DTL_ALS_EXT19 C
WHERE A.MD_ACCT_ID = B.MD_ACCT_ID
AND   A.MD_CFIN_COLL_NO = B.MD_CFIN_COLL_NO
AND   B.MD_ACCT_ID = C.MD_ACCT_ID;


TRUNCATE TABLE MEP_DTL_ALS_EXT24;

INSERT INTO  MEP_DTL_ALS_EXT24(MD_ACCT_ID,MD_INSURANCE,MD_COLLAT_VALUE,MD_ASSET_POSSESSION,MD_ASSET_SALE_PRICE,
                               MD_ASSET_TYPE,MD_ONSELLING_AMT,MD_ONSELLING_DT,MD_DEMOGRPH_INFO,MD_ASSET_SALE_DT)

SELECT A.MD_ACCT_ID, A.MD_INSURANCE,COALESCE(A.MD_COLLAT_VALUE,0) + COALESCE(B.MD_COLLAT_VALUE,0) AS COLLAT_VAL,
	A.MD_ASSET_POSSESSION, A.MD_ASSET_SALE_PRICE, A.MD_ASSET_TYPE,
	A.MD_ONSELLING_AMT, A.MD_ONSELLING_DT, A.MD_DEMOGRPH_INFO, A.MD_ASSET_SALE_DT
	FROM MEP_DTL_ALS_EXT17  A LEFT OUTER JOIN MEP_DTL_ALS_EXT23 B ON A.MD_ACCT_ID = B.MD_ACCT_ID;

	

TRUNCATE TABLE MEP_DTL_ALS_EXT;

       INSERT INTO MEP_DTL_ALS_EXT (MD_ACCT_NO ,MD_REPORT_DT,MD_ACCT_ID,MD_ENTITY,MD_APPL_SYS_ID,
       MD_ACCT_OPEN_DT,MD_ACCT_STAT,MD_CYCLE,MD_BLOCK_CD,MD_CRDT_LMT,
       MD_MTH_ON_BOOK,MD_APR,MD_INDUSTRY,
       MD_OVER_LMT_AMT,MD_OVER_LMT_PCT, MD_WOFF_IND, MD_PRINC_LN_AMT,
       MD_INT_AMT,MD_LN_OPEN_DT,MD_LN_PURPOSE,MD_INT_RT,
       MD_LN_SUB_PROD,MD_PAID_PCT,MD_INSTALL_IND,MD_PYMT_TYP,
       MD_LST_PYMT_AMT,MD_LST_PYMT_DT,MD_SEC_IND,MD_LN_AGE,MD_LN_TERM,MD_MTH_AMORT,
       MD_TOT_INT_PAID,MD_PRINC_REMAIN_AMT,MD_OS_AMT,MD_REMAIN_TERMS,MD_INT_ONLY,MD_IIS_TOT_OS,
       MD_TOT_PRINC_PAID,MD_MIA_TOT,MD_PAST_DUE,MD_DELI_AMT,MD_PREV_DELI,MD_PREV_BAL_OS,
       MD_INSURANCE,MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_NON_ACCRUAL,MD_ASSET_POSSESSION,
	   MD_ASSET_SALE_PRICE,MD_ASSET_TYPE,
	   MD_GS_WOFF_AMT,MD_ONSELLING_DT,MD_CLOSED,MD_COLLAT_VALUE,MD_AKPK,MD_DEMOGRPH_INFO,
	   MD_FEE,MD_PAYMENT,MD_ONSELLING_AMT,MD_RECOVERY_AMT,MD_ASSET_SALE_DT)

       SELECT DISTINCT A.MD_ACCT_NO,A.MD_REPORT_DT,A.MD_ACCT_ID,A.MD_ENTITY,A.MD_APPL_SYS_ID,
       A.MD_ACCT_OPEN_DT,A.MD_ACCT_STAT,A.MD_CYCLE,A.MD_BLOCK_CD,A.MD_CRDT_LMT,
       A.MD_MTH_ON_BOOK,A.MD_APR,A.MD_INDUSTRY,
       A.MD_OVER_LMT_AMT,A.MD_OVER_LMT_PCT, A.MD_WOFF_IND, A.MD_PRINC_LN_AMT,
       A.MD_INT_AMT,A.MD_LN_OPEN_DT,A.MD_LN_PURPOSE,A.MD_INT_RT,
       A.MD_LN_SUB_PROD,A.MD_PAID_PCT,A.MD_INSTALL_IND,A.MD_PYMT_TYP,
       A.MD_LST_PYMT_AMT,A.MD_LST_PYMT_DT,A.MD_SEC_IND,
       A.MD_LN_AGE,A.MD_LN_TERM,A.MD_MTH_AMORT,
       A.MD_TOT_INT_PAID,A.MD_PRINC_REMAIN_AMT,A.MD_OS_AMT,A.MD_REMAIN_TERMS,A.MD_INT_ONLY,A.MD_IIS_TOT_OS,
       A.MD_TOT_PRINC_PAID,A.MD_MIA_TOT,A.MD_PAST_DUE,A.MD_DELI_AMT,A.MD_PREV_DELI,A.MD_PREV_BAL_OS,
--	   B.MD_INSURANCE,
       CASE WHEN A.MD_INSURANCE IS NULL THEN B.MD_INSURANCE ELSE A.MD_INSURANCE END AS MD_INSURANCE,
	   A.MD_WATCHLIST_FLAG ,A.MD_IND_IMPAIRED,A.MD_NON_ACCRUAL,
	   CASE WHEN  B.MD_ASSET_POSSESSION = '01-JAN-0001'THEN 'N' ELSE 'Y' END AS ASSET_POSSESION,
	   B.MD_ASSET_SALE_PRICE,B.MD_ASSET_TYPE,
	   A.MD_GS_WOFF_AMT,B.MD_ONSELLING_DT,A.MD_CLOSED,B.MD_COLLAT_VALUE,A.MD_AKPK,
	   B.MD_DEMOGRPH_INFO,A.MD_FEE,A.MD_PAYMENT,B.MD_ONSELLING_AMT,A.MD_RECOVERY_AMT,
	   B.MD_ASSET_SALE_DT
	   FROM MEP_DTL_ALS A LEFT OUTER JOIN MEP_DTL_ALS_EXT24 B ON A.MD_ACCT_ID =B.MD_ACCT_ID;
	   

INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (current_date,'INSERT MEP_DTL_ALS FOR ALS - 3',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );



	   TRUNCATE TABLE MEP_DTL_ALS;

	   INSERT INTO MEP_DTL_ALS
	   SELECT * FROM MEP_DTL_ALS_EXT;


INSERT INTO MEP_LOG_ALS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
VALUES  (current_date,'INSERT MEP_DTL_ALS FOR ALS - END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS') );


	END;
END;  
-- GLOBAL END
$$
LANGUAGE PLPGSQL;
