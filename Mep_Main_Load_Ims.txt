
------
--DEV BY : Jitendra Lodwal  
--DATE  : 04-OCT-2011 
--DESC : FUNCTION
------
------
--DEV BY : Jitendra Lodwal  
--DATE  : 05-NOV-2011 
--DESC : FUNCTION_CODE_CORRECTION
------

SET SEARCH_PATH TO WORKAREA;
create or replace function last_day(date) returns date as 'select 
cast(date_trunc(''month'', $1) + ''1 month''::interval as date) - 1' 
language sql;



CREATE OR REPLACE FUNCTION Mep_Main_Load_Ims (P_DATE IN DATE) RETURNS VOID AS $$
DECLARE
P_RPT_DT  DATE;
PARAM_DT  DATE;
BEGIN
		P_RPT_DT := P_DATE; --END DATE
		
       TRUNCATE TABLE  MEP_DTL_IMS_TEMP;
	   TRUNCATE TABLE  MEP_DTL_IMS;
	    TRUNCATE TABLE  MEP_DTL_IMS_EXT;

		BEGIN
		INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
		VALUES  (P_DATE,'INSERT MEP_DTL_IMS_EXT FOR IMS',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
		
		--SELECT LAST_DAY(TO_DATE(P_DATE,'DD-MON-YYYY')-31)
		--INTO PARAM_DT
		--FROM DUAL;

PARAM_DT := LAST_DAY(P_DATE -31);

        INSERT INTO MEP_DTL_IMS_EXT (MD_ACCT_NO,MD_REPORT_DT,MD_ACCT_ID,
        MD_ENTITY,MD_PRODUCT,MD_APPL_SYS_ID,MD_ACCT_OPEN_DT,MD_ACCT_STAT,
        MD_ACCT_GL_GRP_CD,MD_BLOCK_CD,MD_CRDT_LMT,MD_OVERDUE_INT,MD_DRAW_LMT,
		MD_LST_PYMT_AMT,
	    MD_MTH_ON_BOOK,MD_RENEW_DT,
		MD_PAST_DUE,
		--MD_SEC_VAL,
		MD_COLLAT_VALUE,
		MD_SEC_TYPE,MD_APR,
		MD_INDUSTRY,MD_LN_AGE,
	    MD_PRINC_LN_AMT, MD_OS_AMT,MD_LN_SUB_PROD,
        MD_ACCT_TYP_CD,MD_PYMT_MTD,
	    MD_UTILIZTN,
		MD_AKPK,MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_NON_ACCURAL,
		MD_REC_AMT_TOTAL,MD_RESCHED_CD,
		MD_WRITTEN_OFF,MD_GROSS_WRITTEN_OFF,MD_CLOSED_IND,MD_CLOSED,
		MD_PAYMENT,MD_REVENUE,MD_INT_LN_AMT,MD_ACCT_STAT_CD,
		MD_ACCT_CLOSE_DT,MD_OD_APPROV_DT)

	    SELECT   DISTINCT  A.ACCT_ACCT_NO MD_ACCT_NO, A.ACCT_BUS_CYC_DT MD_REPORT_DT,ACCT_ACCT_ID,
        CASE WHEN SUBSTR(ACCT_ACCT_NO,10,3) IN ('001','003','007','201') THEN 'AMB'
		ELSE 'AMI' END AS MD_ENTITY,
        CASE WHEN SUBSTR(ACCT_ACCT_NO,10,3) IN ('001','003','007','201') THEN 'OD Conventional'
		ELSE 'OD Islamic' END AS MD_PRODUCT, A.ACCT_APPL_SYS_ID MD_APPL_SYS_ID,
        A.ACCT_OPEN_DT MD_ACCT_OPEN_DT,
		A.ACCT_NPL_STAT AS  MD_ACCT_STAT,
		CASE WHEN A.ACCT_GL_GROUP_CODE <> 'A' THEN  A.ACCT_GL_GROUP_CODE END AS MD_ACCT_GL_GRP_CD ,
          /*A.ACCT_RESTR_ACCS_CD MD_CARD_STAT, A.ACCT_CYC_CD MD_CYCLE_CPS,*//*A.ACCT_RESTR_ACCS_CD*/
		A.ACCT_STAT_CD MD_BLOCK_CD,
		COALESCE(R.RC_APPRV_LMT_1,0)+COALESCE(R.RC_APPRV_LMT_2,0)+COALESCE(R.RC_APPRV_LMT_3,0)
		+COALESCE(R.RC_APPRV_LMT_4,0)+COALESCE(R.RC_APPRV_LMT_5,0)+COALESCE(R.RC_APPRV_LMT_6,0)+
		COALESCE(R.RC_APPRV_LMT_7,0)+COALESCE(R.RC_APPRV_LMT_8,0) MD_CRDT_LMT,
		C.IIS_INT_INC_OUTSTANDING AS MD_OVEDUE_INT,
		COALESCE(R.RC_WTHDRW_LMT_1,0)+COALESCE(R.RC_WTHDRW_LMT_2,0)+COALESCE(R.RC_WTHDRW_LMT_3,0)
		+COALESCE(R.RC_WTHDRW_LMT_4,0)+COALESCE(R.RC_WTHDRW_LMT_5,0)+COALESCE(R.RC_WTHDRW_LMT_6,0)
		+COALESCE(R.RC_WTHDRW_LMT_7,0)+COALESCE(R.RC_WTHDRW_LMT_8,0) MD_DRAW_LMT,
		R.RC_REPAYT_AMT AS MD_LST_PYMT_AMT,
		CASE WHEN A.ACCT_OPEN_DT <> '01-JAN-0001'
        THEN ROUND(((A.ACCT_BUS_CYC_DT-A.ACCT_OPEN_DT)/30.00),0) ELSE 0 END AS MD_MTH_ON_BOOK,
		RC_REVIEW_DT_1 MD_RENEW_DT,--COALESCE(A.ACCT_CUR_BAL,0)-COALESCE(RC_WTHDRW_LMT_1,0) AS MD_DELI_AMT,
		C.IIS_MOS_IN_ARREARS AS MD_PAST_DUE,
		--COALESCE(R.RC_SECUR_VALUE_1,0)+COALESCE(R.RC_SECUR_VALUE_2,0)+COALESCE(R.RC_SECUR_VALUE_3,0)
		--+COALESCE(R.RC_SECUR_VALUE_4,0)+COALESCE(R.RC_SECUR_VALUE_5,0)+COALESCE(R.RC_SECUR_VALUE_6,0)+
		--COALESCE(R.RC_SECUR_VALUE_7,0)+COALESCE(R.RC_SECUR_VALUE_8,0) MD_SEC_VAL,
		COALESCE(R.RC_SECUR_VALUE_1,0)+COALESCE(R.RC_SECUR_VALUE_2,0)+COALESCE(R.RC_SECUR_VALUE_3,0)
		+COALESCE(R.RC_SECUR_VALUE_4,0)+COALESCE(R.RC_SECUR_VALUE_5,0)+COALESCE(R.RC_SECUR_VALUE_6,0)+
		COALESCE(R.RC_SECUR_VALUE_7,0)+COALESCE(R.RC_SECUR_VALUE_8,0) MD_COLLAT_VALUE,
		R.RC_SECUR_TYP_1 MD_SEC_TYPE,0,
		A.ACCT_CUST_SECTOR_CD MD_INDUSTRY,
		CASE WHEN A.ACCT_OPEN_DT <> '01-JAN-0001' THEN
        ROUND((A.ACCT_BUS_CYC_DT - A.ACCT_OPEN_DT) /30.00,0) ELSE 0 END AS MD_LN_AGE,
		A.ACCT_LIMIT_AMT MD_PRINC_LN_AMT,  A.ACCT_CUR_BAL MD_OS_AMT,
        A.ACCT_ECON_SECTOR_CD MD_LN_SUB_PROD,
        A.ACCT_TYP_CD MD_ACCT_TYP_CD,0  MD_PYMT_MTD,


        -- MD_UTILIZTN,
		R.RC_AKPK_TAG AS MD_AKPK,
		SUBSTR(R.RC_WATCHLIST_TAG,1,1) AS MD_WATCHLIST_TAG,
		R.RC_IFRS_TAG AS MD_IND_IMPAIRED,
		CASE WHEN A.ACCT_NPL_STAT IN ('BD','DB','SS') THEN 'Y' ELSE 'N' END AS NO_ACCRUAL,
		C.IIS_INT_SUSP_CLAW_BK_AMT  AS RECOVERY,
		R.RC_RESCHED_CD,
		D.CK_WRITE_OFF, CASE WHEN D.CK_WRITE_OFF IN ( '1','2') THEN A.ACCT_CUR_BAL ELSE 0 END AS MD_GS_WRITE_OFF_AMT,
		CASE WHEN A.ACCT_STAT_CD = '04' THEN 'Y' ELSE 'N' END MD_CLOSED_IND,
		CASE WHEN A.ACCT_STAT_CD IN ('03','04')  THEN 'Y' ELSE 'N' END MD_CLOSED,
        T.TXD_CASH_AMT AS PAYMENT,
		(D.CK_DC_COMNT_FEE +D.CK_WITH_TAX+D.CK_OTHER_CHARGES) AS REVENUE,
		D.CK_ACC_CR_INT AS INT_LN_AMT,
		A.ACCT_STAT_CD AS MD_ACCT_STAT_CD,
		A.ACCT_CLOSE_DT AS MD_ACCT_CLOSE_DT,
		R.RC_OD_APP_DT1 AS MD_OD_APPROV_DT
		FROM MEP_ACCT_HT_IMS A 
LEFT OUTER JOIN MEP_RETAIL_CREDIT_LN_HT_IMS R ON A.ACCT_ACCT_ID = R.RC_ACCT_ID
LEFT OUTER JOIN MEP_TRAN_IMS_TMP T ON A.ACCT_ACCT_ID = T.TXD_ACCT_ID,
MEP_CR_PROVISIONS_HT_IMS C, MEP_RETAIL_CHECKING_HT_IMS D 
		WHERE A.ACCT_ACCT_ID =C.IIS_ACCT_ID
		AND   A.ACCT_ACCT_ID = D.CK_ACCT_ID
		AND   A.ACCT_STAT_CD  NOT IN ('03','04')
        AND   A.ACCT_BUS_CYC_DT = P_RPT_DT;
		

		INSERT INTO MEP_DTL_IMS_EXT (MD_ACCT_NO,MD_REPORT_DT,MD_ACCT_ID,
        MD_ENTITY,MD_PRODUCT,MD_APPL_SYS_ID,MD_ACCT_OPEN_DT,MD_ACCT_STAT,
        MD_ACCT_GL_GRP_CD,MD_BLOCK_CD,MD_CRDT_LMT,MD_OVERDUE_INT,MD_DRAW_LMT,
		MD_LST_PYMT_AMT,
	    MD_MTH_ON_BOOK,MD_RENEW_DT,
		MD_PAST_DUE,
		--MD_SEC_VAL,
		MD_COLLAT_VALUE,
		MD_SEC_TYPE,
-- MD_APR,
		MD_INDUSTRY,MD_LN_AGE,
	    MD_PRINC_LN_AMT, MD_OS_AMT,MD_LN_SUB_PROD,
        MD_ACCT_TYP_CD,MD_PYMT_MTD,
	    MD_UTILIZTN,
		MD_AKPK,
		MD_WATCHLIST_FLAG,
		MD_IND_IMPAIRED,
		MD_NON_ACCURAL,
		MD_REC_AMT_TOTAL,
		MD_RESCHED_CD,
		MD_WRITTEN_OFF,MD_GROSS_WRITTEN_OFF,MD_CLOSED_IND,MD_CLOSED,
		MD_PAYMENT,MD_REVENUE,MD_INT_LN_AMT,MD_ACCT_STAT_CD,
		MD_ACCT_CLOSE_DT,MD_OD_APPROV_DT)

	   
	    SELECT  DISTINCT   A.ACCT_ACCT_NO MD_ACCT_NO, A.ACCT_BUS_CYC_DT MD_REPORT_DT, ACCT_ACCT_ID,
        CASE WHEN SUBSTR(ACCT_ACCT_NO,10,3) IN ('001','003','007','201') THEN 'AMB'
		ELSE 'AMI' END AS MD_ENTITY,
        CASE WHEN SUBSTR(ACCT_ACCT_NO,10,3) IN ('001','003','007','201') THEN 'OD Conventional'
		ELSE 'OD Islamic' END AS MD_PRODUCT, A.ACCT_APPL_SYS_ID MD_APPL_SYS_ID,
        A.ACCT_OPEN_DT MD_ACCT_OPEN_DT,
		A.ACCT_NPL_STAT AS  MD_ACCT_STAT,
		CASE WHEN A.ACCT_GL_GROUP_CODE <> 'A' THEN  A.ACCT_GL_GROUP_CODE END AS MD_ACCT_GL_GRP_CD ,
         /*A.ACCT_RESTR_ACCS_CD MD_CARD_STAT, A.ACCT_CYC_CD MD_CYCLE_CPS,*//*A.ACCT_RESTR_ACCS_CD*/
		A.ACCT_STAT_CD MD_BLOCK_CD,
		COALESCE(R.RC_APPRV_LMT_1,0)+COALESCE(R.RC_APPRV_LMT_2,0)+COALESCE(R.RC_APPRV_LMT_3,0)
		+COALESCE(R.RC_APPRV_LMT_4,0)+COALESCE(R.RC_APPRV_LMT_5,0)+COALESCE(R.RC_APPRV_LMT_6,0)+
		COALESCE(R.RC_APPRV_LMT_7,0)+COALESCE(R.RC_APPRV_LMT_8,0) MD_CRDT_LMT,
		C.IIS_INT_INC_OUTSTANDING AS MD_OVEDUE_INT,
		COALESCE(R.RC_WTHDRW_LMT_1,0)+COALESCE(R.RC_WTHDRW_LMT_2,0)+COALESCE(R.RC_WTHDRW_LMT_3,0)
		+COALESCE(R.RC_WTHDRW_LMT_4,0)+COALESCE(R.RC_WTHDRW_LMT_5,0)+COALESCE(R.RC_WTHDRW_LMT_6,0)
		+COALESCE(R.RC_WTHDRW_LMT_7,0)+COALESCE(R.RC_WTHDRW_LMT_8,0) MD_DRAW_LMT,
		R.RC_REPAYT_AMT AS MD_LST_PYMT_AMT,
		CASE WHEN A.ACCT_OPEN_DT <> '01-JAN-0001'
        THEN ROUND(((A.ACCT_BUS_CYC_DT-A.ACCT_OPEN_DT)/30.00),0) ELSE 0 END AS MD_MTH_ON_BOOK,
		RC_REVIEW_DT_1 MD_RENEW_DT,--COALESCE(A.ACCT_CUR_BAL,0)-COALESCE(RC_WTHDRW_LMT_1,0) AS MD_DELI_AMT,
		C.IIS_MOS_IN_ARREARS AS MD_PAST_DUE,
		--COALESCE(R.RC_SECUR_VALUE_1,0)+COALESCE(R.RC_SECUR_VALUE_2,0)+COALESCE(R.RC_SECUR_VALUE_3,0)
		--COALESCE(R.RC_SECUR_VALUE_4,0)+COALESCE(R.RC_SECUR_VALUE_5,0)+COALESCE(R.RC_SECUR_VALUE_6,0)+
		--COALESCE(R.RC_SECUR_VALUE_7,0)+COALESCE(R.RC_SECUR_VALUE_8,0) MD_SEC_VAL,

		COALESCE(R.RC_SECUR_VALUE_1,0)+COALESCE(R.RC_SECUR_VALUE_2,0)+COALESCE(R.RC_SECUR_VALUE_3,0)
		+COALESCE(R.RC_SECUR_VALUE_4,0)+COALESCE(R.RC_SECUR_VALUE_5,0)+COALESCE(R.RC_SECUR_VALUE_6,0)+
		COALESCE(R.RC_SECUR_VALUE_7,0)+COALESCE(R.RC_SECUR_VALUE_8,0) MD_COLLAT_VALUE,
		R.RC_SECUR_TYP_1 MD_SEC_TYPE,
-- MD_APR,
		A.ACCT_CUST_SECTOR_CD MD_INDUSTRY,
		CASE WHEN A.ACCT_OPEN_DT <> '01-JAN-0001' THEN
        ROUND((A.ACCT_BUS_CYC_DT - A.ACCT_OPEN_DT) /30.00,0) ELSE 0 END AS MD_LN_AGE,
		A.ACCT_LIMIT_AMT MD_PRINC_LN_AMT,  A.ACCT_CUR_BAL MD_OS_AMT,
        A.ACCT_ECON_SECTOR_CD MD_LN_SUB_PROD,
        A.ACCT_TYP_CD MD_ACCT_TYP_CD,/*R.RC_REPAYT_AMT AS */  0  MD_PYMT_MTD,
		0 MD_UTILIZTN,
		R.RC_AKPK_TAG AS MD_AKPK,
		SUBSTR(R.RC_WATCHLIST_TAG,1,1) AS MD_WATCHLIST_TAG,
		R.RC_IFRS_TAG AS MD_IND_IMPAIRED,
		CASE WHEN A.ACCT_NPL_STAT IN ('BD','DB','SS') THEN 'Y' ELSE 'N' END AS NO_ACCRUAL,
		C.IIS_INT_SUSP_CLAW_BK_AMT  AS RECOVERY,
		R.RC_RESCHED_CD,
		D.CK_WRITE_OFF, CASE WHEN D.CK_WRITE_OFF IN ( '1','2') THEN A.ACCT_CUR_BAL ELSE 0 END AS MD_GS_WRITE_OFF_AMT,
		CASE WHEN A.ACCT_STAT_CD IN ('03','04') THEN 'Y' ELSE 'N' END MD_CLOSED_IND,
		CASE WHEN A.ACCT_STAT_CD IN ('03','04') THEN 'Y' ELSE 'N' END MD_CLOSED,
		T.TXD_CASH_AMT AS PAYMENT,
		(D.CK_DC_COMNT_FEE +D.CK_WITH_TAX+D.CK_OTHER_CHARGES) AS REVENUE,
		D.CK_ACC_CR_INT AS INT_LN_AMT,
		A.ACCT_STAT_CD AS MD_ACCT_STAT_CD,
		A.ACCT_CLOSE_DT AS MD_ACCT_CLOSE_DT,
		RC_OD_APP_DT1 AS MD_OD_APPROV_DT
   		FROM MEP_ACCT_HT_IMS A 
LEFT OUTER JOIN MEP_RETAIL_CREDIT_LN_HT_IMS R ON A.ACCT_ACCT_ID =R.RC_ACCT_ID
LEFT OUTER JOIN MEP_TRAN_IMS_TMP T ON A.ACCT_ACCT_ID = T.TXD_ACCT_ID,
MEP_CR_PROVISIONS_HT_IMS C, MEP_RETAIL_CHECKING_HT_IMS D
		
		WHERE A.ACCT_ACCT_ID =C.IIS_ACCT_ID
		AND   A.ACCT_ACCT_ID = D.CK_ACCT_ID
AND   ((A.ACCT_STAT_CD  IN ('03', '04') 
AND TRIM(TO_CHAR(ACCT_CLOSE_DT, 'MMYYYY')) = TRIM(TO_CHAR(ACCT_BUS_CYC_DT, 'MMYYYY')))
OR (A.ACCT_STAT_CD IN ('03','04')  AND (A.ACCT_CUR_BAL <> 0 OR D.CK_AVL_BAL <> 0 )))
AND   A.ACCT_BUS_CYC_DT = P_RPT_DT;
        
		

TRUNCATE TABLE  MEP_DTL_IMS_COLLAT;

		/*
		INSERT INTO MEP_DTL_IMS_COLLAT(MD_REPORT_DT,MD_ACCT_NO,MD_ACCT_ID,MD_COLLAT_VALUE,COLL_TYP_CD)
        SELECT C.MD_REPORT_DT,C.MD_ACCT_NO,C.MD_ACCT_ID,C.MD_COLLAT_VALUE,B.COLL_TYP_CD
        FROM COLLAT_ACCT_REL_HT_IMS  A,  COLLATERAL_HT_IMS B ,MEP_DTL_IMS_EXT  C
        WHERE A.COAR_COLL_NO = B.COLL_NO
        AND   C.MD_ACCT_ID = A.COAR_R_ACCT_ID;
		COMMIT; */


		INSERT INTO MEP_DTL_IMS_COLLAT(MD_ACCT_ID,MD_REPORT_DT,MD_ACCT_NO,MD_COLLAT_VALUE,COLL_TYP_CD)
        SELECT  DISTINCT C.MD_ACCT_ID ,C.MD_REPORT_DT,C.MD_ACCT_NO,B.COLL_VALUE_AMT,B.COLL_TYP_CD
        FROM COLLAT_ACCT_REL_HT_IMS  A,  COLLATERAL_HT_IMS B ,MEP_DTL_IMS_EXT  C
        WHERE A.COAR_COLL_NO = B.COLL_NO
        AND   C.MD_ACCT_ID = A.COAR_R_ACCT_ID;
        


		TRUNCATE TABLE  MEP_DTL_IMS_TEMP1;

		INSERT INTO MEP_DTL_IMS_TEMP1(MD_ACCT_ID,MD_COLLAT_VALUE)
        SELECT   MD_ACCT_ID,  MAX(MD_COLLAT_VALUE)
        FROM MEP_DTL_IMS_COLLAT A
        GROUP BY  MD_ACCT_ID;
        

		TRUNCATE TABLE  MEP_DTL_IMS_TEMP2;
		INSERT INTO MEP_DTL_IMS_TEMP2(MD_ACCT_ID,MD_COLL_TYP_CD  ,MD_COLLAT_VALUE )
        SELECT DISTINCT B.MD_ACCT_ID, MIN(A.COLL_TYP_CD),B.MD_COLLAT_VALUE FROM
        MEP_DTL_IMS_COLLAT A,MEP_DTL_IMS_TEMP1 B
        WHERE A.MD_ACCT_ID = B.MD_ACCT_ID
        AND  A.MD_COLLAT_VALUE = B.MD_COLLAT_VALUE
        GROUP BY B.MD_ACCT_ID,B.MD_COLLAT_VALUE;
		



		TRUNCATE TABLE  MEP_DTL_IMS_TEMP_NEW;
		INSERT INTO MEP_DTL_IMS_TEMP_NEW(MD_ACCT_NO,MD_REPORT_DT,MD_ACCT_ID,
	    MD_PREV_DELI,MD_PREV_BAL_OS,MD_COLL_TYP_CD)
        SELECT  DISTINCT A.MD_ACCT_NO, A.MD_REPORT_DT,A.MD_ACCT_ID,
	    C.IIS_MOS_IN_ARREARS,B.ACCT_CUR_BAL,D.MD_COLL_TYP_CD
        
FROM 
MEP_DTL_IMS_EXT A  LEFT OUTER JOIN MEP_DTL_IMS_TEMP2 D ON  A.MD_ACCT_ID =  D.MD_ACCT_ID
 LEFT OUTER JOIN MEP_ACCT_HT_IMS_PREV B  ON A.MD_ACCT_ID = ACCT_ACCT_ID 
 LEFT OUTER JOIN MEP_CR_PROVISIONS_HT_IMS_PREV C  ON  A.MD_ACCT_ID = IIS_ACCT_ID;

   


		INSERT INTO MEP_DTL_IMS (MD_ACCT_NO, MD_REPORT_DT,MD_ACCT_ID,
        MD_ENTITY,MD_PRODUCT,MD_APPL_SYS_ID,MD_ACCT_OPEN_DT,MD_ACCT_STAT,
        MD_ACCT_GL_GRP_CD,MD_BLOCK_CD,MD_CRDT_LMT,MD_OVERDUE_INT,MD_DRAW_LMT,
		MD_LST_PYMT_AMT,MD_MTH_ON_BOOK,MD_RENEW_DT,MD_PAST_DUE,MD_COLLAT_VALUE,MD_SEC_TYPE,
		MD_APR,MD_INDUSTRY,MD_LN_AGE,MD_PRINC_LN_AMT, MD_OS_AMT,MD_LN_SUB_PROD,
        MD_ACCT_TYP_CD,MD_PYMT_MTD,MD_UTILIZTN,MD_PREV_DELI,MD_PREV_BAL_OS,
		MD_AKPK, MD_WATCHLIST_FLAG,MD_IND_IMPAIRED,MD_NON_ACCRUAL,MD_REC_AMT_TOTAL,
        MD_RESCHED_CD,MD_WRITTEN_OFF,MD_GROSS_WRITTEN_OFF,MD_CLOSED_IND,MD_CLOSED,
		MD_PAYMENT,MD_REVENUE,MD_INT_LN_AMT,MD_OD_APPROV_DT,MD_COLL_TYP_CD)

		SELECT  E.MD_ACCT_NO, E.MD_REPORT_DT,E.MD_ACCT_ID,
        E.MD_ENTITY,E.MD_PRODUCT,E.MD_APPL_SYS_ID,E.MD_ACCT_OPEN_DT,E.MD_ACCT_STAT,
        CAST(E.MD_ACCT_GL_GRP_CD AS NUMERIC),E.MD_BLOCK_CD,E.MD_CRDT_LMT,E.MD_OVERDUE_INT,E.MD_DRAW_LMT,
		E.MD_LST_PYMT_AMT,E.MD_MTH_ON_BOOK,E.MD_RENEW_DT,E.MD_PAST_DUE,E.MD_COLLAT_VALUE,
		E.MD_SEC_TYPE,E.MD_APR,E.MD_INDUSTRY,E.MD_LN_AGE,E.MD_PRINC_LN_AMT,
		E.MD_OS_AMT,E.MD_LN_SUB_PROD,E.MD_ACCT_TYP_CD,E.MD_PYMT_MTD,E.MD_UTILIZTN,
		T.MD_PREV_DELI,T.MD_PREV_BAL_OS,E.MD_AKPK,E.MD_WATCHLIST_FLAG,E.MD_IND_IMPAIRED,
		E.MD_NON_ACCURAL,E.MD_REC_AMT_TOTAL,E.MD_RESCHED_CD,MD_WRITTEN_OFF,MD_GROSS_WRITTEN_OFF,
		MD_CLOSED_IND,MD_CLOSED,MD_PAYMENT,MD_REVENUE,MD_INT_LN_AMT,MD_OD_APPROV_DT,T.MD_COLL_TYP_CD
		FROM MEP_DTL_IMS_EXT E 
LEFT OUTER JOIN MEP_DTL_IMS_TEMP_NEW T ON E.MD_ACCT_ID = T.MD_ACCT_ID;
		

END;
	INSERT INTO MEP_LOG_IMS (ML_CYC_DT,ML_PROCESS_NAME,ML_RUN_START )
	VALUES  (P_DATE,'INSERT MEP_DTL_IMS FOR IMS-END',TO_CHAR(LOCALTIMESTAMP, 'DD-MON-YYYY HH:MI:SS AM') );
	
END;  -- GLOBAL END
$$
LANGUAGE PLPGSQL;
